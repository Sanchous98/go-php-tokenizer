394,"<?php
",1
392,"/*
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This software consists of voluntary contributions made by many individuals
 * and is licensed under the MIT license. For more information, see
 * <http://www.doctrine-project.org>.
 */",2
397,"

",18
375,namespace,20
397," ",20
316,"Doctrine\ORM",20
0,;,0
397,"

",20
354,use,22
397," ",22
316,"Doctrine\Common\Persistence\Mapping\RuntimeReflectionService",22
0,;,0
397,"
",22
354,use,23
397," ",23
316,"Doctrine\DBAL\LockMode",23
0,;,0
397,"
",23
354,use,24
397," ",24
316,"Doctrine\ORM\Internal\HydrationCompleteHandler",24
0,;,0
397,"
",24
354,use,25
397," ",25
316,"Doctrine\ORM\Mapping\Reflection\ReflectionPropertiesGetter",25
0,;,0
397,"
",25
354,use,26
397," ",26
313,Exception,26
0,;,0
397,"
",26
354,use,27
397," ",27
313,InvalidArgumentException,27
0,;,0
397,"
",27
354,use,28
397," ",28
313,UnexpectedValueException,28
0,;,0
397,"

",28
354,use,30
397," ",30
316,"Doctrine\Common\Collections\ArrayCollection",30
0,;,0
397,"
",30
354,use,31
397," ",31
316,"Doctrine\Common\Collections\Collection",31
0,;,0
397,"
",31
354,use,32
397," ",32
316,"Doctrine\Common\NotifyPropertyChanged",32
0,;,0
397,"
",32
354,use,33
397," ",33
316,"Doctrine\Common\PropertyChangedListener",33
0,;,0
397,"
",33
354,use,34
397," ",34
316,"Doctrine\Common\Persistence\ObjectManagerAware",34
0,;,0
397,"
",34
354,use,35
397," ",35
316,"Doctrine\ORM\Mapping\ClassMetadata",35
0,;,0
397,"
",35
354,use,36
397," ",36
316,"Doctrine\ORM\Proxy\Proxy",36
0,;,0
397,"

",36
354,use,38
397," ",38
316,"Doctrine\ORM\Event\LifecycleEventArgs",38
0,;,0
397,"
",38
354,use,39
397," ",39
316,"Doctrine\ORM\Event\PreUpdateEventArgs",39
0,;,0
397,"
",39
354,use,40
397," ",40
316,"Doctrine\ORM\Event\PreFlushEventArgs",40
0,;,0
397,"
",40
354,use,41
397," ",41
316,"Doctrine\ORM\Event\OnFlushEventArgs",41
0,;,0
397,"
",41
354,use,42
397," ",42
316,"Doctrine\ORM\Event\PostFlushEventArgs",42
0,;,0
397,"
",42
354,use,43
397," ",43
316,"Doctrine\ORM\Event\ListenersInvoker",43
0,;,0
397,"

",43
354,use,45
397," ",45
316,"Doctrine\ORM\Cache\Persister\CachedPersister",45
0,;,0
397,"
",45
354,use,46
397," ",46
316,"Doctrine\ORM\Persisters\Entity\BasicEntityPersister",46
0,;,0
397,"
",46
354,use,47
397," ",47
316,"Doctrine\ORM\Persisters\Entity\SingleTablePersister",47
0,;,0
397,"
",47
354,use,48
397," ",48
316,"Doctrine\ORM\Persisters\Entity\JoinedSubclassPersister",48
0,;,0
397,"
",48
354,use,49
397," ",49
316,"Doctrine\ORM\Persisters\Collection\OneToManyPersister",49
0,;,0
397,"
",49
354,use,50
397," ",50
316,"Doctrine\ORM\Persisters\Collection\ManyToManyPersister",50
0,;,0
397,"
",50
354,use,51
397," ",51
316,"Doctrine\ORM\Utility\IdentifierFlattener",51
0,;,0
397,"
",51
354,use,52
397," ",52
316,"Doctrine\ORM\Cache\AssociationCacheEntry",52
0,;,0
397,"

",52
393,"/**
 * The UnitOfWork is responsible for tracking changes to objects during an
 * ""object-level"" transaction and for writing out changes to the database
 * in the correct order.
 *
 * Internal note: This class contains highly performance-sensitive code.
 *
 * @since       2.0
 * @author      Benjamin Eberlei <kontakt@beberlei.de>
 * @author      Guilherme Blanco <guilhermeblanco@hotmail.com>
 * @author      Jonathan Wage <jonwage@gmail.com>
 * @author      Roman Borschel <roman@code-factory.org>
 * @author      Rob Caiger <rob@clocal.co.uk>
 */",54
397,"
",67
369,class,68
397," ",68
313,UnitOfWork,68
397," ",68
374,implements,68
397," ",68
313,PropertyChangedListener,68
397,"
",68
0,{,0
397,"
  ",69
393,"/**
   * An entity is in MANAGED state when its persistence is managed by an EntityManager.
   */",70
397,"
  ",72
349,const,73
397," ",73
313,STATE_MANAGED,73
397," ",73
0,=,0
397," ",73
311,1,73
0,;,0
397,"

  ",73
393,"/**
   * An entity is new if it has just been instantiated (i.e. using the ""new"" operator)
   * and is not (yet) managed by an EntityManager.
   */",75
397,"
  ",78
349,const,79
397," ",79
313,STATE_NEW,79
397," ",79
0,=,0
397," ",79
311,2,79
0,;,0
397,"

  ",79
393,"/**
   * A detached entity is an instance with persistent state and identity that is not
   * (or no longer) associated with an EntityManager (and a UnitOfWork).
   */",81
397,"
  ",84
349,const,85
397," ",85
313,STATE_DETACHED,85
397," ",85
0,=,0
397," ",85
311,3,85
0,;,0
397,"

  ",85
393,"/**
   * A removed entity instance is an instance with a persistent identity,
   * associated with an EntityManager, whose persistent state will be deleted
   * on commit.
   */",87
397,"
  ",91
349,const,92
397," ",92
313,STATE_REMOVED,92
397," ",92
0,=,0
397," ",92
311,4,92
0,;,0
397,"

  ",92
393,"/**
   * Hint used to collect all primary keys of associated entities during hydration
   * and execute it in a dedicated query afterwards
   * @see https://doctrine-orm.readthedocs.org/en/latest/reference/dql-doctrine-query-language.html?highlight=eager#temporarily-change-fetch-mode-in-dql
   */",94
397,"
  ",98
349,const,99
397," ",99
313,HINT_DEFEREAGERLOAD,99
397," ",99
0,=,0
397," ",99
320,'deferEagerLoad',99
0,;,0
397,"

  ",99
393,"/**
   * The identity map that holds references to all managed entities that have
   * an identity. The entities are grouped by their class name.
   * Since all classes in a hierarchy must share the same identifier set,
   * we always take the root class name of the hierarchy.
   *
   * @var array
   */",101
397,"
  ",108
360,private,109
397," ",109
317,$identityMap,109
397," ",109
0,=,0
397," ",109
377,array,109
0,(,0
0,),0
0,;,0
397,"

  ",109
393,"/**
   * Map of all identifiers of managed entities.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",111
397,"
  ",116
360,private,117
397," ",117
317,$entityIdentifiers,117
397," ",117
0,=,0
397," ",117
377,array,117
0,(,0
0,),0
0,;,0
397,"

  ",117
393,"/**
   * Map of the original entity data of managed entities.
   * Keys are object ids (spl_object_hash). This is used for calculating changesets
   * at commit time.
   *
   * Internal note: Note that PHPs ""copy-on-write"" behavior helps a lot with memory usage.
   *                A value will only really be copied if the value in the entity is modified
   *                by the user.
   *
   * @var array
   */",119
397,"
  ",129
360,private,130
397," ",130
317,$originalEntityData,130
397," ",130
0,=,0
397," ",130
377,array,130
0,(,0
0,),0
0,;,0
397,"

  ",130
393,"/**
   * Map of entity changes. Keys are object ids (spl_object_hash).
   * Filled at the beginning of a commit of the UnitOfWork and cleaned at the end.
   *
   * @var array
   */",132
397,"
  ",137
360,private,138
397," ",138
317,$entityChangeSets,138
397," ",138
0,=,0
397," ",138
377,array,138
0,(,0
0,),0
0,;,0
397,"

  ",138
393,"/**
   * The (cached) states of any known entities.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",140
397,"
  ",145
360,private,146
397," ",146
317,$entityStates,146
397," ",146
0,=,0
397," ",146
377,array,146
0,(,0
0,),0
0,;,0
397,"

  ",146
393,"/**
   * Map of entities that are scheduled for dirty checking at commit time.
   * This is only used for entities with a change tracking policy of DEFERRED_EXPLICIT.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",148
397,"
  ",154
360,private,155
397," ",155
317,$scheduledForSynchronization,155
397," ",155
0,=,0
397," ",155
377,array,155
0,(,0
0,),0
0,;,0
397,"

  ",155
393,"/**
   * A list of all pending entity insertions.
   *
   * @var array
   */",157
397,"
  ",161
360,private,162
397," ",162
317,$entityInsertions,162
397," ",162
0,=,0
397," ",162
377,array,162
0,(,0
0,),0
0,;,0
397,"

  ",162
393,"/**
   * A list of all pending entity updates.
   *
   * @var array
   */",164
397,"
  ",168
360,private,169
397," ",169
317,$entityUpdates,169
397," ",169
0,=,0
397," ",169
377,array,169
0,(,0
0,),0
0,;,0
397,"

  ",169
393,"/**
   * Any pending extra updates that have been scheduled by persisters.
   *
   * @var array
   */",171
397,"
  ",175
360,private,176
397," ",176
317,$extraUpdates,176
397," ",176
0,=,0
397," ",176
377,array,176
0,(,0
0,),0
0,;,0
397,"

  ",176
393,"/**
   * A list of all pending entity deletions.
   *
   * @var array
   */",178
397,"
  ",182
360,private,183
397," ",183
317,$entityDeletions,183
397," ",183
0,=,0
397," ",183
377,array,183
0,(,0
0,),0
0,;,0
397,"

  ",183
393,"/**
   * All pending collection deletions.
   *
   * @var array
   */",185
397,"
  ",189
360,private,190
397," ",190
317,$collectionDeletions,190
397," ",190
0,=,0
397," ",190
377,array,190
0,(,0
0,),0
0,;,0
397,"

  ",190
393,"/**
   * All pending collection updates.
   *
   * @var array
   */",192
397,"
  ",196
360,private,197
397," ",197
317,$collectionUpdates,197
397," ",197
0,=,0
397," ",197
377,array,197
0,(,0
0,),0
0,;,0
397,"

  ",197
393,"/**
   * List of collections visited during changeset calculation on a commit-phase of a UnitOfWork.
   * At the end of the UnitOfWork all these collections will make new snapshots
   * of their data.
   *
   * @var array
   */",199
397,"
  ",205
360,private,206
397," ",206
317,$visitedCollections,206
397," ",206
0,=,0
397," ",206
377,array,206
0,(,0
0,),0
0,;,0
397,"

  ",206
393,"/**
   * The EntityManager that ""owns"" this UnitOfWork instance.
   *
   * @var EntityManagerInterface
   */",208
397,"
  ",212
360,private,213
397," ",213
317,$em,213
0,;,0
397,"

  ",213
393,"/**
   * The calculator used to calculate the order in which changes to
   * entities need to be written to the database.
   *
   * @var \Doctrine\ORM\Internal\CommitOrderCalculator
   */",215
397,"
  ",220
360,private,221
397," ",221
317,$commitOrderCalculator,221
0,;,0
397,"

  ",221
393,"/**
   * The entity persister instances used to persist entity instances.
   *
   * @var array
   */",223
397,"
  ",227
360,private,228
397," ",228
317,$persisters,228
397," ",228
0,=,0
397," ",228
377,array,228
0,(,0
0,),0
0,;,0
397,"

  ",228
393,"/**
   * The collection persister instances used to persist collections.
   *
   * @var array
   */",230
397,"
  ",234
360,private,235
397," ",235
317,$collectionPersisters,235
397," ",235
0,=,0
397," ",235
377,array,235
0,(,0
0,),0
0,;,0
397,"

  ",235
393,"/**
   * The EventManager used for dispatching events.
   *
   * @var \Doctrine\Common\EventManager
   */",237
397,"
  ",241
360,private,242
397," ",242
317,$evm,242
0,;,0
397,"

  ",242
393,"/**
   * The ListenersInvoker used for dispatching events.
   *
   * @var \Doctrine\ORM\Event\ListenersInvoker
   */",244
397,"
  ",248
360,private,249
397," ",249
317,$listenersInvoker,249
0,;,0
397,"

  ",249
393,"/**
   * The IdentifierFlattener used for manipulating identifiers
   *
   * @var \Doctrine\ORM\Utility\IdentifierFlattener
   */",251
397,"
  ",255
360,private,256
397," ",256
317,$identifierFlattener,256
0,;,0
397,"

  ",256
393,"/**
   * Orphaned entities that are scheduled for removal.
   *
   * @var array
   */",258
397,"
  ",262
360,private,263
397," ",263
317,$orphanRemovals,263
397," ",263
0,=,0
397," ",263
377,array,263
0,(,0
0,),0
0,;,0
397,"

  ",263
393,"/**
   * Read-Only objects are never evaluated
   *
   * @var array
   */",265
397,"
  ",269
360,private,270
397," ",270
317,$readOnlyObjects,270
397," ",270
0,=,0
397," ",270
377,array,270
0,(,0
0,),0
0,;,0
397,"

  ",270
393,"/**
   * Map of Entity Class-Names and corresponding IDs that should eager loaded when requested.
   *
   * @var array
   */",272
397,"
  ",276
360,private,277
397," ",277
317,$eagerLoadingEntities,277
397," ",277
0,=,0
397," ",277
377,array,277
0,(,0
0,),0
0,;,0
397,"

  ",277
393,"/**
   * @var boolean
   */",279
397,"
  ",281
361,protected,282
397," ",282
317,$hasCache,282
397," ",282
0,=,0
397," ",282
313,false,282
0,;,0
397,"

  ",282
393,"/**
   * Helper for handling completion of hydration
   *
   * @var HydrationCompleteHandler
   */",284
397,"
  ",288
360,private,289
397," ",289
317,$hydrationCompleteHandler,289
0,;,0
397,"

  ",289
393,"/**
   * @var ReflectionPropertiesGetter
   */",291
397,"
  ",293
360,private,294
397," ",294
317,$reflectionPropertiesGetter,294
0,;,0
397,"

  ",294
393,"/**
   * Initializes a new UnitOfWork instance, bound to the given EntityManager.
   *
   * @param EntityManagerInterface $em
   */",296
397,"
  ",300
362,public,301
397," ",301
347,function,301
397," ",301
313,__construct,301
0,(,0
313,EntityManagerInterface,301
397," ",301
317,$em,301
0,),0
397,"
  ",301
0,{,0
397,"
    ",302
317,$this,303
390,->,303
313,em,303
397,"                         ",303
0,=,0
397," ",303
317,$em,303
0,;,0
397,"
    ",303
317,$this,304
390,->,304
313,evm,304
397,"                        ",304
0,=,0
397," ",304
317,$em,304
390,->,304
313,getEventManager,304
0,(,0
0,),0
0,;,0
397,"
    ",304
317,$this,305
390,->,305
313,listenersInvoker,305
397,"           ",305
0,=,0
397," ",305
324,new,305
397," ",305
313,ListenersInvoker,305
0,(,0
317,$em,305
0,),0
0,;,0
397,"
    ",305
317,$this,306
390,->,306
313,hasCache,306
397,"                   ",306
0,=,0
397," ",306
317,$em,306
390,->,306
313,getConfiguration,306
0,(,0
0,),0
390,->,306
313,isSecondLevelCacheEnabled,306
0,(,0
0,),0
0,;,0
397,"
    ",306
317,$this,307
390,->,307
313,identifierFlattener,307
397,"        ",307
0,=,0
397," ",307
324,new,307
397," ",307
313,IdentifierFlattener,307
0,(,0
317,$this,307
0,",",0
397," ",307
317,$em,307
390,->,307
313,getMetadataFactory,307
0,(,0
0,),0
0,),0
0,;,0
397,"
    ",307
317,$this,308
390,->,308
313,hydrationCompleteHandler,308
397,"   ",308
0,=,0
397," ",308
324,new,308
397," ",308
313,HydrationCompleteHandler,308
0,(,0
317,$this,308
390,->,308
313,listenersInvoker,308
0,",",0
397," ",308
317,$em,308
0,),0
0,;,0
397,"
    ",308
317,$this,309
390,->,309
313,reflectionPropertiesGetter,309
397," ",309
0,=,0
397," ",309
324,new,309
397," ",309
313,ReflectionPropertiesGetter,309
0,(,0
324,new,309
397," ",309
313,RuntimeReflectionService,309
0,(,0
0,),0
0,),0
0,;,0
397,"
  ",309
0,},0
397,"

  ",310
393,"/**
   * Commits the UnitOfWork, executing all operations that have been postponed
   * up to this point. The state of all managed entities will be synchronized with
   * the database.
   *
   * The operations are executed in the following order:
   *
   * 1) All entity insertions
   * 2) All entity updates
   * 3) All collection deletions
   * 4) All collection updates
   * 5) All entity deletions
   *
   * @param null|object|array $entity
   *
   * @return void
   *
   * @throws \Exception
   */",312
397,"
  ",330
362,public,331
397," ",331
347,function,331
397," ",331
313,commit,331
0,(,0
317,$entity,331
397," ",331
0,=,0
397," ",331
313,null,331
0,),0
397,"
  ",331
0,{,0
397,"
    ",332
392,"// Raise preFlush",333
397,"
    ",333
326,if,334
397," ",334
0,(,0
317,$this,334
390,->,334
313,evm,334
390,->,334
313,hasListeners,334
0,(,0
313,Events,334
402,::,334
313,preFlush,334
0,),0
0,),0
397," ",334
0,{,0
397,"
      ",334
317,$this,335
390,->,335
313,evm,335
390,->,335
313,dispatchEvent,335
0,(,0
313,Events,335
402,::,335
313,preFlush,335
0,",",0
397," ",335
324,new,335
397," ",335
313,PreFlushEventArgs,335
0,(,0
317,$this,335
390,->,335
313,em,335
0,),0
0,),0
0,;,0
397,"
    ",335
0,},0
397,"

    ",336
392,"// Compute changes done since last commit.",338
397,"
    ",338
326,if,339
397," ",339
0,(,0
317,$entity,339
397," ",339
291,===,339
397," ",339
313,null,339
0,),0
397," ",339
0,{,0
397,"
      ",339
317,$this,340
390,->,340
313,computeChangeSets,340
0,(,0
0,),0
0,;,0
397,"
    ",340
0,},0
397," ",341
309,elseif,341
397," ",341
0,(,0
313,is_object,341
0,(,0
317,$entity,341
0,),0
0,),0
397," ",341
0,{,0
397,"
      ",341
317,$this,342
390,->,342
313,computeSingleEntityChangeSet,342
0,(,0
317,$entity,342
0,),0
0,;,0
397,"
    ",342
0,},0
397," ",343
309,elseif,343
397," ",343
0,(,0
313,is_array,343
0,(,0
317,$entity,343
0,),0
0,),0
397," ",343
0,{,0
397,"
      ",343
334,foreach,344
397," ",344
0,(,0
317,$entity,344
397," ",344
338,as,344
397," ",344
317,$object,344
0,),0
397," ",344
0,{,0
397,"
        ",344
317,$this,345
390,->,345
313,computeSingleEntityChangeSet,345
0,(,0
317,$object,345
0,),0
0,;,0
397,"
      ",345
0,},0
397,"
    ",346
0,},0
397,"

    ",347
326,if,349
397," ",349
0,(,0
397," ",349
0,!,0
397," ",349
0,(,0
317,$this,349
390,->,349
313,entityInsertions,349
397," ",349
285,||,349
397,"
      ",349
317,$this,350
390,->,350
313,entityDeletions,350
397," ",350
285,||,350
397,"
      ",350
317,$this,351
390,->,351
313,entityUpdates,351
397," ",351
285,||,351
397,"
      ",351
317,$this,352
390,->,352
313,collectionUpdates,352
397," ",352
285,||,352
397,"
      ",352
317,$this,353
390,->,353
313,collectionDeletions,353
397," ",353
285,||,353
397,"
      ",353
317,$this,354
390,->,354
313,orphanRemovals,354
0,),0
0,),0
397," ",354
0,{,0
397,"
      ",354
317,$this,355
390,->,355
313,dispatchOnFlushEvent,355
0,(,0
0,),0
0,;,0
397,"
      ",355
317,$this,356
390,->,356
313,dispatchPostFlushEvent,356
0,(,0
0,),0
0,;,0
397,"

      ",356
350,return,358
0,;,0
397," ",358
392,"// Nothing to do.",358
397,"
    ",358
0,},0
397,"

    ",359
326,if,361
397," ",361
0,(,0
317,$this,361
390,->,361
313,orphanRemovals,361
0,),0
397," ",361
0,{,0
397,"
      ",361
334,foreach,362
397," ",362
0,(,0
317,$this,362
390,->,362
313,orphanRemovals,362
397," ",362
338,as,362
397," ",362
317,$orphan,362
0,),0
397," ",362
0,{,0
397,"
        ",362
317,$this,363
390,->,363
313,remove,363
0,(,0
317,$orphan,363
0,),0
0,;,0
397,"
      ",363
0,},0
397,"
    ",364
0,},0
397,"

    ",365
317,$this,367
390,->,367
313,dispatchOnFlushEvent,367
0,(,0
0,),0
0,;,0
397,"

    ",367
392,"// Now we need a commit order to maintain referential integrity",369
397,"
    ",369
317,$commitOrder,370
397," ",370
0,=,0
397," ",370
317,$this,370
390,->,370
313,getCommitOrder,370
0,(,0
0,),0
0,;,0
397,"

    ",370
317,$conn,372
397," ",372
0,=,0
397," ",372
317,$this,372
390,->,372
313,em,372
390,->,372
313,getConnection,372
0,(,0
0,),0
0,;,0
397,"
    ",372
317,$conn,373
390,->,373
313,beginTransaction,373
0,(,0
0,),0
0,;,0
397,"

    ",373
351,try,375
397," ",375
0,{,0
397,"
      ",375
326,if,376
397," ",376
0,(,0
317,$this,376
390,->,376
313,entityInsertions,376
0,),0
397," ",376
0,{,0
397,"
        ",376
334,foreach,377
397," ",377
0,(,0
317,$commitOrder,377
397," ",377
338,as,377
397," ",377
317,$class,377
0,),0
397," ",377
0,{,0
397,"
          ",377
317,$this,378
390,->,378
313,executeInserts,378
0,(,0
317,$class,378
0,),0
0,;,0
397,"
        ",378
0,},0
397,"
      ",379
0,},0
397,"

      ",380
326,if,382
397," ",382
0,(,0
317,$this,382
390,->,382
313,entityUpdates,382
0,),0
397," ",382
0,{,0
397,"
        ",382
334,foreach,383
397," ",383
0,(,0
317,$commitOrder,383
397," ",383
338,as,383
397," ",383
317,$class,383
0,),0
397," ",383
0,{,0
397,"
          ",383
317,$this,384
390,->,384
313,executeUpdates,384
0,(,0
317,$class,384
0,),0
0,;,0
397,"
        ",384
0,},0
397,"
      ",385
0,},0
397,"

      ",386
392,"// Extra updates that were requested by persisters.",388
397,"
      ",388
326,if,389
397," ",389
0,(,0
317,$this,389
390,->,389
313,extraUpdates,389
0,),0
397," ",389
0,{,0
397,"
        ",389
317,$this,390
390,->,390
313,executeExtraUpdates,390
0,(,0
0,),0
0,;,0
397,"
      ",390
0,},0
397,"

      ",391
392,"// Collection deletions (deletions of complete collections)",393
397,"
      ",393
334,foreach,394
397," ",394
0,(,0
317,$this,394
390,->,394
313,collectionDeletions,394
397," ",394
338,as,394
397," ",394
317,$collectionToDelete,394
0,),0
397," ",394
0,{,0
397,"
        ",394
317,$this,395
390,->,395
313,getCollectionPersister,395
0,(,0
317,$collectionToDelete,395
390,->,395
313,getMapping,395
0,(,0
0,),0
0,),0
390,->,395
313,delete,395
0,(,0
317,$collectionToDelete,395
0,),0
0,;,0
397,"
      ",395
0,},0
397,"

      ",396
392,"// Collection updates (deleteRows, updateRows, insertRows)",398
397,"
      ",398
334,foreach,399
397," ",399
0,(,0
317,$this,399
390,->,399
313,collectionUpdates,399
397," ",399
338,as,399
397," ",399
317,$collectionToUpdate,399
0,),0
397," ",399
0,{,0
397,"
        ",399
317,$this,400
390,->,400
313,getCollectionPersister,400
0,(,0
317,$collectionToUpdate,400
390,->,400
313,getMapping,400
0,(,0
0,),0
0,),0
390,->,400
313,update,400
0,(,0
317,$collectionToUpdate,400
0,),0
0,;,0
397,"
      ",400
0,},0
397,"

      ",401
392,"// Entity deletions come last and need to be in reverse commit order",403
397,"
      ",403
326,if,404
397," ",404
0,(,0
317,$this,404
390,->,404
313,entityDeletions,404
0,),0
397," ",404
0,{,0
397,"
        ",404
332,for,405
397," ",405
0,(,0
317,$count,405
397," ",405
0,=,0
397," ",405
313,count,405
0,(,0
317,$commitOrder,405
0,),0
0,",",0
397," ",405
317,$i,405
397," ",405
0,=,0
397," ",405
317,$count,405
397," ",405
0,-,0
397," ",405
311,1,405
0,;,0
397," ",405
317,$i,405
397," ",405
295,>=,405
397," ",405
311,0,405
397," ",405
286,&&,405
397," ",405
317,$this,405
390,->,405
313,entityDeletions,405
0,;,0
397," ",405
389,--,405
317,$i,405
0,),0
397," ",405
0,{,0
397,"
          ",405
317,$this,406
390,->,406
313,executeDeletions,406
0,(,0
317,$commitOrder,406
0,[,0
317,$i,406
0,],0
0,),0
0,;,0
397,"
        ",406
0,},0
397,"
      ",407
0,},0
397,"

      ",408
317,$conn,410
390,->,410
313,commit,410
0,(,0
0,),0
0,;,0
397,"
    ",410
0,},0
397," ",411
352,catch,411
397," ",411
0,(,0
313,Exception,411
397," ",411
317,$e,411
0,),0
397," ",411
0,{,0
397,"
      ",411
317,$this,412
390,->,412
313,em,412
390,->,412
313,close,412
0,(,0
0,),0
0,;,0
397,"
      ",412
317,$conn,413
390,->,413
313,rollback,413
0,(,0
0,),0
0,;,0
397,"

      ",413
317,$this,415
390,->,415
313,afterTransactionRolledBack,415
0,(,0
0,),0
0,;,0
397,"

      ",415
258,throw,417
397," ",417
317,$e,417
0,;,0
397,"
    ",417
0,},0
397,"

    ",418
317,$this,420
390,->,420
313,afterTransactionComplete,420
0,(,0
0,),0
0,;,0
397,"

    ",420
392,"// Take new snapshots from visited collections",422
397,"
    ",422
334,foreach,423
397," ",423
0,(,0
317,$this,423
390,->,423
313,visitedCollections,423
397," ",423
338,as,423
397," ",423
317,$coll,423
0,),0
397," ",423
0,{,0
397,"
      ",423
317,$coll,424
390,->,424
313,takeSnapshot,424
0,(,0
0,),0
0,;,0
397,"
    ",424
0,},0
397,"

    ",425
317,$this,427
390,->,427
313,dispatchPostFlushEvent,427
0,(,0
0,),0
0,;,0
397,"

    ",427
392,"// Clear up",429
397,"
    ",429
317,$this,430
390,->,430
313,entityInsertions,430
397," ",430
0,=,0
397,"
    ",430
317,$this,431
390,->,431
313,entityUpdates,431
397," ",431
0,=,0
397,"
    ",431
317,$this,432
390,->,432
313,entityDeletions,432
397," ",432
0,=,0
397,"
    ",432
317,$this,433
390,->,433
313,extraUpdates,433
397," ",433
0,=,0
397,"
    ",433
317,$this,434
390,->,434
313,entityChangeSets,434
397," ",434
0,=,0
397,"
    ",434
317,$this,435
390,->,435
313,collectionUpdates,435
397," ",435
0,=,0
397,"
    ",435
317,$this,436
390,->,436
313,collectionDeletions,436
397," ",436
0,=,0
397,"
    ",436
317,$this,437
390,->,437
313,visitedCollections,437
397," ",437
0,=,0
397,"
    ",437
317,$this,438
390,->,438
313,scheduledForSynchronization,438
397," ",438
0,=,0
397,"
    ",438
317,$this,439
390,->,439
313,orphanRemovals,439
397," ",439
0,=,0
397," ",439
377,array,439
0,(,0
0,),0
0,;,0
397,"
  ",439
0,},0
397,"

  ",440
393,"/**
   * Computes the changesets of all entities scheduled for insertion.
   *
   * @return void
   */",442
397,"
  ",446
360,private,447
397," ",447
347,function,447
397," ",447
313,computeScheduleInsertsChangeSets,447
0,(,0
0,),0
397,"
  ",447
0,{,0
397,"
    ",448
334,foreach,449
397," ",449
0,(,0
317,$this,449
390,->,449
313,entityInsertions,449
397," ",449
338,as,449
397," ",449
317,$entity,449
0,),0
397," ",449
0,{,0
397,"
      ",449
317,$class,450
397," ",450
0,=,0
397," ",450
317,$this,450
390,->,450
313,em,450
390,->,450
313,getClassMetadata,450
0,(,0
313,get_class,450
0,(,0
317,$entity,450
0,),0
0,),0
0,;,0
397,"

      ",450
317,$this,452
390,->,452
313,computeChangeSet,452
0,(,0
317,$class,452
0,",",0
397," ",452
317,$entity,452
0,),0
0,;,0
397,"
    ",452
0,},0
397,"
  ",453
0,},0
397,"

  ",454
393,"/**
   * Only flushes the given entity according to a ruleset that keeps the UoW consistent.
   *
   * 1. All entities scheduled for insertion, (orphan) removals and changes in collections are processed as well!
   * 2. Read Only entities are skipped.
   * 3. Proxies are skipped.
   * 4. Only if entity is properly managed.
   *
   * @param object $entity
   *
   * @return void
   *
   * @throws \InvalidArgumentException
   */",456
397,"
  ",469
360,private,470
397," ",470
347,function,470
397," ",470
313,computeSingleEntityChangeSet,470
0,(,0
317,$entity,470
0,),0
397,"
  ",470
0,{,0
397,"
    ",471
317,$state,472
397," ",472
0,=,0
397," ",472
317,$this,472
390,->,472
313,getEntityState,472
0,(,0
317,$entity,472
0,),0
0,;,0
397,"

    ",472
326,if,474
397," ",474
0,(,0
317,$state,474
397," ",474
292,!==,474
397," ",474
313,self,474
402,::,474
313,STATE_MANAGED,474
397," ",474
286,&&,474
397," ",474
317,$state,474
397," ",474
292,!==,474
397," ",474
313,self,474
402,::,474
313,STATE_REMOVED,474
0,),0
397," ",474
0,{,0
397,"
      ",474
258,throw,475
397," ",475
324,new,475
397," ",475
314,"\InvalidArgumentException",475
0,(,0
320,"""Entity has to be managed or scheduled for removal for single computation """,475
397," ",475
0,.,0
397," ",475
313,self,475
402,::,475
313,objToStr,475
0,(,0
317,$entity,475
0,),0
0,),0
0,;,0
397,"
    ",475
0,},0
397,"

    ",476
317,$class,478
397," ",478
0,=,0
397," ",478
317,$this,478
390,->,478
313,em,478
390,->,478
313,getClassMetadata,478
0,(,0
313,get_class,478
0,(,0
317,$entity,478
0,),0
0,),0
0,;,0
397,"

    ",478
326,if,480
397," ",480
0,(,0
317,$state,480
397," ",480
291,===,480
397," ",480
313,self,480
402,::,480
313,STATE_MANAGED,480
397," ",480
286,&&,480
397," ",480
317,$class,480
390,->,480
313,isChangeTrackingDeferredImplicit,480
0,(,0
0,),0
0,),0
397," ",480
0,{,0
397,"
      ",480
317,$this,481
390,->,481
313,persist,481
0,(,0
317,$entity,481
0,),0
0,;,0
397,"
    ",481
0,},0
397,"

    ",482
392,"// Compute changes for INSERTed entities first. This must always happen even in this case.",484
397,"
    ",484
317,$this,485
390,->,485
313,computeScheduleInsertsChangeSets,485
0,(,0
0,),0
0,;,0
397,"

    ",485
326,if,487
397," ",487
0,(,0
317,$class,487
390,->,487
313,isReadOnly,487
0,),0
397," ",487
0,{,0
397,"
      ",487
350,return,488
0,;,0
397,"
    ",488
0,},0
397,"

    ",489
392,"// Ignore uninitialized proxy objects",491
397,"
    ",491
326,if,492
397," ",492
0,(,0
317,$entity,492
397," ",492
298,instanceof,492
397," ",492
313,Proxy,492
397," ",492
286,&&,492
397," ",492
0,!,0
397," ",492
317,$entity,492
390,->,492
313,__isInitialized__,492
0,),0
397," ",492
0,{,0
397,"
      ",492
350,return,493
0,;,0
397,"
    ",493
0,},0
397,"

    ",494
392,"// Only MANAGED entities that are NOT SCHEDULED FOR INSERTION OR DELETION are processed here.",496
397,"
    ",496
317,$oid,497
397," ",497
0,=,0
397," ",497
313,spl_object_hash,497
0,(,0
317,$entity,497
0,),0
0,;,0
397,"

    ",497
326,if,499
397," ",499
0,(,0
397," ",499
0,!,0
397," ",499
366,isset,499
0,(,0
317,$this,499
390,->,499
313,entityInsertions,499
0,[,0
317,$oid,499
0,],0
0,),0
397," ",499
286,&&,499
397," ",499
0,!,0
397," ",499
366,isset,499
0,(,0
317,$this,499
390,->,499
313,entityDeletions,499
0,[,0
317,$oid,499
0,],0
0,),0
397," ",499
286,&&,499
397," ",499
366,isset,499
0,(,0
317,$this,499
390,->,499
313,entityStates,499
0,[,0
317,$oid,499
0,],0
0,),0
0,),0
397," ",499
0,{,0
397,"
      ",499
317,$this,500
390,->,500
313,computeChangeSet,500
0,(,0
317,$class,500
0,",",0
397," ",500
317,$entity,500
0,),0
0,;,0
397,"
    ",500
0,},0
397,"
  ",501
0,},0
397,"

  ",502
393,"/**
   * Executes any extra updates that have been scheduled.
   */",504
397,"
  ",506
360,private,507
397," ",507
347,function,507
397," ",507
313,executeExtraUpdates,507
0,(,0
0,),0
397,"
  ",507
0,{,0
397,"
    ",508
334,foreach,509
397," ",509
0,(,0
317,$this,509
390,->,509
313,extraUpdates,509
397," ",509
338,as,509
397," ",509
317,$oid,509
397," ",509
269,=>,509
397," ",509
317,$update,509
0,),0
397," ",509
0,{,0
397,"
      ",509
376,list,510
397," ",510
0,(,0
317,$entity,510
0,",",0
397," ",510
317,$changeset,510
0,),0
397," ",510
0,=,0
397," ",510
317,$update,510
0,;,0
397,"

      ",510
317,$this,512
390,->,512
313,entityChangeSets,512
0,[,0
317,$oid,512
0,],0
397," ",512
0,=,0
397," ",512
317,$changeset,512
0,;,0
397,"
      ",512
317,$this,513
390,->,513
313,getEntityPersister,513
0,(,0
313,get_class,513
0,(,0
317,$entity,513
0,),0
0,),0
390,->,513
313,update,513
0,(,0
317,$entity,513
0,),0
0,;,0
397,"
    ",513
0,},0
397,"

    ",514
317,$this,516
390,->,516
313,extraUpdates,516
397," ",516
0,=,0
397," ",516
377,array,516
0,(,0
0,),0
0,;,0
397,"
  ",516
0,},0
397,"

  ",517
393,"/**
   * Gets the changeset for an entity.
   *
   * @param object $entity
   *
   * @return array
   */",519
397,"
  ",525
362,public,526
397," ",526
347,function,526
397," ",526
313,getEntityChangeSet,526
0,(,0
317,$entity,526
0,),0
397,"
  ",526
0,{,0
397,"
    ",527
317,$oid,528
397," ",528
0,=,0
397," ",528
313,spl_object_hash,528
0,(,0
317,$entity,528
0,),0
0,;,0
397,"

    ",528
326,if,530
397," ",530
0,(,0
366,isset,530
0,(,0
317,$this,530
390,->,530
313,entityChangeSets,530
0,[,0
317,$oid,530
0,],0
0,),0
0,),0
397," ",530
0,{,0
397,"
      ",530
350,return,531
397," ",531
317,$this,531
390,->,531
313,entityChangeSets,531
0,[,0
317,$oid,531
0,],0
0,;,0
397,"
    ",531
0,},0
397,"

    ",532
350,return,534
397," ",534
377,array,534
0,(,0
0,),0
0,;,0
397,"
  ",534
0,},0
397,"

  ",535
393,"/**
   * Computes the changes that happened to a single entity.
   *
   * Modifies/populates the following properties:
   *
   * {@link _originalEntityData}
   * If the entity is NEW or MANAGED but not yet fully persisted (only has an id)
   * then it was not fetched from the database and therefore we have no original
   * entity data yet. All of the current entity data is stored as the original entity data.
   *
   * {@link _entityChangeSets}
   * The changes detected on all properties of the entity are stored there.
   * A change is a tuple array where the first entry is the old value and the second
   * entry is the new value of the property. Changesets are used by persisters
   * to INSERT/UPDATE the persistent entity state.
   *
   * {@link _entityUpdates}
   * If the entity is already fully MANAGED (has been fetched from the database before)
   * and any changes to its properties are detected, then a reference to the entity is stored
   * there to mark it for an update.
   *
   * {@link _collectionDeletions}
   * If a PersistentCollection has been de-referenced in a fully MANAGED entity,
   * then this collection is marked for deletion.
   *
   * @ignore
   *
   * @internal Don't call from the outside.
   *
   * @param ClassMetadata $class The class descriptor of the entity.
   * @param object $entity The entity for which to compute the changes.
   *
   * @return void
   */",537
397,"
  ",570
362,public,571
397," ",571
347,function,571
397," ",571
313,computeChangeSet,571
0,(,0
313,ClassMetadata,571
397," ",571
317,$class,571
0,",",0
397," ",571
317,$entity,571
0,),0
397,"
  ",571
0,{,0
397,"
    ",572
317,$oid,573
397," ",573
0,=,0
397," ",573
313,spl_object_hash,573
0,(,0
317,$entity,573
0,),0
0,;,0
397,"

    ",573
326,if,575
397," ",575
0,(,0
366,isset,575
0,(,0
317,$this,575
390,->,575
313,readOnlyObjects,575
0,[,0
317,$oid,575
0,],0
0,),0
0,),0
397," ",575
0,{,0
397,"
      ",575
350,return,576
0,;,0
397,"
    ",576
0,},0
397,"

    ",577
326,if,579
397," ",579
0,(,0
397," ",579
0,!,0
397," ",579
317,$class,579
390,->,579
313,isInheritanceTypeNone,579
0,(,0
0,),0
0,),0
397," ",579
0,{,0
397,"
      ",579
317,$class,580
397," ",580
0,=,0
397," ",580
317,$this,580
390,->,580
313,em,580
390,->,580
313,getClassMetadata,580
0,(,0
313,get_class,580
0,(,0
317,$entity,580
0,),0
0,),0
0,;,0
397,"
    ",580
0,},0
397,"

    ",581
317,$invoke,583
397," ",583
0,=,0
397," ",583
317,$this,583
390,->,583
313,listenersInvoker,583
390,->,583
313,getSubscribedSystems,583
0,(,0
317,$class,583
0,",",0
397," ",583
313,Events,583
402,::,583
313,preFlush,583
0,),0
397," ",583
287,&,583
397," ",583
0,~,0
313,ListenersInvoker,583
402,::,583
313,INVOKE_MANAGER,583
0,;,0
397,"

    ",583
326,if,585
397," ",585
0,(,0
317,$invoke,585
397," ",585
292,!==,585
397," ",585
313,ListenersInvoker,585
402,::,585
313,INVOKE_NONE,585
0,),0
397," ",585
0,{,0
397,"
      ",585
317,$this,586
390,->,586
313,listenersInvoker,586
390,->,586
313,invoke,586
0,(,0
317,$class,586
0,",",0
397," ",586
313,Events,586
402,::,586
313,preFlush,586
0,",",0
397," ",586
317,$entity,586
0,",",0
397," ",586
324,new,586
397," ",586
313,PreFlushEventArgs,586
0,(,0
317,$this,586
390,->,586
313,em,586
0,),0
0,",",0
397," ",586
317,$invoke,586
0,),0
0,;,0
397,"
    ",586
0,},0
397,"

    ",587
317,$actualData,589
397," ",589
0,=,0
397," ",589
377,array,589
0,(,0
0,),0
0,;,0
397,"

    ",589
334,foreach,591
397," ",591
0,(,0
317,$class,591
390,->,591
313,reflFields,591
397," ",591
338,as,591
397," ",591
317,$name,591
397," ",591
269,=>,591
397," ",591
317,$refProp,591
0,),0
397," ",591
0,{,0
397,"
      ",591
317,$value,592
397," ",592
0,=,0
397," ",592
317,$refProp,592
390,->,592
313,getValue,592
0,(,0
317,$entity,592
0,),0
0,;,0
397,"

      ",592
326,if,594
397," ",594
0,(,0
317,$class,594
390,->,594
313,isCollectionValuedAssociation,594
0,(,0
317,$name,594
0,),0
397," ",594
286,&&,594
397," ",594
317,$value,594
397," ",594
292,!==,594
397," ",594
313,null,594
0,),0
397," ",594
0,{,0
397,"
        ",594
326,if,595
397," ",595
0,(,0
317,$value,595
397," ",595
298,instanceof,595
397," ",595
313,PersistentCollection,595
0,),0
397," ",595
0,{,0
397,"
          ",595
326,if,596
397," ",596
0,(,0
317,$value,596
390,->,596
313,getOwner,596
0,(,0
0,),0
397," ",596
291,===,596
397," ",596
317,$entity,596
0,),0
397," ",596
0,{,0
397,"
            ",596
345,continue,597
0,;,0
397,"
          ",597
0,},0
397,"

          ",598
317,$value,600
397," ",600
0,=,0
397," ",600
324,new,600
397," ",600
313,ArrayCollection,600
0,(,0
317,$value,600
390,->,600
313,getValues,600
0,(,0
0,),0
0,),0
0,;,0
397,"
        ",600
0,},0
397,"

        ",601
392,"// If $value is not a Collection then use an ArrayCollection.",603
397,"
        ",603
326,if,604
397," ",604
0,(,0
397," ",604
0,!,0
397," ",604
317,$value,604
397," ",604
298,instanceof,604
397," ",604
313,Collection,604
0,),0
397," ",604
0,{,0
397,"
          ",604
317,$value,605
397," ",605
0,=,0
397," ",605
324,new,605
397," ",605
313,ArrayCollection,605
0,(,0
317,$value,605
0,),0
0,;,0
397,"
        ",605
0,},0
397,"

        ",606
317,$assoc,608
397," ",608
0,=,0
397," ",608
317,$class,608
390,->,608
313,associationMappings,608
0,[,0
317,$name,608
0,],0
0,;,0
397,"

        ",608
392,"// Inject PersistentCollection",610
397,"
        ",610
317,$value,611
397," ",611
0,=,0
397," ",611
324,new,611
397," ",611
313,PersistentCollection,611
0,(,0
397,"
          ",611
317,$this,612
390,->,612
313,em,612
0,",",0
397," ",612
317,$this,612
390,->,612
313,em,612
390,->,612
313,getClassMetadata,612
0,(,0
317,$assoc,612
0,[,0
320,'targetEntity',612
0,],0
0,),0
0,",",0
397," ",612
317,$value,612
397,"
        ",612
0,),0
0,;,0
397,"
        ",613
317,$value,614
390,->,614
313,setOwner,614
0,(,0
317,$entity,614
0,",",0
397," ",614
317,$assoc,614
0,),0
0,;,0
397,"
        ",614
317,$value,615
390,->,615
313,setDirty,615
0,(,0
397," ",615
0,!,0
397," ",615
317,$value,615
390,->,615
313,isEmpty,615
0,(,0
0,),0
0,),0
0,;,0
397,"

        ",615
317,$class,617
390,->,617
313,reflFields,617
0,[,0
317,$name,617
0,],0
390,->,617
313,setValue,617
0,(,0
317,$entity,617
0,",",0
397," ",617
317,$value,617
0,),0
0,;,0
397,"

        ",617
317,$actualData,619
0,[,0
317,$name,619
0,],0
397," ",619
0,=,0
397," ",619
317,$value,619
0,;,0
397,"

        ",619
345,continue,621
0,;,0
397,"
      ",621
0,},0
397,"

      ",622
326,if,624
397," ",624
0,(,0
0,(,0
397," ",624
0,!,0
397," ",624
317,$class,624
390,->,624
313,isIdentifier,624
0,(,0
317,$name,624
0,),0
397," ",624
285,||,624
397," ",624
0,!,0
397," ",624
317,$class,624
390,->,624
313,isIdGeneratorIdentity,624
0,(,0
0,),0
0,),0
397," ",624
286,&&,624
397," ",624
0,(,0
317,$name,624
397," ",624
292,!==,624
397," ",624
317,$class,624
390,->,624
313,versionField,624
0,),0
0,),0
397," ",624
0,{,0
397,"
        ",624
317,$actualData,625
0,[,0
317,$name,625
0,],0
397," ",625
0,=,0
397," ",625
317,$value,625
0,;,0
397,"
      ",625
0,},0
397,"
    ",626
0,},0
397,"

    ",627
326,if,629
397," ",629
0,(,0
397," ",629
0,!,0
397," ",629
366,isset,629
0,(,0
317,$this,629
390,->,629
313,originalEntityData,629
0,[,0
317,$oid,629
0,],0
0,),0
0,),0
397," ",629
0,{,0
397,"
      ",629
392,"// Entity is either NEW or MANAGED but not yet fully persisted (only has an id).",630
397,"
      ",630
392,"// These result in an INSERT.",631
397,"
      ",631
317,$this,632
390,->,632
313,originalEntityData,632
0,[,0
317,$oid,632
0,],0
397," ",632
0,=,0
397," ",632
317,$actualData,632
0,;,0
397,"
      ",632
317,$changeSet,633
397," ",633
0,=,0
397," ",633
377,array,633
0,(,0
0,),0
0,;,0
397,"

      ",633
334,foreach,635
397," ",635
0,(,0
317,$actualData,635
397," ",635
338,as,635
397," ",635
317,$propName,635
397," ",635
269,=>,635
397," ",635
317,$actualValue,635
0,),0
397," ",635
0,{,0
397,"
        ",635
326,if,636
397," ",636
0,(,0
397," ",636
0,!,0
397," ",636
366,isset,636
0,(,0
317,$class,636
390,->,636
313,associationMappings,636
0,[,0
317,$propName,636
0,],0
0,),0
0,),0
397," ",636
0,{,0
397,"
          ",636
317,$changeSet,637
0,[,0
317,$propName,637
0,],0
397," ",637
0,=,0
397," ",637
377,array,637
0,(,0
313,null,637
0,",",0
397," ",637
317,$actualValue,637
0,),0
0,;,0
397,"

          ",637
345,continue,639
0,;,0
397,"
        ",639
0,},0
397,"

        ",640
317,$assoc,642
397," ",642
0,=,0
397," ",642
317,$class,642
390,->,642
313,associationMappings,642
0,[,0
317,$propName,642
0,],0
0,;,0
397,"

        ",642
326,if,644
397," ",644
0,(,0
317,$assoc,644
0,[,0
320,'isOwningSide',644
0,],0
397," ",644
286,&&,644
397," ",644
317,$assoc,644
0,[,0
320,'type',644
0,],0
397," ",644
287,&,644
397," ",644
313,ClassMetadata,644
402,::,644
313,TO_ONE,644
0,),0
397," ",644
0,{,0
397,"
          ",644
317,$changeSet,645
0,[,0
317,$propName,645
0,],0
397," ",645
0,=,0
397," ",645
377,array,645
0,(,0
313,null,645
0,",",0
397," ",645
317,$actualValue,645
0,),0
0,;,0
397,"
        ",645
0,},0
397,"
      ",646
0,},0
397,"

      ",647
317,$this,649
390,->,649
313,entityChangeSets,649
0,[,0
317,$oid,649
0,],0
397," ",649
0,=,0
397," ",649
317,$changeSet,649
0,;,0
397,"
    ",649
0,},0
397," ",650
310,else,650
397," ",650
0,{,0
397,"
      ",650
392,"// Entity is ""fully"" MANAGED: it was already fully persisted before",651
397,"
      ",651
392,"// and we have a copy of the original data",652
397,"
      ",652
317,$originalData,653
397,"           ",653
0,=,0
397," ",653
317,$this,653
390,->,653
313,originalEntityData,653
0,[,0
317,$oid,653
0,],0
0,;,0
397,"
      ",653
317,$isChangeTrackingNotify,654
397," ",654
0,=,0
397," ",654
317,$class,654
390,->,654
313,isChangeTrackingNotify,654
0,(,0
0,),0
0,;,0
397,"
      ",654
317,$changeSet,655
397,"              ",655
0,=,0
397," ",655
0,(,0
317,$isChangeTrackingNotify,655
397," ",655
286,&&,655
397," ",655
366,isset,655
0,(,0
317,$this,655
390,->,655
313,entityChangeSets,655
0,[,0
317,$oid,655
0,],0
0,),0
0,),0
397,"
        ",655
0,?,0
397," ",656
317,$this,656
390,->,656
313,entityChangeSets,656
0,[,0
317,$oid,656
0,],0
397,"
        ",656
0,:,0
397," ",657
377,array,657
0,(,0
0,),0
0,;,0
397,"

      ",657
334,foreach,659
397," ",659
0,(,0
317,$actualData,659
397," ",659
338,as,659
397," ",659
317,$propName,659
397," ",659
269,=>,659
397," ",659
317,$actualValue,659
0,),0
397," ",659
0,{,0
397,"
        ",659
392,"// skip field, its a partially omitted one!",660
397,"
        ",660
326,if,661
397," ",661
0,(,0
397," ",661
0,!,0
397," ",661
0,(,0
366,isset,661
0,(,0
317,$originalData,661
0,[,0
317,$propName,661
0,],0
0,),0
397," ",661
285,||,661
397," ",661
313,array_key_exists,661
0,(,0
317,$propName,661
0,",",0
397," ",661
317,$originalData,661
0,),0
0,),0
0,),0
397," ",661
0,{,0
397,"
          ",661
345,continue,662
0,;,0
397,"
        ",662
0,},0
397,"

        ",663
317,$orgValue,665
397," ",665
0,=,0
397," ",665
317,$originalData,665
0,[,0
317,$propName,665
0,],0
0,;,0
397,"

        ",665
392,"// skip if value haven't changed",667
397,"
        ",667
326,if,668
397," ",668
0,(,0
317,$orgValue,668
397," ",668
291,===,668
397," ",668
317,$actualValue,668
0,),0
397," ",668
0,{,0
397,"
          ",668
345,continue,669
0,;,0
397,"
        ",669
0,},0
397,"

        ",670
392,"// if regular field",672
397,"
        ",672
326,if,673
397," ",673
0,(,0
397," ",673
0,!,0
397," ",673
366,isset,673
0,(,0
317,$class,673
390,->,673
313,associationMappings,673
0,[,0
317,$propName,673
0,],0
0,),0
0,),0
397," ",673
0,{,0
397,"
          ",673
326,if,674
397," ",674
0,(,0
317,$isChangeTrackingNotify,674
0,),0
397," ",674
0,{,0
397,"
            ",674
345,continue,675
0,;,0
397,"
          ",675
0,},0
397,"

          ",676
317,$changeSet,678
0,[,0
317,$propName,678
0,],0
397," ",678
0,=,0
397," ",678
377,array,678
0,(,0
317,$orgValue,678
0,",",0
397," ",678
317,$actualValue,678
0,),0
0,;,0
397,"

          ",678
345,continue,680
0,;,0
397,"
        ",680
0,},0
397,"

        ",681
317,$assoc,683
397," ",683
0,=,0
397," ",683
317,$class,683
390,->,683
313,associationMappings,683
0,[,0
317,$propName,683
0,],0
0,;,0
397,"

        ",683
392,"// Persistent collection was exchanged with the ""originally""",685
397,"
        ",685
392,"// created one. This can only mean it was cloned and replaced",686
397,"
        ",686
392,"// on another entity.",687
397,"
        ",687
326,if,688
397," ",688
0,(,0
317,$actualValue,688
397," ",688
298,instanceof,688
397," ",688
313,PersistentCollection,688
0,),0
397," ",688
0,{,0
397,"
          ",688
317,$owner,689
397," ",689
0,=,0
397," ",689
317,$actualValue,689
390,->,689
313,getOwner,689
0,(,0
0,),0
0,;,0
397,"
          ",689
326,if,690
397," ",690
0,(,0
317,$owner,690
397," ",690
291,===,690
397," ",690
313,null,690
0,),0
397," ",690
0,{,0
397," ",690
392,"// cloned",690
397,"
            ",690
317,$actualValue,691
390,->,691
313,setOwner,691
0,(,0
317,$entity,691
0,",",0
397," ",691
317,$assoc,691
0,),0
0,;,0
397,"
          ",691
0,},0
397," ",692
310,else,692
397," ",692
326,if,692
397," ",692
0,(,0
317,$owner,692
397," ",692
292,!==,692
397," ",692
317,$entity,692
0,),0
397," ",692
0,{,0
397," ",692
392,"// no clone, we have to fix",692
397,"
            ",692
326,if,693
397," ",693
0,(,0
0,!,0
317,$actualValue,693
390,->,693
313,isInitialized,693
0,(,0
0,),0
0,),0
397," ",693
0,{,0
397,"
              ",693
317,$actualValue,694
390,->,694
313,initialize,694
0,(,0
0,),0
0,;,0
397," ",694
392,"// we have to do this otherwise the cols share state",694
397,"
            ",694
0,},0
397,"
            ",695
317,$newValue,696
397," ",696
0,=,0
397," ",696
307,clone,696
397," ",696
317,$actualValue,696
0,;,0
397,"
            ",696
317,$newValue,697
390,->,697
313,setOwner,697
0,(,0
317,$entity,697
0,",",0
397," ",697
317,$assoc,697
0,),0
0,;,0
397,"
            ",697
317,$class,698
390,->,698
313,reflFields,698
0,[,0
317,$propName,698
0,],0
390,->,698
313,setValue,698
0,(,0
317,$entity,698
0,",",0
397," ",698
317,$newValue,698
0,),0
0,;,0
397,"
          ",698
0,},0
397,"
        ",699
0,},0
397,"

        ",700
326,if,702
397," ",702
0,(,0
317,$orgValue,702
397," ",702
298,instanceof,702
397," ",702
313,PersistentCollection,702
0,),0
397," ",702
0,{,0
397,"
          ",702
392,"// A PersistentCollection was de-referenced, so delete it.",703
397,"
          ",703
317,$coid,704
397," ",704
0,=,0
397," ",704
313,spl_object_hash,704
0,(,0
317,$orgValue,704
0,),0
0,;,0
397,"

          ",704
326,if,706
397," ",706
0,(,0
366,isset,706
0,(,0
317,$this,706
390,->,706
313,collectionDeletions,706
0,[,0
317,$coid,706
0,],0
0,),0
0,),0
397," ",706
0,{,0
397,"
            ",706
345,continue,707
0,;,0
397,"
          ",707
0,},0
397,"

          ",708
317,$this,710
390,->,710
313,collectionDeletions,710
0,[,0
317,$coid,710
0,],0
397," ",710
0,=,0
397," ",710
317,$orgValue,710
0,;,0
397,"
          ",710
317,$changeSet,711
0,[,0
317,$propName,711
0,],0
397," ",711
0,=,0
397," ",711
317,$orgValue,711
0,;,0
397," ",711
392,"// Signal changeset, to-many assocs will be ignored.",711
397,"

          ",711
345,continue,713
0,;,0
397,"
        ",713
0,},0
397,"

        ",714
326,if,716
397," ",716
0,(,0
317,$assoc,716
0,[,0
320,'type',716
0,],0
397," ",716
287,&,716
397," ",716
313,ClassMetadata,716
402,::,716
313,TO_ONE,716
0,),0
397," ",716
0,{,0
397,"
          ",716
326,if,717
397," ",717
0,(,0
317,$assoc,717
0,[,0
320,'isOwningSide',717
0,],0
0,),0
397," ",717
0,{,0
397,"
            ",717
317,$changeSet,718
0,[,0
317,$propName,718
0,],0
397," ",718
0,=,0
397," ",718
377,array,718
0,(,0
317,$orgValue,718
0,",",0
397," ",718
317,$actualValue,718
0,),0
0,;,0
397,"
          ",718
0,},0
397,"

          ",719
326,if,721
397," ",721
0,(,0
317,$orgValue,721
397," ",721
292,!==,721
397," ",721
313,null,721
397," ",721
286,&&,721
397," ",721
317,$assoc,721
0,[,0
320,'orphanRemoval',721
0,],0
0,),0
397," ",721
0,{,0
397,"
            ",721
317,$this,722
390,->,722
313,scheduleOrphanRemoval,722
0,(,0
317,$orgValue,722
0,),0
0,;,0
397,"
          ",722
0,},0
397,"
        ",723
0,},0
397,"
      ",724
0,},0
397,"

      ",725
326,if,727
397," ",727
0,(,0
317,$changeSet,727
0,),0
397," ",727
0,{,0
397,"
        ",727
317,$this,728
390,->,728
313,entityChangeSets,728
0,[,0
317,$oid,728
0,],0
397,"   ",728
0,=,0
397," ",728
317,$changeSet,728
0,;,0
397,"
        ",728
317,$this,729
390,->,729
313,originalEntityData,729
0,[,0
317,$oid,729
0,],0
397," ",729
0,=,0
397," ",729
317,$actualData,729
0,;,0
397,"
        ",729
317,$this,730
390,->,730
313,entityUpdates,730
0,[,0
317,$oid,730
0,],0
397,"      ",730
0,=,0
397," ",730
317,$entity,730
0,;,0
397,"
      ",730
0,},0
397,"
    ",731
0,},0
397,"

    ",732
392,"// Look for changes in associations of the entity",734
397,"
    ",734
334,foreach,735
397," ",735
0,(,0
317,$class,735
390,->,735
313,associationMappings,735
397," ",735
338,as,735
397," ",735
317,$field,735
397," ",735
269,=>,735
397," ",735
317,$assoc,735
0,),0
397," ",735
0,{,0
397,"

      ",735
326,if,737
397," ",737
0,(,0
0,(,0
317,$val,737
397," ",737
0,=,0
397," ",737
317,$class,737
390,->,737
313,reflFields,737
0,[,0
317,$field,737
0,],0
390,->,737
313,getValue,737
0,(,0
317,$entity,737
0,),0
0,),0
397," ",737
291,===,737
397," ",737
313,null,737
0,),0
397," ",737
0,{,0
397,"
        ",737
345,continue,738
0,;,0
397,"
      ",738
0,},0
397,"

      ",739
317,$this,741
390,->,741
313,computeAssociationChanges,741
0,(,0
317,$assoc,741
0,",",0
397," ",741
317,$val,741
0,),0
0,;,0
397,"

      ",741
326,if,743
397," ",743
0,(,0
397," ",743
0,!,0
397," ",743
366,isset,743
0,(,0
317,$this,743
390,->,743
313,entityChangeSets,743
0,[,0
317,$oid,743
0,],0
0,),0
397," ",743
286,&&,743
397,"
        ",743
317,$assoc,744
0,[,0
320,'isOwningSide',744
0,],0
397," ",744
286,&&,744
397,"
        ",744
317,$assoc,745
0,[,0
320,'type',745
0,],0
397," ",745
289,==,745
397," ",745
313,ClassMetadata,745
402,::,745
313,MANY_TO_MANY,745
397," ",745
286,&&,745
397,"
        ",745
317,$val,746
397," ",746
298,instanceof,746
397," ",746
313,PersistentCollection,746
397," ",746
286,&&,746
397,"
        ",746
317,$val,747
390,->,747
313,isDirty,747
0,(,0
0,),0
0,),0
397," ",747
0,{,0
397,"

        ",747
317,$this,749
390,->,749
313,entityChangeSets,749
0,[,0
317,$oid,749
0,],0
397,"   ",749
0,=,0
397," ",749
377,array,749
0,(,0
0,),0
0,;,0
397,"
        ",749
317,$this,750
390,->,750
313,originalEntityData,750
0,[,0
317,$oid,750
0,],0
397," ",750
0,=,0
397," ",750
317,$actualData,750
0,;,0
397,"
        ",750
317,$this,751
390,->,751
313,entityUpdates,751
0,[,0
317,$oid,751
0,],0
397,"      ",751
0,=,0
397," ",751
317,$entity,751
0,;,0
397,"
      ",751
0,},0
397,"
    ",752
0,},0
397,"
  ",753
0,},0
397,"

  ",754
393,"/**
   * Computes all the changes that have been done to entities and collections
   * since the last commit and stores these changes in the _entityChangeSet map
   * temporarily for access by the persisters, until the UoW commit is finished.
   *
   * @return void
   */",756
397,"
  ",762
362,public,763
397," ",763
347,function,763
397," ",763
313,computeChangeSets,763
0,(,0
0,),0
397,"
  ",763
0,{,0
397,"
    ",764
392,"// Compute changes for INSERTed entities first. This must always happen.",765
397,"
    ",765
317,$this,766
390,->,766
313,computeScheduleInsertsChangeSets,766
0,(,0
0,),0
0,;,0
397,"

    ",766
392,"// Compute changes for other MANAGED entities. Change tracking policies take effect here.",768
397,"
    ",768
334,foreach,769
397," ",769
0,(,0
317,$this,769
390,->,769
313,identityMap,769
397," ",769
338,as,769
397," ",769
317,$className,769
397," ",769
269,=>,769
397," ",769
317,$entities,769
0,),0
397," ",769
0,{,0
397,"
      ",769
317,$class,770
397," ",770
0,=,0
397," ",770
317,$this,770
390,->,770
313,em,770
390,->,770
313,getClassMetadata,770
0,(,0
317,$className,770
0,),0
0,;,0
397,"

      ",770
392,"// Skip class if instances are read-only",772
397,"
      ",772
326,if,773
397," ",773
0,(,0
317,$class,773
390,->,773
313,isReadOnly,773
0,),0
397," ",773
0,{,0
397,"
        ",773
345,continue,774
0,;,0
397,"
      ",774
0,},0
397,"

      ",775
392,"// If change tracking is explicit or happens through notification, then only compute",777
397,"
      ",777
392,"// changes on entities of that type that are explicitly marked for synchronization.",778
397,"
      ",778
339,switch,779
397," ",779
0,(,0
313,true,779
0,),0
397," ",779
0,{,0
397,"
        ",779
341,case,780
397," ",780
0,(,0
317,$class,780
390,->,780
313,isChangeTrackingDeferredImplicit,780
0,(,0
0,),0
0,),0
0,:,0
397,"
          ",780
317,$entitiesToProcess,781
397," ",781
0,=,0
397," ",781
317,$entities,781
0,;,0
397,"
          ",781
344,break,782
0,;,0
397,"

        ",782
341,case,784
397," ",784
0,(,0
366,isset,784
0,(,0
317,$this,784
390,->,784
313,scheduledForSynchronization,784
0,[,0
317,$className,784
0,],0
0,),0
0,),0
0,:,0
397,"
          ",784
317,$entitiesToProcess,785
397," ",785
0,=,0
397," ",785
317,$this,785
390,->,785
313,scheduledForSynchronization,785
0,[,0
317,$className,785
0,],0
0,;,0
397,"
          ",785
344,break,786
0,;,0
397,"

        ",786
342,default,788
0,:,0
397,"
          ",788
317,$entitiesToProcess,789
397," ",789
0,=,0
397," ",789
377,array,789
0,(,0
0,),0
0,;,0
397,"

      ",789
0,},0
397,"

      ",791
334,foreach,793
397," ",793
0,(,0
317,$entitiesToProcess,793
397," ",793
338,as,793
397," ",793
317,$entity,793
0,),0
397," ",793
0,{,0
397,"
        ",793
392,"// Ignore uninitialized proxy objects",794
397,"
        ",794
326,if,795
397," ",795
0,(,0
317,$entity,795
397," ",795
298,instanceof,795
397," ",795
313,Proxy,795
397," ",795
286,&&,795
397," ",795
0,!,0
397," ",795
317,$entity,795
390,->,795
313,__isInitialized__,795
0,),0
397," ",795
0,{,0
397,"
          ",795
345,continue,796
0,;,0
397,"
        ",796
0,},0
397,"

        ",797
392,"// Only MANAGED entities that are NOT SCHEDULED FOR INSERTION OR DELETION are processed here.",799
397,"
        ",799
317,$oid,800
397," ",800
0,=,0
397," ",800
313,spl_object_hash,800
0,(,0
317,$entity,800
0,),0
0,;,0
397,"

        ",800
326,if,802
397," ",802
0,(,0
397," ",802
0,!,0
397," ",802
366,isset,802
0,(,0
317,$this,802
390,->,802
313,entityInsertions,802
0,[,0
317,$oid,802
0,],0
0,),0
397," ",802
286,&&,802
397,"  ",802
0,!,0
397," ",802
366,isset,802
0,(,0
317,$this,802
390,->,802
313,entityDeletions,802
0,[,0
317,$oid,802
0,],0
0,),0
397," ",802
286,&&,802
397," ",802
366,isset,802
0,(,0
317,$this,802
390,->,802
313,entityStates,802
0,[,0
317,$oid,802
0,],0
0,),0
0,),0
397," ",802
0,{,0
397,"
          ",802
317,$this,803
390,->,803
313,computeChangeSet,803
0,(,0
317,$class,803
0,",",0
397," ",803
317,$entity,803
0,),0
0,;,0
397,"
        ",803
0,},0
397,"
      ",804
0,},0
397,"
    ",805
0,},0
397,"
  ",806
0,},0
397,"

  ",807
393,"/**
   * Computes the changes of an association.
   *
   * @param array $assoc  The association mapping.
   * @param mixed $value  The value of the association.
   *
   * @throws ORMInvalidArgumentException
   * @throws ORMException
   *
   * @return void
   */",809
397,"
  ",819
360,private,820
397," ",820
347,function,820
397," ",820
313,computeAssociationChanges,820
0,(,0
317,$assoc,820
0,",",0
397," ",820
317,$value,820
0,),0
397,"
  ",820
0,{,0
397,"
    ",821
326,if,822
397," ",822
0,(,0
317,$value,822
397," ",822
298,instanceof,822
397," ",822
313,Proxy,822
397," ",822
286,&&,822
397," ",822
0,!,0
397," ",822
317,$value,822
390,->,822
313,__isInitialized__,822
0,),0
397," ",822
0,{,0
397,"
      ",822
350,return,823
0,;,0
397,"
    ",823
0,},0
397,"

    ",824
326,if,826
397," ",826
0,(,0
317,$value,826
397," ",826
298,instanceof,826
397," ",826
313,PersistentCollection,826
397," ",826
286,&&,826
397," ",826
317,$value,826
390,->,826
313,isDirty,826
0,(,0
0,),0
0,),0
397," ",826
0,{,0
397,"
      ",826
317,$coid,827
397," ",827
0,=,0
397," ",827
313,spl_object_hash,827
0,(,0
317,$value,827
0,),0
0,;,0
397,"

      ",827
326,if,829
397," ",829
0,(,0
317,$assoc,829
0,[,0
320,'isOwningSide',829
0,],0
0,),0
397," ",829
0,{,0
397,"
        ",829
317,$this,830
390,->,830
313,collectionUpdates,830
0,[,0
317,$coid,830
0,],0
397," ",830
0,=,0
397," ",830
317,$value,830
0,;,0
397,"
      ",830
0,},0
397,"

      ",831
317,$this,833
390,->,833
313,visitedCollections,833
0,[,0
317,$coid,833
0,],0
397," ",833
0,=,0
397," ",833
317,$value,833
0,;,0
397,"
    ",833
0,},0
397,"

    ",834
392,"// Look through the entities, and in any of their associations,",836
397,"
    ",836
392,"// for transient (new) entities, recursively. (""Persistence by reachability"")",837
397,"
    ",837
392,"// Unwrap. Uninitialized collections will simply be empty.",838
397,"
    ",838
317,$unwrappedValue,839
397," ",839
0,=,0
397," ",839
0,(,0
317,$assoc,839
0,[,0
320,'type',839
0,],0
397," ",839
287,&,839
397," ",839
313,ClassMetadata,839
402,::,839
313,TO_ONE,839
0,),0
397," ",839
0,?,0
397," ",839
377,array,839
0,(,0
317,$value,839
0,),0
397," ",839
0,:,0
397," ",839
317,$value,839
390,->,839
313,unwrap,839
0,(,0
0,),0
0,;,0
397,"
    ",839
317,$targetClass,840
397,"    ",840
0,=,0
397," ",840
317,$this,840
390,->,840
313,em,840
390,->,840
313,getClassMetadata,840
0,(,0
317,$assoc,840
0,[,0
320,'targetEntity',840
0,],0
0,),0
0,;,0
397,"

    ",840
334,foreach,842
397," ",842
0,(,0
317,$unwrappedValue,842
397," ",842
338,as,842
397," ",842
317,$key,842
397," ",842
269,=>,842
397," ",842
317,$entry,842
0,),0
397," ",842
0,{,0
397,"
      ",842
326,if,843
397," ",843
0,(,0
0,!,0
397," ",843
0,(,0
317,$entry,843
397," ",843
298,instanceof,843
397," ",843
317,$targetClass,843
390,->,843
313,name,843
0,),0
0,),0
397," ",843
0,{,0
397,"
        ",843
258,throw,844
397," ",844
313,ORMInvalidArgumentException,844
402,::,844
313,invalidAssociation,844
0,(,0
317,$targetClass,844
0,",",0
397," ",844
317,$assoc,844
0,",",0
397," ",844
317,$entry,844
0,),0
0,;,0
397,"
      ",844
0,},0
397,"

      ",845
317,$state,847
397," ",847
0,=,0
397," ",847
317,$this,847
390,->,847
313,getEntityState,847
0,(,0
317,$entry,847
0,",",0
397," ",847
313,self,847
402,::,847
313,STATE_NEW,847
0,),0
0,;,0
397,"

      ",847
326,if,849
397," ",849
0,(,0
397," ",849
0,!,0
397," ",849
0,(,0
317,$entry,849
397," ",849
298,instanceof,849
397," ",849
317,$assoc,849
0,[,0
320,'targetEntity',849
0,],0
0,),0
0,),0
397," ",849
0,{,0
397,"
        ",849
258,throw,850
397," ",850
313,ORMException,850
402,::,850
313,unexpectedAssociationValue,850
0,(,0
317,$assoc,850
0,[,0
320,'sourceEntity',850
0,],0
0,",",0
397," ",850
317,$assoc,850
0,[,0
320,'fieldName',850
0,],0
0,",",0
397," ",850
313,get_class,850
0,(,0
317,$entry,850
0,),0
0,",",0
397," ",850
317,$assoc,850
0,[,0
320,'targetEntity',850
0,],0
0,),0
0,;,0
397,"
      ",850
0,},0
397,"

      ",851
339,switch,853
397," ",853
0,(,0
317,$state,853
0,),0
397," ",853
0,{,0
397,"
        ",853
341,case,854
397," ",854
313,self,854
402,::,854
313,STATE_NEW,854
0,:,0
397,"
          ",854
326,if,855
397," ",855
0,(,0
397," ",855
0,!,0
397," ",855
317,$assoc,855
0,[,0
320,'isCascadePersist',855
0,],0
0,),0
397," ",855
0,{,0
397,"
            ",855
258,throw,856
397," ",856
313,ORMInvalidArgumentException,856
402,::,856
313,newEntityFoundThroughRelationship,856
0,(,0
317,$assoc,856
0,",",0
397," ",856
317,$entry,856
0,),0
0,;,0
397,"
          ",856
0,},0
397,"

          ",857
317,$this,859
390,->,859
313,persistNew,859
0,(,0
317,$targetClass,859
0,",",0
397," ",859
317,$entry,859
0,),0
0,;,0
397,"
          ",859
317,$this,860
390,->,860
313,computeChangeSet,860
0,(,0
317,$targetClass,860
0,",",0
397," ",860
317,$entry,860
0,),0
0,;,0
397,"
          ",860
344,break,861
0,;,0
397,"

        ",861
341,case,863
397," ",863
313,self,863
402,::,863
313,STATE_REMOVED,863
0,:,0
397,"
          ",863
392,"// Consume the $value as array (it's either an array or an ArrayAccess)",864
397,"
          ",864
392,"// and remove the element from Collection.",865
397,"
          ",865
326,if,866
397," ",866
0,(,0
317,$assoc,866
0,[,0
320,'type',866
0,],0
397," ",866
287,&,866
397," ",866
313,ClassMetadata,866
402,::,866
313,TO_MANY,866
0,),0
397," ",866
0,{,0
397,"
            ",866
365,unset,867
0,(,0
317,$value,867
0,[,0
317,$key,867
0,],0
0,),0
0,;,0
397,"
          ",867
0,},0
397,"
          ",868
344,break,869
0,;,0
397,"

        ",869
341,case,871
397," ",871
313,self,871
402,::,871
313,STATE_DETACHED,871
0,:,0
397,"
          ",871
392,"// Can actually not happen right now as we assume STATE_NEW,",872
397,"
          ",872
392,"// so the exception will be raised from the DBAL layer (constraint violation).",873
397,"
          ",873
258,throw,874
397," ",874
313,ORMInvalidArgumentException,874
402,::,874
313,detachedEntityFoundThroughRelationship,874
0,(,0
317,$assoc,874
0,",",0
397," ",874
317,$entry,874
0,),0
0,;,0
397,"
          ",874
344,break,875
0,;,0
397,"

        ",875
342,default,877
0,:,0
397,"
          ",877
392,"// MANAGED associated entities are already taken into account",878
397,"
          ",878
392,"// during changeset calculation anyway, since they are in the identity map.",879
397,"
      ",879
0,},0
397,"
    ",880
0,},0
397,"
  ",881
0,},0
397,"

  ",882
393,"/**
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   * @param object        $entity
   *
   * @return void
   */",884
397,"
  ",889
360,private,890
397," ",890
347,function,890
397," ",890
313,persistNew,890
0,(,0
317,$class,890
0,",",0
397," ",890
317,$entity,890
0,),0
397,"
  ",890
0,{,0
397,"
    ",891
317,$oid,892
397,"    ",892
0,=,0
397," ",892
313,spl_object_hash,892
0,(,0
317,$entity,892
0,),0
0,;,0
397,"
    ",892
317,$invoke,893
397," ",893
0,=,0
397," ",893
317,$this,893
390,->,893
313,listenersInvoker,893
390,->,893
313,getSubscribedSystems,893
0,(,0
317,$class,893
0,",",0
397," ",893
313,Events,893
402,::,893
313,prePersist,893
0,),0
0,;,0
397,"

    ",893
326,if,895
397," ",895
0,(,0
317,$invoke,895
397," ",895
292,!==,895
397," ",895
313,ListenersInvoker,895
402,::,895
313,INVOKE_NONE,895
0,),0
397," ",895
0,{,0
397,"
      ",895
317,$this,896
390,->,896
313,listenersInvoker,896
390,->,896
313,invoke,896
0,(,0
317,$class,896
0,",",0
397," ",896
313,Events,896
402,::,896
313,prePersist,896
0,",",0
397," ",896
317,$entity,896
0,",",0
397," ",896
324,new,896
397," ",896
313,LifecycleEventArgs,896
0,(,0
317,$entity,896
0,",",0
397," ",896
317,$this,896
390,->,896
313,em,896
0,),0
0,",",0
397," ",896
317,$invoke,896
0,),0
0,;,0
397,"
    ",896
0,},0
397,"

    ",897
317,$idGen,899
397," ",899
0,=,0
397," ",899
317,$class,899
390,->,899
313,idGenerator,899
0,;,0
397,"

    ",899
326,if,901
397," ",901
0,(,0
397," ",901
0,!,0
397," ",901
317,$idGen,901
390,->,901
313,isPostInsertGenerator,901
0,(,0
0,),0
0,),0
397," ",901
0,{,0
397,"
      ",901
317,$idValue,902
397," ",902
0,=,0
397," ",902
317,$idGen,902
390,->,902
313,generate,902
0,(,0
317,$this,902
390,->,902
313,em,902
0,",",0
397," ",902
317,$entity,902
0,),0
0,;,0
397,"

      ",902
326,if,904
397," ",904
0,(,0
397," ",904
0,!,0
397," ",904
317,$idGen,904
397," ",904
298,instanceof,904
397," ",904
314,"\Doctrine\ORM\Id\AssignedGenerator",904
0,),0
397," ",904
0,{,0
397,"
        ",904
317,$idValue,905
397," ",905
0,=,0
397," ",905
377,array,905
0,(,0
317,$class,905
390,->,905
313,identifier,905
0,[,0
311,0,905
0,],0
397," ",905
269,=>,905
397," ",905
317,$idValue,905
0,),0
0,;,0
397,"

        ",905
317,$class,907
390,->,907
313,setIdentifierValues,907
0,(,0
317,$entity,907
0,",",0
397," ",907
317,$idValue,907
0,),0
0,;,0
397,"
      ",907
0,},0
397,"

      ",908
317,$this,910
390,->,910
313,entityIdentifiers,910
0,[,0
317,$oid,910
0,],0
397," ",910
0,=,0
397," ",910
317,$idValue,910
0,;,0
397,"
    ",910
0,},0
397,"

    ",911
317,$this,913
390,->,913
313,entityStates,913
0,[,0
317,$oid,913
0,],0
397," ",913
0,=,0
397," ",913
313,self,913
402,::,913
313,STATE_MANAGED,913
0,;,0
397,"

    ",913
317,$this,915
390,->,915
313,scheduleForInsert,915
0,(,0
317,$entity,915
0,),0
0,;,0
397,"
  ",915
0,},0
397,"

  ",916
393,"/**
   * INTERNAL:
   * Computes the changeset of an individual entity, independently of the
   * computeChangeSets() routine that is used at the beginning of a UnitOfWork#commit().
   *
   * The passed entity must be a managed entity. If the entity already has a change set
   * because this method is invoked during a commit cycle then the change sets are added.
   * whereby changes detected in this method prevail.
   *
   * @ignore
   *
   * @param ClassMetadata $class  The class descriptor of the entity.
   * @param object        $entity The entity for which to (re)calculate the change set.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the passed entity is not MANAGED.
   */",918
397,"
  ",935
362,public,936
397," ",936
347,function,936
397," ",936
313,recomputeSingleEntityChangeSet,936
0,(,0
313,ClassMetadata,936
397," ",936
317,$class,936
0,",",0
397," ",936
317,$entity,936
0,),0
397,"
  ",936
0,{,0
397,"
    ",937
317,$oid,938
397," ",938
0,=,0
397," ",938
313,spl_object_hash,938
0,(,0
317,$entity,938
0,),0
0,;,0
397,"

    ",938
326,if,940
397," ",940
0,(,0
397," ",940
0,!,0
397," ",940
366,isset,940
0,(,0
317,$this,940
390,->,940
313,entityStates,940
0,[,0
317,$oid,940
0,],0
0,),0
397," ",940
285,||,940
397," ",940
317,$this,940
390,->,940
313,entityStates,940
0,[,0
317,$oid,940
0,],0
397," ",940
290,!=,940
397," ",940
313,self,940
402,::,940
313,STATE_MANAGED,940
0,),0
397," ",940
0,{,0
397,"
      ",940
258,throw,941
397," ",941
313,ORMInvalidArgumentException,941
402,::,941
313,entityNotManaged,941
0,(,0
317,$entity,941
0,),0
0,;,0
397,"
    ",941
0,},0
397,"

    ",942
392,"// skip if change tracking is ""NOTIFY""",944
397,"
    ",944
326,if,945
397," ",945
0,(,0
317,$class,945
390,->,945
313,isChangeTrackingNotify,945
0,(,0
0,),0
0,),0
397," ",945
0,{,0
397,"
      ",945
350,return,946
0,;,0
397,"
    ",946
0,},0
397,"

    ",947
326,if,949
397," ",949
0,(,0
397," ",949
0,!,0
397," ",949
317,$class,949
390,->,949
313,isInheritanceTypeNone,949
0,(,0
0,),0
0,),0
397," ",949
0,{,0
397,"
      ",949
317,$class,950
397," ",950
0,=,0
397," ",950
317,$this,950
390,->,950
313,em,950
390,->,950
313,getClassMetadata,950
0,(,0
313,get_class,950
0,(,0
317,$entity,950
0,),0
0,),0
0,;,0
397,"
    ",950
0,},0
397,"

    ",951
317,$actualData,953
397," ",953
0,=,0
397," ",953
377,array,953
0,(,0
0,),0
0,;,0
397,"

    ",953
334,foreach,955
397," ",955
0,(,0
317,$class,955
390,->,955
313,reflFields,955
397," ",955
338,as,955
397," ",955
317,$name,955
397," ",955
269,=>,955
397," ",955
317,$refProp,955
0,),0
397," ",955
0,{,0
397,"
      ",955
326,if,956
397," ",956
0,(,0
0,(,0
397," ",956
0,!,0
397," ",956
317,$class,956
390,->,956
313,isIdentifier,956
0,(,0
317,$name,956
0,),0
397," ",956
285,||,956
397," ",956
0,!,0
397," ",956
317,$class,956
390,->,956
313,isIdGeneratorIdentity,956
0,(,0
0,),0
0,),0
397,"
        ",956
286,&&,957
397," ",957
0,(,0
317,$name,957
397," ",957
292,!==,957
397," ",957
317,$class,957
390,->,957
313,versionField,957
0,),0
397,"
        ",957
286,&&,958
397," ",958
0,!,0
397," ",958
317,$class,958
390,->,958
313,isCollectionValuedAssociation,958
0,(,0
317,$name,958
0,),0
0,),0
397," ",958
0,{,0
397,"
        ",958
317,$actualData,959
0,[,0
317,$name,959
0,],0
397," ",959
0,=,0
397," ",959
317,$refProp,959
390,->,959
313,getValue,959
0,(,0
317,$entity,959
0,),0
0,;,0
397,"
      ",959
0,},0
397,"
    ",960
0,},0
397,"

    ",961
326,if,963
397," ",963
0,(,0
397," ",963
0,!,0
397," ",963
366,isset,963
0,(,0
317,$this,963
390,->,963
313,originalEntityData,963
0,[,0
317,$oid,963
0,],0
0,),0
0,),0
397," ",963
0,{,0
397,"
      ",963
258,throw,964
397," ",964
324,new,964
397," ",964
314,"\RuntimeException",964
0,(,0
320,"'Cannot call recomputeSingleEntityChangeSet before computeChangeSet on an entity.'",964
0,),0
0,;,0
397,"
    ",964
0,},0
397,"

    ",965
317,$originalData,967
397," ",967
0,=,0
397," ",967
317,$this,967
390,->,967
313,originalEntityData,967
0,[,0
317,$oid,967
0,],0
0,;,0
397,"
    ",967
317,$changeSet,968
397," ",968
0,=,0
397," ",968
377,array,968
0,(,0
0,),0
0,;,0
397,"

    ",968
334,foreach,970
397," ",970
0,(,0
317,$actualData,970
397," ",970
338,as,970
397," ",970
317,$propName,970
397," ",970
269,=>,970
397," ",970
317,$actualValue,970
0,),0
397," ",970
0,{,0
397,"
      ",970
317,$orgValue,971
397," ",971
0,=,0
397," ",971
366,isset,971
0,(,0
317,$originalData,971
0,[,0
317,$propName,971
0,],0
0,),0
397," ",971
0,?,0
397," ",971
317,$originalData,971
0,[,0
317,$propName,971
0,],0
397," ",971
0,:,0
397," ",971
313,null,971
0,;,0
397,"

      ",971
326,if,973
397," ",973
0,(,0
317,$orgValue,973
397," ",973
292,!==,973
397," ",973
317,$actualValue,973
0,),0
397," ",973
0,{,0
397,"
        ",973
317,$changeSet,974
0,[,0
317,$propName,974
0,],0
397," ",974
0,=,0
397," ",974
377,array,974
0,(,0
317,$orgValue,974
0,",",0
397," ",974
317,$actualValue,974
0,),0
0,;,0
397,"
      ",974
0,},0
397,"
    ",975
0,},0
397,"

    ",976
326,if,978
397," ",978
0,(,0
317,$changeSet,978
0,),0
397," ",978
0,{,0
397,"
      ",978
326,if,979
397," ",979
0,(,0
366,isset,979
0,(,0
317,$this,979
390,->,979
313,entityChangeSets,979
0,[,0
317,$oid,979
0,],0
0,),0
0,),0
397," ",979
0,{,0
397,"
        ",979
317,$this,980
390,->,980
313,entityChangeSets,980
0,[,0
317,$oid,980
0,],0
397," ",980
0,=,0
397," ",980
313,array_merge,980
0,(,0
317,$this,980
390,->,980
313,entityChangeSets,980
0,[,0
317,$oid,980
0,],0
0,",",0
397," ",980
317,$changeSet,980
0,),0
0,;,0
397,"
      ",980
0,},0
397," ",981
310,else,981
397," ",981
326,if,981
397," ",981
0,(,0
397," ",981
0,!,0
397," ",981
366,isset,981
0,(,0
317,$this,981
390,->,981
313,entityInsertions,981
0,[,0
317,$oid,981
0,],0
0,),0
0,),0
397," ",981
0,{,0
397,"
        ",981
317,$this,982
390,->,982
313,entityChangeSets,982
0,[,0
317,$oid,982
0,],0
397," ",982
0,=,0
397," ",982
317,$changeSet,982
0,;,0
397,"
        ",982
317,$this,983
390,->,983
313,entityUpdates,983
0,[,0
317,$oid,983
0,],0
397,"    ",983
0,=,0
397," ",983
317,$entity,983
0,;,0
397,"
      ",983
0,},0
397,"
      ",984
317,$this,985
390,->,985
313,originalEntityData,985
0,[,0
317,$oid,985
0,],0
397," ",985
0,=,0
397," ",985
317,$actualData,985
0,;,0
397,"
    ",985
0,},0
397,"
  ",986
0,},0
397,"

  ",987
393,"/**
   * Executes all entity insertions for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",989
397,"
  ",995
360,private,996
397," ",996
347,function,996
397," ",996
313,executeInserts,996
0,(,0
317,$class,996
0,),0
397,"
  ",996
0,{,0
397,"
    ",997
317,$entities,998
397,"   ",998
0,=,0
397," ",998
377,array,998
0,(,0
0,),0
0,;,0
397,"
    ",998
317,$className,999
397,"  ",999
0,=,0
397," ",999
317,$class,999
390,->,999
313,name,999
0,;,0
397,"
    ",999
317,$persister,1000
397,"  ",1000
0,=,0
397," ",1000
317,$this,1000
390,->,1000
313,getEntityPersister,1000
0,(,0
317,$className,1000
0,),0
0,;,0
397,"
    ",1000
317,$invoke,1001
397,"     ",1001
0,=,0
397," ",1001
317,$this,1001
390,->,1001
313,listenersInvoker,1001
390,->,1001
313,getSubscribedSystems,1001
0,(,0
317,$class,1001
0,",",0
397," ",1001
313,Events,1001
402,::,1001
313,postPersist,1001
0,),0
0,;,0
397,"

    ",1001
334,foreach,1003
397," ",1003
0,(,0
317,$this,1003
390,->,1003
313,entityInsertions,1003
397," ",1003
338,as,1003
397," ",1003
317,$oid,1003
397," ",1003
269,=>,1003
397," ",1003
317,$entity,1003
0,),0
397," ",1003
0,{,0
397,"

      ",1003
326,if,1005
397," ",1005
0,(,0
317,$this,1005
390,->,1005
313,em,1005
390,->,1005
313,getClassMetadata,1005
0,(,0
313,get_class,1005
0,(,0
317,$entity,1005
0,),0
0,),0
390,->,1005
313,name,1005
397," ",1005
292,!==,1005
397," ",1005
317,$className,1005
0,),0
397," ",1005
0,{,0
397,"
        ",1005
345,continue,1006
0,;,0
397,"
      ",1006
0,},0
397,"

      ",1007
317,$persister,1009
390,->,1009
313,addInsert,1009
0,(,0
317,$entity,1009
0,),0
0,;,0
397,"

      ",1009
365,unset,1011
0,(,0
317,$this,1011
390,->,1011
313,entityInsertions,1011
0,[,0
317,$oid,1011
0,],0
0,),0
0,;,0
397,"

      ",1011
326,if,1013
397," ",1013
0,(,0
317,$invoke,1013
397," ",1013
292,!==,1013
397," ",1013
313,ListenersInvoker,1013
402,::,1013
313,INVOKE_NONE,1013
0,),0
397," ",1013
0,{,0
397,"
        ",1013
317,$entities,1014
0,[,0
0,],0
397," ",1014
0,=,0
397," ",1014
317,$entity,1014
0,;,0
397,"
      ",1014
0,},0
397,"
    ",1015
0,},0
397,"

    ",1016
317,$postInsertIds,1018
397," ",1018
0,=,0
397," ",1018
317,$persister,1018
390,->,1018
313,executeInserts,1018
0,(,0
0,),0
0,;,0
397,"

    ",1018
326,if,1020
397," ",1020
0,(,0
317,$postInsertIds,1020
0,),0
397," ",1020
0,{,0
397,"
      ",1020
392,"// Persister returned post-insert IDs",1021
397,"
      ",1021
334,foreach,1022
397," ",1022
0,(,0
317,$postInsertIds,1022
397," ",1022
338,as,1022
397," ",1022
317,$postInsertId,1022
0,),0
397," ",1022
0,{,0
397,"
        ",1022
317,$id,1023
397,"      ",1023
0,=,0
397," ",1023
317,$postInsertId,1023
0,[,0
320,'generatedId',1023
0,],0
0,;,0
397,"
        ",1023
317,$entity,1024
397,"  ",1024
0,=,0
397," ",1024
317,$postInsertId,1024
0,[,0
320,'entity',1024
0,],0
0,;,0
397,"
        ",1024
317,$oid,1025
397,"     ",1025
0,=,0
397," ",1025
313,spl_object_hash,1025
0,(,0
317,$entity,1025
0,),0
0,;,0
397,"
        ",1025
317,$idField,1026
397," ",1026
0,=,0
397," ",1026
317,$class,1026
390,->,1026
313,identifier,1026
0,[,0
311,0,1026
0,],0
0,;,0
397,"

        ",1026
317,$class,1028
390,->,1028
313,reflFields,1028
0,[,0
317,$idField,1028
0,],0
390,->,1028
313,setValue,1028
0,(,0
317,$entity,1028
0,",",0
397," ",1028
317,$id,1028
0,),0
0,;,0
397,"

        ",1028
317,$this,1030
390,->,1030
313,entityIdentifiers,1030
0,[,0
317,$oid,1030
0,],0
397," ",1030
0,=,0
397," ",1030
377,array,1030
0,(,0
317,$idField,1030
397," ",1030
269,=>,1030
397," ",1030
317,$id,1030
0,),0
0,;,0
397,"
        ",1030
317,$this,1031
390,->,1031
313,entityStates,1031
0,[,0
317,$oid,1031
0,],0
397," ",1031
0,=,0
397," ",1031
313,self,1031
402,::,1031
313,STATE_MANAGED,1031
0,;,0
397,"
        ",1031
317,$this,1032
390,->,1032
313,originalEntityData,1032
0,[,0
317,$oid,1032
0,],0
0,[,0
317,$idField,1032
0,],0
397," ",1032
0,=,0
397," ",1032
317,$id,1032
0,;,0
397,"

        ",1032
317,$this,1034
390,->,1034
313,addToIdentityMap,1034
0,(,0
317,$entity,1034
0,),0
0,;,0
397,"
      ",1034
0,},0
397,"
    ",1035
0,},0
397,"

    ",1036
334,foreach,1038
397," ",1038
0,(,0
317,$entities,1038
397," ",1038
338,as,1038
397," ",1038
317,$entity,1038
0,),0
397," ",1038
0,{,0
397,"
      ",1038
317,$this,1039
390,->,1039
313,listenersInvoker,1039
390,->,1039
313,invoke,1039
0,(,0
317,$class,1039
0,",",0
397," ",1039
313,Events,1039
402,::,1039
313,postPersist,1039
0,",",0
397," ",1039
317,$entity,1039
0,",",0
397," ",1039
324,new,1039
397," ",1039
313,LifecycleEventArgs,1039
0,(,0
317,$entity,1039
0,",",0
397," ",1039
317,$this,1039
390,->,1039
313,em,1039
0,),0
0,",",0
397," ",1039
317,$invoke,1039
0,),0
0,;,0
397,"
    ",1039
0,},0
397,"
  ",1040
0,},0
397,"

  ",1041
393,"/**
   * Executes all entity updates for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",1043
397,"
  ",1049
360,private,1050
397," ",1050
347,function,1050
397," ",1050
313,executeUpdates,1050
0,(,0
317,$class,1050
0,),0
397,"
  ",1050
0,{,0
397,"
    ",1051
317,$className,1052
397,"          ",1052
0,=,0
397," ",1052
317,$class,1052
390,->,1052
313,name,1052
0,;,0
397,"
    ",1052
317,$persister,1053
397,"          ",1053
0,=,0
397," ",1053
317,$this,1053
390,->,1053
313,getEntityPersister,1053
0,(,0
317,$className,1053
0,),0
0,;,0
397,"
    ",1053
317,$preUpdateInvoke,1054
397,"    ",1054
0,=,0
397," ",1054
317,$this,1054
390,->,1054
313,listenersInvoker,1054
390,->,1054
313,getSubscribedSystems,1054
0,(,0
317,$class,1054
0,",",0
397," ",1054
313,Events,1054
402,::,1054
313,preUpdate,1054
0,),0
0,;,0
397,"
    ",1054
317,$postUpdateInvoke,1055
397,"   ",1055
0,=,0
397," ",1055
317,$this,1055
390,->,1055
313,listenersInvoker,1055
390,->,1055
313,getSubscribedSystems,1055
0,(,0
317,$class,1055
0,",",0
397," ",1055
313,Events,1055
402,::,1055
313,postUpdate,1055
0,),0
0,;,0
397,"

    ",1055
334,foreach,1057
397," ",1057
0,(,0
317,$this,1057
390,->,1057
313,entityUpdates,1057
397," ",1057
338,as,1057
397," ",1057
317,$oid,1057
397," ",1057
269,=>,1057
397," ",1057
317,$entity,1057
0,),0
397," ",1057
0,{,0
397,"

      ",1057
326,if,1059
397," ",1059
0,(,0
317,$this,1059
390,->,1059
313,em,1059
390,->,1059
313,getClassMetadata,1059
0,(,0
313,get_class,1059
0,(,0
317,$entity,1059
0,),0
0,),0
390,->,1059
313,name,1059
397," ",1059
292,!==,1059
397," ",1059
317,$className,1059
0,),0
397," ",1059
0,{,0
397,"
        ",1059
345,continue,1060
0,;,0
397,"
      ",1060
0,},0
397,"

      ",1061
326,if,1063
397," ",1063
0,(,0
317,$preUpdateInvoke,1063
397," ",1063
290,!=,1063
397," ",1063
313,ListenersInvoker,1063
402,::,1063
313,INVOKE_NONE,1063
0,),0
397," ",1063
0,{,0
397,"
        ",1063
317,$this,1064
390,->,1064
313,listenersInvoker,1064
390,->,1064
313,invoke,1064
0,(,0
317,$class,1064
0,",",0
397," ",1064
313,Events,1064
402,::,1064
313,preUpdate,1064
0,",",0
397," ",1064
317,$entity,1064
0,",",0
397," ",1064
324,new,1064
397," ",1064
313,PreUpdateEventArgs,1064
0,(,0
317,$entity,1064
0,",",0
397," ",1064
317,$this,1064
390,->,1064
313,em,1064
0,",",0
397," ",1064
317,$this,1064
390,->,1064
313,entityChangeSets,1064
0,[,0
317,$oid,1064
0,],0
0,),0
0,",",0
397," ",1064
317,$preUpdateInvoke,1064
0,),0
0,;,0
397,"
        ",1064
317,$this,1065
390,->,1065
313,recomputeSingleEntityChangeSet,1065
0,(,0
317,$class,1065
0,",",0
397," ",1065
317,$entity,1065
0,),0
0,;,0
397,"
      ",1065
0,},0
397,"

      ",1066
326,if,1068
397," ",1068
0,(,0
397," ",1068
0,!,0
397," ",1068
367,empty,1068
0,(,0
317,$this,1068
390,->,1068
313,entityChangeSets,1068
0,[,0
317,$oid,1068
0,],0
0,),0
0,),0
397," ",1068
0,{,0
397,"
        ",1068
317,$persister,1069
390,->,1069
313,update,1069
0,(,0
317,$entity,1069
0,),0
0,;,0
397,"
      ",1069
0,},0
397,"

      ",1070
365,unset,1072
0,(,0
317,$this,1072
390,->,1072
313,entityUpdates,1072
0,[,0
317,$oid,1072
0,],0
0,),0
0,;,0
397,"

      ",1072
326,if,1074
397," ",1074
0,(,0
317,$postUpdateInvoke,1074
397," ",1074
290,!=,1074
397," ",1074
313,ListenersInvoker,1074
402,::,1074
313,INVOKE_NONE,1074
0,),0
397," ",1074
0,{,0
397,"
        ",1074
317,$this,1075
390,->,1075
313,listenersInvoker,1075
390,->,1075
313,invoke,1075
0,(,0
317,$class,1075
0,",",0
397," ",1075
313,Events,1075
402,::,1075
313,postUpdate,1075
0,",",0
397," ",1075
317,$entity,1075
0,",",0
397," ",1075
324,new,1075
397," ",1075
313,LifecycleEventArgs,1075
0,(,0
317,$entity,1075
0,",",0
397," ",1075
317,$this,1075
390,->,1075
313,em,1075
0,),0
0,",",0
397," ",1075
317,$postUpdateInvoke,1075
0,),0
0,;,0
397,"
      ",1075
0,},0
397,"
    ",1076
0,},0
397,"
  ",1077
0,},0
397,"

  ",1078
393,"/**
   * Executes all entity deletions for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",1080
397,"
  ",1086
360,private,1087
397," ",1087
347,function,1087
397," ",1087
313,executeDeletions,1087
0,(,0
317,$class,1087
0,),0
397,"
  ",1087
0,{,0
397,"
    ",1088
317,$className,1089
397,"  ",1089
0,=,0
397," ",1089
317,$class,1089
390,->,1089
313,name,1089
0,;,0
397,"
    ",1089
317,$persister,1090
397,"  ",1090
0,=,0
397," ",1090
317,$this,1090
390,->,1090
313,getEntityPersister,1090
0,(,0
317,$className,1090
0,),0
0,;,0
397,"
    ",1090
317,$invoke,1091
397,"     ",1091
0,=,0
397," ",1091
317,$this,1091
390,->,1091
313,listenersInvoker,1091
390,->,1091
313,getSubscribedSystems,1091
0,(,0
317,$class,1091
0,",",0
397," ",1091
313,Events,1091
402,::,1091
313,postRemove,1091
0,),0
0,;,0
397,"

    ",1091
334,foreach,1093
397," ",1093
0,(,0
317,$this,1093
390,->,1093
313,entityDeletions,1093
397," ",1093
338,as,1093
397," ",1093
317,$oid,1093
397," ",1093
269,=>,1093
397," ",1093
317,$entity,1093
0,),0
397," ",1093
0,{,0
397,"
      ",1093
326,if,1094
397," ",1094
0,(,0
317,$this,1094
390,->,1094
313,em,1094
390,->,1094
313,getClassMetadata,1094
0,(,0
313,get_class,1094
0,(,0
317,$entity,1094
0,),0
0,),0
390,->,1094
313,name,1094
397," ",1094
292,!==,1094
397," ",1094
317,$className,1094
0,),0
397," ",1094
0,{,0
397,"
        ",1094
345,continue,1095
0,;,0
397,"
      ",1095
0,},0
397,"

      ",1096
317,$persister,1098
390,->,1098
313,delete,1098
0,(,0
317,$entity,1098
0,),0
0,;,0
397,"

      ",1098
365,unset,1100
0,(,0
397,"
        ",1100
317,$this,1101
390,->,1101
313,entityDeletions,1101
0,[,0
317,$oid,1101
0,],0
0,",",0
397,"
        ",1101
317,$this,1102
390,->,1102
313,entityIdentifiers,1102
0,[,0
317,$oid,1102
0,],0
0,",",0
397,"
        ",1102
317,$this,1103
390,->,1103
313,originalEntityData,1103
0,[,0
317,$oid,1103
0,],0
0,",",0
397,"
        ",1103
317,$this,1104
390,->,1104
313,entityStates,1104
0,[,0
317,$oid,1104
0,],0
397,"
      ",1104
0,),0
0,;,0
397,"

      ",1105
392,"// Entity with this $oid after deletion treated as NEW, even if the $oid",1107
397,"
      ",1107
392,"// is obtained by a new entity because the old one went out of scope.",1108
397,"
      ",1108
392,"//$this->entityStates[$oid] = self::STATE_NEW;",1109
397,"
      ",1109
326,if,1110
397," ",1110
0,(,0
397," ",1110
0,!,0
397," ",1110
317,$class,1110
390,->,1110
313,isIdentifierNatural,1110
0,(,0
0,),0
0,),0
397," ",1110
0,{,0
397,"
        ",1110
317,$class,1111
390,->,1111
313,reflFields,1111
0,[,0
317,$class,1111
390,->,1111
313,identifier,1111
0,[,0
311,0,1111
0,],0
0,],0
390,->,1111
313,setValue,1111
0,(,0
317,$entity,1111
0,",",0
397," ",1111
313,null,1111
0,),0
0,;,0
397,"
      ",1111
0,},0
397,"

      ",1112
326,if,1114
397," ",1114
0,(,0
317,$invoke,1114
397," ",1114
292,!==,1114
397," ",1114
313,ListenersInvoker,1114
402,::,1114
313,INVOKE_NONE,1114
0,),0
397," ",1114
0,{,0
397,"
        ",1114
317,$this,1115
390,->,1115
313,listenersInvoker,1115
390,->,1115
313,invoke,1115
0,(,0
317,$class,1115
0,",",0
397," ",1115
313,Events,1115
402,::,1115
313,postRemove,1115
0,",",0
397," ",1115
317,$entity,1115
0,",",0
397," ",1115
324,new,1115
397," ",1115
313,LifecycleEventArgs,1115
0,(,0
317,$entity,1115
0,",",0
397," ",1115
317,$this,1115
390,->,1115
313,em,1115
0,),0
0,",",0
397," ",1115
317,$invoke,1115
0,),0
0,;,0
397,"
      ",1115
0,},0
397,"
    ",1116
0,},0
397,"
  ",1117
0,},0
397,"

  ",1118
393,"/**
   * Gets the commit order.
   *
   * @param array|null $entityChangeSet
   *
   * @return array
   */",1120
397,"
  ",1126
360,private,1127
397," ",1127
347,function,1127
397," ",1127
313,getCommitOrder,1127
0,(,0
377,array,1127
397," ",1127
317,$entityChangeSet,1127
397," ",1127
0,=,0
397," ",1127
313,null,1127
0,),0
397,"
  ",1127
0,{,0
397,"
    ",1128
326,if,1129
397," ",1129
0,(,0
317,$entityChangeSet,1129
397," ",1129
291,===,1129
397," ",1129
313,null,1129
0,),0
397," ",1129
0,{,0
397,"
      ",1129
317,$entityChangeSet,1130
397," ",1130
0,=,0
397," ",1130
313,array_merge,1130
0,(,0
317,$this,1130
390,->,1130
313,entityInsertions,1130
0,",",0
397," ",1130
317,$this,1130
390,->,1130
313,entityUpdates,1130
0,",",0
397," ",1130
317,$this,1130
390,->,1130
313,entityDeletions,1130
0,),0
0,;,0
397,"
    ",1130
0,},0
397,"

    ",1131
317,$calc,1133
397," ",1133
0,=,0
397," ",1133
317,$this,1133
390,->,1133
313,getCommitOrderCalculator,1133
0,(,0
0,),0
0,;,0
397,"

    ",1133
392,"// See if there are any new classes in the changeset, that are not in the",1135
397,"
    ",1135
392,"// commit order graph yet (don't have a node).",1136
397,"
    ",1136
392,"// We have to inspect changeSet to be able to correctly build dependencies.",1137
397,"
    ",1137
392,"// It is not possible to use IdentityMap here because post inserted ids",1138
397,"
    ",1138
392,"// are not yet available.",1139
397,"
    ",1139
317,$newNodes,1140
397," ",1140
0,=,0
397," ",1140
377,array,1140
0,(,0
0,),0
0,;,0
397,"

    ",1140
334,foreach,1142
397," ",1142
0,(,0
317,$entityChangeSet,1142
397," ",1142
338,as,1142
397," ",1142
317,$entity,1142
0,),0
397," ",1142
0,{,0
397,"
      ",1142
317,$class,1143
397," ",1143
0,=,0
397," ",1143
317,$this,1143
390,->,1143
313,em,1143
390,->,1143
313,getClassMetadata,1143
0,(,0
313,get_class,1143
0,(,0
317,$entity,1143
0,),0
0,),0
0,;,0
397,"

      ",1143
326,if,1145
397," ",1145
0,(,0
317,$calc,1145
390,->,1145
313,hasClass,1145
0,(,0
317,$class,1145
390,->,1145
313,name,1145
0,),0
0,),0
397," ",1145
0,{,0
397,"
        ",1145
345,continue,1146
0,;,0
397,"
      ",1146
0,},0
397,"

      ",1147
317,$calc,1149
390,->,1149
313,addClass,1149
0,(,0
317,$class,1149
0,),0
0,;,0
397,"

      ",1149
317,$newNodes,1151
0,[,0
0,],0
397," ",1151
0,=,0
397," ",1151
317,$class,1151
0,;,0
397,"
    ",1151
0,},0
397,"

    ",1152
392,"// Calculate dependencies for new nodes",1154
397,"
    ",1154
330,while,1155
397," ",1155
0,(,0
317,$class,1155
397," ",1155
0,=,0
397," ",1155
313,array_pop,1155
0,(,0
317,$newNodes,1155
0,),0
0,),0
397," ",1155
0,{,0
397,"
      ",1155
334,foreach,1156
397," ",1156
0,(,0
317,$class,1156
390,->,1156
313,associationMappings,1156
397," ",1156
338,as,1156
397," ",1156
317,$assoc,1156
0,),0
397," ",1156
0,{,0
397,"
        ",1156
326,if,1157
397," ",1157
0,(,0
397," ",1157
0,!,0
397," ",1157
0,(,0
317,$assoc,1157
0,[,0
320,'isOwningSide',1157
0,],0
397," ",1157
286,&&,1157
397," ",1157
317,$assoc,1157
0,[,0
320,'type',1157
0,],0
397," ",1157
287,&,1157
397," ",1157
313,ClassMetadata,1157
402,::,1157
313,TO_ONE,1157
0,),0
0,),0
397," ",1157
0,{,0
397,"
          ",1157
345,continue,1158
0,;,0
397,"
        ",1158
0,},0
397,"

        ",1159
317,$targetClass,1161
397," ",1161
0,=,0
397," ",1161
317,$this,1161
390,->,1161
313,em,1161
390,->,1161
313,getClassMetadata,1161
0,(,0
317,$assoc,1161
0,[,0
320,'targetEntity',1161
0,],0
0,),0
0,;,0
397,"

        ",1161
326,if,1163
397," ",1163
0,(,0
397," ",1163
0,!,0
397," ",1163
317,$calc,1163
390,->,1163
313,hasClass,1163
0,(,0
317,$targetClass,1163
390,->,1163
313,name,1163
0,),0
0,),0
397," ",1163
0,{,0
397,"
          ",1163
317,$calc,1164
390,->,1164
313,addClass,1164
0,(,0
317,$targetClass,1164
0,),0
0,;,0
397,"

          ",1164
317,$newNodes,1166
0,[,0
0,],0
397," ",1166
0,=,0
397," ",1166
317,$targetClass,1166
0,;,0
397,"
        ",1166
0,},0
397,"

        ",1167
317,$calc,1169
390,->,1169
313,addDependency,1169
0,(,0
317,$targetClass,1169
0,",",0
397," ",1169
317,$class,1169
0,),0
0,;,0
397,"

        ",1169
392,"// If the target class has mapped subclasses, these share the same dependency.",1171
397,"
        ",1171
326,if,1172
397," ",1172
0,(,0
397," ",1172
0,!,0
397," ",1172
317,$targetClass,1172
390,->,1172
313,subClasses,1172
0,),0
397," ",1172
0,{,0
397,"
          ",1172
345,continue,1173
0,;,0
397,"
        ",1173
0,},0
397,"

        ",1174
334,foreach,1176
397," ",1176
0,(,0
317,$targetClass,1176
390,->,1176
313,subClasses,1176
397," ",1176
338,as,1176
397," ",1176
317,$subClassName,1176
0,),0
397," ",1176
0,{,0
397,"
          ",1176
317,$targetSubClass,1177
397," ",1177
0,=,0
397," ",1177
317,$this,1177
390,->,1177
313,em,1177
390,->,1177
313,getClassMetadata,1177
0,(,0
317,$subClassName,1177
0,),0
0,;,0
397,"

          ",1177
326,if,1179
397," ",1179
0,(,0
397," ",1179
0,!,0
397," ",1179
317,$calc,1179
390,->,1179
313,hasClass,1179
0,(,0
317,$subClassName,1179
0,),0
0,),0
397," ",1179
0,{,0
397,"
            ",1179
317,$calc,1180
390,->,1180
313,addClass,1180
0,(,0
317,$targetSubClass,1180
0,),0
0,;,0
397,"

            ",1180
317,$newNodes,1182
0,[,0
0,],0
397," ",1182
0,=,0
397," ",1182
317,$targetSubClass,1182
0,;,0
397,"
          ",1182
0,},0
397,"

          ",1183
317,$calc,1185
390,->,1185
313,addDependency,1185
0,(,0
317,$targetSubClass,1185
0,",",0
397," ",1185
317,$class,1185
0,),0
0,;,0
397,"
        ",1185
0,},0
397,"
      ",1186
0,},0
397,"
    ",1187
0,},0
397,"

    ",1188
350,return,1190
397," ",1190
317,$calc,1190
390,->,1190
313,getCommitOrder,1190
0,(,0
0,),0
0,;,0
397,"
  ",1190
0,},0
397,"

  ",1191
393,"/**
   * Schedules an entity for insertion into the database.
   * If the entity already has an identifier, it will be added to the identity map.
   *
   * @param object $entity The entity to schedule for insertion.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws \InvalidArgumentException
   */",1193
397,"
  ",1203
362,public,1204
397," ",1204
347,function,1204
397," ",1204
313,scheduleForInsert,1204
0,(,0
317,$entity,1204
0,),0
397,"
  ",1204
0,{,0
397,"
    ",1205
317,$oid,1206
397," ",1206
0,=,0
397," ",1206
313,spl_object_hash,1206
0,(,0
317,$entity,1206
0,),0
0,;,0
397,"

    ",1206
326,if,1208
397," ",1208
0,(,0
366,isset,1208
0,(,0
317,$this,1208
390,->,1208
313,entityUpdates,1208
0,[,0
317,$oid,1208
0,],0
0,),0
0,),0
397," ",1208
0,{,0
397,"
      ",1208
258,throw,1209
397," ",1209
324,new,1209
397," ",1209
313,InvalidArgumentException,1209
0,(,0
320,"""Dirty entity can not be scheduled for insertion.""",1209
0,),0
0,;,0
397,"
    ",1209
0,},0
397,"

    ",1210
326,if,1212
397," ",1212
0,(,0
366,isset,1212
0,(,0
317,$this,1212
390,->,1212
313,entityDeletions,1212
0,[,0
317,$oid,1212
0,],0
0,),0
0,),0
397," ",1212
0,{,0
397,"
      ",1212
258,throw,1213
397," ",1213
313,ORMInvalidArgumentException,1213
402,::,1213
313,scheduleInsertForRemovedEntity,1213
0,(,0
317,$entity,1213
0,),0
0,;,0
397,"
    ",1213
0,},0
397,"
    ",1214
326,if,1215
397," ",1215
0,(,0
366,isset,1215
0,(,0
317,$this,1215
390,->,1215
313,originalEntityData,1215
0,[,0
317,$oid,1215
0,],0
0,),0
397," ",1215
286,&&,1215
397," ",1215
0,!,0
397," ",1215
366,isset,1215
0,(,0
317,$this,1215
390,->,1215
313,entityInsertions,1215
0,[,0
317,$oid,1215
0,],0
0,),0
0,),0
397," ",1215
0,{,0
397,"
      ",1215
258,throw,1216
397," ",1216
313,ORMInvalidArgumentException,1216
402,::,1216
313,scheduleInsertForManagedEntity,1216
0,(,0
317,$entity,1216
0,),0
0,;,0
397,"
    ",1216
0,},0
397,"

    ",1217
326,if,1219
397," ",1219
0,(,0
366,isset,1219
0,(,0
317,$this,1219
390,->,1219
313,entityInsertions,1219
0,[,0
317,$oid,1219
0,],0
0,),0
0,),0
397," ",1219
0,{,0
397,"
      ",1219
258,throw,1220
397," ",1220
313,ORMInvalidArgumentException,1220
402,::,1220
313,scheduleInsertTwice,1220
0,(,0
317,$entity,1220
0,),0
0,;,0
397,"
    ",1220
0,},0
397,"

    ",1221
317,$this,1223
390,->,1223
313,entityInsertions,1223
0,[,0
317,$oid,1223
0,],0
397," ",1223
0,=,0
397," ",1223
317,$entity,1223
0,;,0
397,"

    ",1223
326,if,1225
397," ",1225
0,(,0
366,isset,1225
0,(,0
317,$this,1225
390,->,1225
313,entityIdentifiers,1225
0,[,0
317,$oid,1225
0,],0
0,),0
0,),0
397," ",1225
0,{,0
397,"
      ",1225
317,$this,1226
390,->,1226
313,addToIdentityMap,1226
0,(,0
317,$entity,1226
0,),0
0,;,0
397,"
    ",1226
0,},0
397,"

    ",1227
326,if,1229
397," ",1229
0,(,0
317,$entity,1229
397," ",1229
298,instanceof,1229
397," ",1229
313,NotifyPropertyChanged,1229
0,),0
397," ",1229
0,{,0
397,"
      ",1229
317,$entity,1230
390,->,1230
313,addPropertyChangedListener,1230
0,(,0
317,$this,1230
0,),0
0,;,0
397,"
    ",1230
0,},0
397,"
  ",1231
0,},0
397,"

  ",1232
393,"/**
   * Checks whether an entity is scheduled for insertion.
   *
   * @param object $entity
   *
   * @return boolean
   */",1234
397,"
  ",1240
362,public,1241
397," ",1241
347,function,1241
397," ",1241
313,isScheduledForInsert,1241
0,(,0
317,$entity,1241
0,),0
397,"
  ",1241
0,{,0
397,"
    ",1242
350,return,1243
397," ",1243
366,isset,1243
0,(,0
317,$this,1243
390,->,1243
313,entityInsertions,1243
0,[,0
313,spl_object_hash,1243
0,(,0
317,$entity,1243
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1243
0,},0
397,"

  ",1244
393,"/**
   * Schedules an entity for being updated.
   *
   * @param object $entity The entity to schedule for being updated.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   */",1246
397,"
  ",1254
362,public,1255
397," ",1255
347,function,1255
397," ",1255
313,scheduleForUpdate,1255
0,(,0
317,$entity,1255
0,),0
397,"
  ",1255
0,{,0
397,"
    ",1256
317,$oid,1257
397," ",1257
0,=,0
397," ",1257
313,spl_object_hash,1257
0,(,0
317,$entity,1257
0,),0
0,;,0
397,"

    ",1257
326,if,1259
397," ",1259
0,(,0
397," ",1259
0,!,0
397," ",1259
366,isset,1259
0,(,0
317,$this,1259
390,->,1259
313,entityIdentifiers,1259
0,[,0
317,$oid,1259
0,],0
0,),0
0,),0
397," ",1259
0,{,0
397,"
      ",1259
258,throw,1260
397," ",1260
313,ORMInvalidArgumentException,1260
402,::,1260
313,entityHasNoIdentity,1260
0,(,0
317,$entity,1260
0,",",0
397," ",1260
320,"""scheduling for update""",1260
0,),0
0,;,0
397,"
    ",1260
0,},0
397,"

    ",1261
326,if,1263
397," ",1263
0,(,0
366,isset,1263
0,(,0
317,$this,1263
390,->,1263
313,entityDeletions,1263
0,[,0
317,$oid,1263
0,],0
0,),0
0,),0
397," ",1263
0,{,0
397,"
      ",1263
258,throw,1264
397," ",1264
313,ORMInvalidArgumentException,1264
402,::,1264
313,entityIsRemoved,1264
0,(,0
317,$entity,1264
0,",",0
397," ",1264
320,"""schedule for update""",1264
0,),0
0,;,0
397,"
    ",1264
0,},0
397,"

    ",1265
326,if,1267
397," ",1267
0,(,0
397," ",1267
0,!,0
397," ",1267
366,isset,1267
0,(,0
317,$this,1267
390,->,1267
313,entityUpdates,1267
0,[,0
317,$oid,1267
0,],0
0,),0
397," ",1267
286,&&,1267
397," ",1267
0,!,0
397," ",1267
366,isset,1267
0,(,0
317,$this,1267
390,->,1267
313,entityInsertions,1267
0,[,0
317,$oid,1267
0,],0
0,),0
0,),0
397," ",1267
0,{,0
397,"
      ",1267
317,$this,1268
390,->,1268
313,entityUpdates,1268
0,[,0
317,$oid,1268
0,],0
397," ",1268
0,=,0
397," ",1268
317,$entity,1268
0,;,0
397,"
    ",1268
0,},0
397,"
  ",1269
0,},0
397,"

  ",1270
393,"/**
   * INTERNAL:
   * Schedules an extra update that will be executed immediately after the
   * regular entity updates within the currently running commit cycle.
   *
   * Extra updates for entities are stored as (entity, changeset) tuples.
   *
   * @ignore
   *
   * @param object $entity    The entity for which to schedule an extra update.
   * @param array  $changeset The changeset of the entity (what to update).
   *
   * @return void
   */",1272
397,"
  ",1285
362,public,1286
397," ",1286
347,function,1286
397," ",1286
313,scheduleExtraUpdate,1286
0,(,0
317,$entity,1286
0,",",0
397," ",1286
377,array,1286
397," ",1286
317,$changeset,1286
0,),0
397,"
  ",1286
0,{,0
397,"
    ",1287
317,$oid,1288
397,"         ",1288
0,=,0
397," ",1288
313,spl_object_hash,1288
0,(,0
317,$entity,1288
0,),0
0,;,0
397,"
    ",1288
317,$extraUpdate,1289
397," ",1289
0,=,0
397," ",1289
377,array,1289
0,(,0
317,$entity,1289
0,",",0
397," ",1289
317,$changeset,1289
0,),0
0,;,0
397,"

    ",1289
326,if,1291
397," ",1291
0,(,0
366,isset,1291
0,(,0
317,$this,1291
390,->,1291
313,extraUpdates,1291
0,[,0
317,$oid,1291
0,],0
0,),0
0,),0
397," ",1291
0,{,0
397,"
      ",1291
376,list,1292
0,(,0
317,$ignored,1292
0,",",0
397," ",1292
317,$changeset2,1292
0,),0
397," ",1292
0,=,0
397," ",1292
317,$this,1292
390,->,1292
313,extraUpdates,1292
0,[,0
317,$oid,1292
0,],0
0,;,0
397,"

      ",1292
317,$extraUpdate,1294
397," ",1294
0,=,0
397," ",1294
377,array,1294
0,(,0
317,$entity,1294
0,",",0
397," ",1294
317,$changeset,1294
397," ",1294
0,+,0
397," ",1294
317,$changeset2,1294
0,),0
0,;,0
397,"
    ",1294
0,},0
397,"

    ",1295
317,$this,1297
390,->,1297
313,extraUpdates,1297
0,[,0
317,$oid,1297
0,],0
397," ",1297
0,=,0
397," ",1297
317,$extraUpdate,1297
0,;,0
397,"
  ",1297
0,},0
397,"

  ",1298
393,"/**
   * Checks whether an entity is registered as dirty in the unit of work.
   * Note: Is not very useful currently as dirty entities are only registered
   * at commit time.
   *
   * @param object $entity
   *
   * @return boolean
   */",1300
397,"
  ",1308
362,public,1309
397," ",1309
347,function,1309
397," ",1309
313,isScheduledForUpdate,1309
0,(,0
317,$entity,1309
0,),0
397,"
  ",1309
0,{,0
397,"
    ",1310
350,return,1311
397," ",1311
366,isset,1311
0,(,0
317,$this,1311
390,->,1311
313,entityUpdates,1311
0,[,0
313,spl_object_hash,1311
0,(,0
317,$entity,1311
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1311
0,},0
397,"

  ",1312
393,"/**
   * Checks whether an entity is registered to be checked in the unit of work.
   *
   * @param object $entity
   *
   * @return boolean
   */",1314
397,"
  ",1320
362,public,1321
397," ",1321
347,function,1321
397," ",1321
313,isScheduledForDirtyCheck,1321
0,(,0
317,$entity,1321
0,),0
397,"
  ",1321
0,{,0
397,"
    ",1322
317,$rootEntityName,1323
397," ",1323
0,=,0
397," ",1323
317,$this,1323
390,->,1323
313,em,1323
390,->,1323
313,getClassMetadata,1323
0,(,0
313,get_class,1323
0,(,0
317,$entity,1323
0,),0
0,),0
390,->,1323
313,rootEntityName,1323
0,;,0
397,"

    ",1323
350,return,1325
397," ",1325
366,isset,1325
0,(,0
317,$this,1325
390,->,1325
313,scheduledForSynchronization,1325
0,[,0
317,$rootEntityName,1325
0,],0
0,[,0
313,spl_object_hash,1325
0,(,0
317,$entity,1325
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1325
0,},0
397,"

  ",1326
393,"/**
   * INTERNAL:
   * Schedules an entity for deletion.
   *
   * @param object $entity
   *
   * @return void
   */",1328
397,"
  ",1335
362,public,1336
397," ",1336
347,function,1336
397," ",1336
313,scheduleForDelete,1336
0,(,0
317,$entity,1336
0,),0
397,"
  ",1336
0,{,0
397,"
    ",1337
317,$oid,1338
397," ",1338
0,=,0
397," ",1338
313,spl_object_hash,1338
0,(,0
317,$entity,1338
0,),0
0,;,0
397,"

    ",1338
326,if,1340
397," ",1340
0,(,0
366,isset,1340
0,(,0
317,$this,1340
390,->,1340
313,entityInsertions,1340
0,[,0
317,$oid,1340
0,],0
0,),0
0,),0
397," ",1340
0,{,0
397,"
      ",1340
326,if,1341
397," ",1341
0,(,0
317,$this,1341
390,->,1341
313,isInIdentityMap,1341
0,(,0
317,$entity,1341
0,),0
0,),0
397," ",1341
0,{,0
397,"
        ",1341
317,$this,1342
390,->,1342
313,removeFromIdentityMap,1342
0,(,0
317,$entity,1342
0,),0
0,;,0
397,"
      ",1342
0,},0
397,"

      ",1343
365,unset,1345
0,(,0
317,$this,1345
390,->,1345
313,entityInsertions,1345
0,[,0
317,$oid,1345
0,],0
0,",",0
397," ",1345
317,$this,1345
390,->,1345
313,entityStates,1345
0,[,0
317,$oid,1345
0,],0
0,),0
0,;,0
397,"

      ",1345
350,return,1347
0,;,0
397," ",1347
392,"// entity has not been persisted yet, so nothing more to do.",1347
397,"
    ",1347
0,},0
397,"

    ",1348
326,if,1350
397," ",1350
0,(,0
397," ",1350
0,!,0
397," ",1350
317,$this,1350
390,->,1350
313,isInIdentityMap,1350
0,(,0
317,$entity,1350
0,),0
0,),0
397," ",1350
0,{,0
397,"
      ",1350
350,return,1351
0,;,0
397,"
    ",1351
0,},0
397,"

    ",1352
317,$this,1354
390,->,1354
313,removeFromIdentityMap,1354
0,(,0
317,$entity,1354
0,),0
0,;,0
397,"

    ",1354
326,if,1356
397," ",1356
0,(,0
366,isset,1356
0,(,0
317,$this,1356
390,->,1356
313,entityUpdates,1356
0,[,0
317,$oid,1356
0,],0
0,),0
0,),0
397," ",1356
0,{,0
397,"
      ",1356
365,unset,1357
0,(,0
317,$this,1357
390,->,1357
313,entityUpdates,1357
0,[,0
317,$oid,1357
0,],0
0,),0
0,;,0
397,"
    ",1357
0,},0
397,"

    ",1358
326,if,1360
397," ",1360
0,(,0
397," ",1360
0,!,0
397," ",1360
366,isset,1360
0,(,0
317,$this,1360
390,->,1360
313,entityDeletions,1360
0,[,0
317,$oid,1360
0,],0
0,),0
0,),0
397," ",1360
0,{,0
397,"
      ",1360
317,$this,1361
390,->,1361
313,entityDeletions,1361
0,[,0
317,$oid,1361
0,],0
397," ",1361
0,=,0
397," ",1361
317,$entity,1361
0,;,0
397,"
      ",1361
317,$this,1362
390,->,1362
313,entityStates,1362
0,[,0
317,$oid,1362
0,],0
397,"    ",1362
0,=,0
397," ",1362
313,self,1362
402,::,1362
313,STATE_REMOVED,1362
0,;,0
397,"
    ",1362
0,},0
397,"
  ",1363
0,},0
397,"

  ",1364
393,"/**
   * Checks whether an entity is registered as removed/deleted with the unit
   * of work.
   *
   * @param object $entity
   *
   * @return boolean
   */",1366
397,"
  ",1373
362,public,1374
397," ",1374
347,function,1374
397," ",1374
313,isScheduledForDelete,1374
0,(,0
317,$entity,1374
0,),0
397,"
  ",1374
0,{,0
397,"
    ",1375
350,return,1376
397," ",1376
366,isset,1376
0,(,0
317,$this,1376
390,->,1376
313,entityDeletions,1376
0,[,0
313,spl_object_hash,1376
0,(,0
317,$entity,1376
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1376
0,},0
397,"

  ",1377
393,"/**
   * Checks whether an entity is scheduled for insertion, update or deletion.
   *
   * @param object $entity
   *
   * @return boolean
   */",1379
397,"
  ",1385
362,public,1386
397," ",1386
347,function,1386
397," ",1386
313,isEntityScheduled,1386
0,(,0
317,$entity,1386
0,),0
397,"
  ",1386
0,{,0
397,"
    ",1387
317,$oid,1388
397," ",1388
0,=,0
397," ",1388
313,spl_object_hash,1388
0,(,0
317,$entity,1388
0,),0
0,;,0
397,"

    ",1388
350,return,1390
397," ",1390
366,isset,1390
0,(,0
317,$this,1390
390,->,1390
313,entityInsertions,1390
0,[,0
317,$oid,1390
0,],0
0,),0
397,"
      ",1390
285,||,1391
397," ",1391
366,isset,1391
0,(,0
317,$this,1391
390,->,1391
313,entityUpdates,1391
0,[,0
317,$oid,1391
0,],0
0,),0
397,"
      ",1391
285,||,1392
397," ",1392
366,isset,1392
0,(,0
317,$this,1392
390,->,1392
313,entityDeletions,1392
0,[,0
317,$oid,1392
0,],0
0,),0
0,;,0
397,"
  ",1392
0,},0
397,"

  ",1393
393,"/**
   * INTERNAL:
   * Registers an entity in the identity map.
   * Note that entities in a hierarchy are registered with the class name of
   * the root entity.
   *
   * @ignore
   *
   * @param object $entity  The entity to register.
   *
   * @return boolean TRUE if the registration was successful, FALSE if the identity of
   *                 the entity in question is already managed.
   *
   * @throws ORMInvalidArgumentException
   */",1395
397,"
  ",1409
362,public,1410
397," ",1410
347,function,1410
397," ",1410
313,addToIdentityMap,1410
0,(,0
317,$entity,1410
0,),0
397,"
  ",1410
0,{,0
397,"
    ",1411
317,$classMetadata,1412
397," ",1412
0,=,0
397," ",1412
317,$this,1412
390,->,1412
313,em,1412
390,->,1412
313,getClassMetadata,1412
0,(,0
313,get_class,1412
0,(,0
317,$entity,1412
0,),0
0,),0
0,;,0
397,"
    ",1412
317,$idHash,1413
397,"        ",1413
0,=,0
397," ",1413
313,implode,1413
0,(,0
320,"' '",1413
0,",",0
397," ",1413
317,$this,1413
390,->,1413
313,entityIdentifiers,1413
0,[,0
313,spl_object_hash,1413
0,(,0
317,$entity,1413
0,),0
0,],0
0,),0
0,;,0
397,"

    ",1413
326,if,1415
397," ",1415
0,(,0
317,$idHash,1415
397," ",1415
291,===,1415
397," ",1415
320,'',1415
0,),0
397," ",1415
0,{,0
397,"
      ",1415
258,throw,1416
397," ",1416
313,ORMInvalidArgumentException,1416
402,::,1416
313,entityWithoutIdentity,1416
0,(,0
317,$classMetadata,1416
390,->,1416
313,name,1416
0,",",0
397," ",1416
317,$entity,1416
0,),0
0,;,0
397,"
    ",1416
0,},0
397,"

    ",1417
317,$className,1419
397," ",1419
0,=,0
397," ",1419
317,$classMetadata,1419
390,->,1419
313,rootEntityName,1419
0,;,0
397,"

    ",1419
326,if,1421
397," ",1421
0,(,0
366,isset,1421
0,(,0
317,$this,1421
390,->,1421
313,identityMap,1421
0,[,0
317,$className,1421
0,],0
0,[,0
317,$idHash,1421
0,],0
0,),0
0,),0
397," ",1421
0,{,0
397,"
      ",1421
350,return,1422
397," ",1422
313,false,1422
0,;,0
397,"
    ",1422
0,},0
397,"

    ",1423
317,$this,1425
390,->,1425
313,identityMap,1425
0,[,0
317,$className,1425
0,],0
0,[,0
317,$idHash,1425
0,],0
397," ",1425
0,=,0
397," ",1425
317,$entity,1425
0,;,0
397,"

    ",1425
350,return,1427
397," ",1427
313,true,1427
0,;,0
397,"
  ",1427
0,},0
397,"

  ",1428
393,"/**
   * Gets the state of an entity with regard to the current unit of work.
   *
   * @param object   $entity
   * @param int|null $assume The state to assume if the state is not yet known (not MANAGED or REMOVED).
   *                         This parameter can be set to improve performance of entity state detection
   *                         by potentially avoiding a database lookup if the distinction between NEW and DETACHED
   *                         is either known or does not matter for the caller of the method.
   *
   * @return int The entity state.
   */",1430
397,"
  ",1440
362,public,1441
397," ",1441
347,function,1441
397," ",1441
313,getEntityState,1441
0,(,0
317,$entity,1441
0,",",0
397," ",1441
317,$assume,1441
397," ",1441
0,=,0
397," ",1441
313,null,1441
0,),0
397,"
  ",1441
0,{,0
397,"
    ",1442
317,$oid,1443
397," ",1443
0,=,0
397," ",1443
313,spl_object_hash,1443
0,(,0
317,$entity,1443
0,),0
0,;,0
397,"

    ",1443
326,if,1445
397," ",1445
0,(,0
366,isset,1445
0,(,0
317,$this,1445
390,->,1445
313,entityStates,1445
0,[,0
317,$oid,1445
0,],0
0,),0
0,),0
397," ",1445
0,{,0
397,"
      ",1445
350,return,1446
397," ",1446
317,$this,1446
390,->,1446
313,entityStates,1446
0,[,0
317,$oid,1446
0,],0
0,;,0
397,"
    ",1446
0,},0
397,"

    ",1447
326,if,1449
397," ",1449
0,(,0
317,$assume,1449
397," ",1449
292,!==,1449
397," ",1449
313,null,1449
0,),0
397," ",1449
0,{,0
397,"
      ",1449
350,return,1450
397," ",1450
317,$assume,1450
0,;,0
397,"
    ",1450
0,},0
397,"

    ",1451
392,"// State can only be NEW or DETACHED, because MANAGED/REMOVED states are known.",1453
397,"
    ",1453
392,"// Note that you can not remember the NEW or DETACHED state in _entityStates since",1454
397,"
    ",1454
392,"// the UoW does not hold references to such objects and the object hash can be reused.",1455
397,"
    ",1455
392,"// More generally because the state may ""change"" between NEW/DETACHED without the UoW being aware of it.",1456
397,"
    ",1456
317,$class,1457
397," ",1457
0,=,0
397," ",1457
317,$this,1457
390,->,1457
313,em,1457
390,->,1457
313,getClassMetadata,1457
0,(,0
313,get_class,1457
0,(,0
317,$entity,1457
0,),0
0,),0
0,;,0
397,"
    ",1457
317,$id,1458
397,"    ",1458
0,=,0
397," ",1458
317,$class,1458
390,->,1458
313,getIdentifierValues,1458
0,(,0
317,$entity,1458
0,),0
0,;,0
397,"

    ",1458
326,if,1460
397," ",1460
0,(,0
397," ",1460
0,!,0
397," ",1460
317,$id,1460
0,),0
397," ",1460
0,{,0
397,"
      ",1460
350,return,1461
397," ",1461
313,self,1461
402,::,1461
313,STATE_NEW,1461
0,;,0
397,"
    ",1461
0,},0
397,"

    ",1462
326,if,1464
397," ",1464
0,(,0
317,$class,1464
390,->,1464
313,containsForeignIdentifier,1464
0,),0
397," ",1464
0,{,0
397,"
      ",1464
317,$id,1465
397," ",1465
0,=,0
397," ",1465
317,$this,1465
390,->,1465
313,identifierFlattener,1465
390,->,1465
313,flattenIdentifier,1465
0,(,0
317,$class,1465
0,",",0
397," ",1465
317,$id,1465
0,),0
0,;,0
397,"
    ",1465
0,},0
397,"

    ",1466
339,switch,1468
397," ",1468
0,(,0
313,true,1468
0,),0
397," ",1468
0,{,0
397,"
      ",1468
341,case,1469
397," ",1469
0,(,0
317,$class,1469
390,->,1469
313,isIdentifierNatural,1469
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",1469
392,"// Check for a version field, if available, to avoid a db lookup.",1470
397,"
        ",1470
326,if,1471
397," ",1471
0,(,0
317,$class,1471
390,->,1471
313,isVersioned,1471
0,),0
397," ",1471
0,{,0
397,"
          ",1471
350,return,1472
397," ",1472
0,(,0
317,$class,1472
390,->,1472
313,getFieldValue,1472
0,(,0
317,$entity,1472
0,",",0
397," ",1472
317,$class,1472
390,->,1472
313,versionField,1472
0,),0
0,),0
397,"
            ",1472
0,?,0
397," ",1473
313,self,1473
402,::,1473
313,STATE_DETACHED,1473
397,"
            ",1473
0,:,0
397," ",1474
313,self,1474
402,::,1474
313,STATE_NEW,1474
0,;,0
397,"
        ",1474
0,},0
397,"

        ",1475
392,"// Last try before db lookup: check the identity map.",1477
397,"
        ",1477
326,if,1478
397," ",1478
0,(,0
317,$this,1478
390,->,1478
313,tryGetById,1478
0,(,0
317,$id,1478
0,",",0
397," ",1478
317,$class,1478
390,->,1478
313,rootEntityName,1478
0,),0
0,),0
397," ",1478
0,{,0
397,"
          ",1478
350,return,1479
397," ",1479
313,self,1479
402,::,1479
313,STATE_DETACHED,1479
0,;,0
397,"
        ",1479
0,},0
397,"

        ",1480
392,"// db lookup",1482
397,"
        ",1482
326,if,1483
397," ",1483
0,(,0
317,$this,1483
390,->,1483
313,getEntityPersister,1483
0,(,0
317,$class,1483
390,->,1483
313,name,1483
0,),0
390,->,1483
313,exists,1483
0,(,0
317,$entity,1483
0,),0
0,),0
397," ",1483
0,{,0
397,"
          ",1483
350,return,1484
397," ",1484
313,self,1484
402,::,1484
313,STATE_DETACHED,1484
0,;,0
397,"
        ",1484
0,},0
397,"

        ",1485
350,return,1487
397," ",1487
313,self,1487
402,::,1487
313,STATE_NEW,1487
0,;,0
397,"

      ",1487
341,case,1489
397," ",1489
0,(,0
397," ",1489
0,!,0
397," ",1489
317,$class,1489
390,->,1489
313,idGenerator,1489
390,->,1489
313,isPostInsertGenerator,1489
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",1489
392,"// if we have a pre insert generator we can't be sure that having an id",1490
397,"
        ",1490
392,"// really means that the entity exists. We have to verify this through",1491
397,"
        ",1491
392,"// the last resort: a db lookup",1492
397,"

        ",1492
392,"// Last try before db lookup: check the identity map.",1494
397,"
        ",1494
326,if,1495
397," ",1495
0,(,0
317,$this,1495
390,->,1495
313,tryGetById,1495
0,(,0
317,$id,1495
0,",",0
397," ",1495
317,$class,1495
390,->,1495
313,rootEntityName,1495
0,),0
0,),0
397," ",1495
0,{,0
397,"
          ",1495
350,return,1496
397," ",1496
313,self,1496
402,::,1496
313,STATE_DETACHED,1496
0,;,0
397,"
        ",1496
0,},0
397,"

        ",1497
392,"// db lookup",1499
397,"
        ",1499
326,if,1500
397," ",1500
0,(,0
317,$this,1500
390,->,1500
313,getEntityPersister,1500
0,(,0
317,$class,1500
390,->,1500
313,name,1500
0,),0
390,->,1500
313,exists,1500
0,(,0
317,$entity,1500
0,),0
0,),0
397," ",1500
0,{,0
397,"
          ",1500
350,return,1501
397," ",1501
313,self,1501
402,::,1501
313,STATE_DETACHED,1501
0,;,0
397,"
        ",1501
0,},0
397,"

        ",1502
350,return,1504
397," ",1504
313,self,1504
402,::,1504
313,STATE_NEW,1504
0,;,0
397,"

      ",1504
342,default,1506
0,:,0
397,"
        ",1506
350,return,1507
397," ",1507
313,self,1507
402,::,1507
313,STATE_DETACHED,1507
0,;,0
397,"
    ",1507
0,},0
397,"
  ",1508
0,},0
397,"

  ",1509
393,"/**
   * INTERNAL:
   * Removes an entity from the identity map. This effectively detaches the
   * entity from the persistence management of Doctrine.
   *
   * @ignore
   *
   * @param object $entity
   *
   * @return boolean
   *
   * @throws ORMInvalidArgumentException
   */",1511
397,"
  ",1523
362,public,1524
397," ",1524
347,function,1524
397," ",1524
313,removeFromIdentityMap,1524
0,(,0
317,$entity,1524
0,),0
397,"
  ",1524
0,{,0
397,"
    ",1525
317,$oid,1526
397,"           ",1526
0,=,0
397," ",1526
313,spl_object_hash,1526
0,(,0
317,$entity,1526
0,),0
0,;,0
397,"
    ",1526
317,$classMetadata,1527
397," ",1527
0,=,0
397," ",1527
317,$this,1527
390,->,1527
313,em,1527
390,->,1527
313,getClassMetadata,1527
0,(,0
313,get_class,1527
0,(,0
317,$entity,1527
0,),0
0,),0
0,;,0
397,"
    ",1527
317,$idHash,1528
397,"        ",1528
0,=,0
397," ",1528
313,implode,1528
0,(,0
320,"' '",1528
0,",",0
397," ",1528
317,$this,1528
390,->,1528
313,entityIdentifiers,1528
0,[,0
317,$oid,1528
0,],0
0,),0
0,;,0
397,"

    ",1528
326,if,1530
397," ",1530
0,(,0
317,$idHash,1530
397," ",1530
291,===,1530
397," ",1530
320,'',1530
0,),0
397," ",1530
0,{,0
397,"
      ",1530
258,throw,1531
397," ",1531
313,ORMInvalidArgumentException,1531
402,::,1531
313,entityHasNoIdentity,1531
0,(,0
317,$entity,1531
0,",",0
397," ",1531
320,"""remove from identity map""",1531
0,),0
0,;,0
397,"
    ",1531
0,},0
397,"

    ",1532
317,$className,1534
397," ",1534
0,=,0
397," ",1534
317,$classMetadata,1534
390,->,1534
313,rootEntityName,1534
0,;,0
397,"

    ",1534
326,if,1536
397," ",1536
0,(,0
366,isset,1536
0,(,0
317,$this,1536
390,->,1536
313,identityMap,1536
0,[,0
317,$className,1536
0,],0
0,[,0
317,$idHash,1536
0,],0
0,),0
0,),0
397," ",1536
0,{,0
397,"
      ",1536
365,unset,1537
0,(,0
317,$this,1537
390,->,1537
313,identityMap,1537
0,[,0
317,$className,1537
0,],0
0,[,0
317,$idHash,1537
0,],0
0,),0
0,;,0
397,"
      ",1537
365,unset,1538
0,(,0
317,$this,1538
390,->,1538
313,readOnlyObjects,1538
0,[,0
317,$oid,1538
0,],0
0,),0
0,;,0
397,"

      ",1538
392,"//$this->entityStates[$oid] = self::STATE_DETACHED;",1540
397,"

      ",1540
350,return,1542
397," ",1542
313,true,1542
0,;,0
397,"
    ",1542
0,},0
397,"

    ",1543
350,return,1545
397," ",1545
313,false,1545
0,;,0
397,"
  ",1545
0,},0
397,"

  ",1546
393,"/**
   * INTERNAL:
   * Gets an entity in the identity map by its identifier hash.
   *
   * @ignore
   *
   * @param string $idHash
   * @param string $rootClassName
   *
   * @return object
   */",1548
397,"
  ",1558
362,public,1559
397," ",1559
347,function,1559
397," ",1559
313,getByIdHash,1559
0,(,0
317,$idHash,1559
0,",",0
397," ",1559
317,$rootClassName,1559
0,),0
397,"
  ",1559
0,{,0
397,"
    ",1560
350,return,1561
397," ",1561
317,$this,1561
390,->,1561
313,identityMap,1561
0,[,0
317,$rootClassName,1561
0,],0
0,[,0
317,$idHash,1561
0,],0
0,;,0
397,"
  ",1561
0,},0
397,"

  ",1562
393,"/**
   * INTERNAL:
   * Tries to get an entity by its identifier hash. If no entity is found for
   * the given hash, FALSE is returned.
   *
   * @ignore
   *
   * @param mixed  $idHash        (must be possible to cast it to string)
   * @param string $rootClassName
   *
   * @return object|bool The found entity or FALSE.
   */",1564
397,"
  ",1575
362,public,1576
397," ",1576
347,function,1576
397," ",1576
313,tryGetByIdHash,1576
0,(,0
317,$idHash,1576
0,",",0
397," ",1576
317,$rootClassName,1576
0,),0
397,"
  ",1576
0,{,0
397,"
    ",1577
317,$stringIdHash,1578
397," ",1578
0,=,0
397," ",1578
301,(string),1578
397," ",1578
317,$idHash,1578
0,;,0
397,"

    ",1578
326,if,1580
397," ",1580
0,(,0
366,isset,1580
0,(,0
317,$this,1580
390,->,1580
313,identityMap,1580
0,[,0
317,$rootClassName,1580
0,],0
0,[,0
317,$stringIdHash,1580
0,],0
0,),0
0,),0
397," ",1580
0,{,0
397,"
      ",1580
350,return,1581
397," ",1581
317,$this,1581
390,->,1581
313,identityMap,1581
0,[,0
317,$rootClassName,1581
0,],0
0,[,0
317,$stringIdHash,1581
0,],0
0,;,0
397,"
    ",1581
0,},0
397,"

    ",1582
350,return,1584
397," ",1584
313,false,1584
0,;,0
397,"
  ",1584
0,},0
397,"

  ",1585
393,"/**
   * Checks whether an entity is registered in the identity map of this UnitOfWork.
   *
   * @param object $entity
   *
   * @return boolean
   */",1587
397,"
  ",1593
362,public,1594
397," ",1594
347,function,1594
397," ",1594
313,isInIdentityMap,1594
0,(,0
317,$entity,1594
0,),0
397,"
  ",1594
0,{,0
397,"
    ",1595
317,$oid,1596
397," ",1596
0,=,0
397," ",1596
313,spl_object_hash,1596
0,(,0
317,$entity,1596
0,),0
0,;,0
397,"

    ",1596
326,if,1598
397," ",1598
0,(,0
397," ",1598
0,!,0
397," ",1598
366,isset,1598
0,(,0
317,$this,1598
390,->,1598
313,entityIdentifiers,1598
0,[,0
317,$oid,1598
0,],0
0,),0
0,),0
397," ",1598
0,{,0
397,"
      ",1598
350,return,1599
397," ",1599
313,false,1599
0,;,0
397,"
    ",1599
0,},0
397,"

    ",1600
317,$classMetadata,1602
397," ",1602
0,=,0
397," ",1602
317,$this,1602
390,->,1602
313,em,1602
390,->,1602
313,getClassMetadata,1602
0,(,0
313,get_class,1602
0,(,0
317,$entity,1602
0,),0
0,),0
0,;,0
397,"
    ",1602
317,$idHash,1603
397,"        ",1603
0,=,0
397," ",1603
313,implode,1603
0,(,0
320,"' '",1603
0,",",0
397," ",1603
317,$this,1603
390,->,1603
313,entityIdentifiers,1603
0,[,0
317,$oid,1603
0,],0
0,),0
0,;,0
397,"

    ",1603
326,if,1605
397," ",1605
0,(,0
317,$idHash,1605
397," ",1605
291,===,1605
397," ",1605
320,'',1605
0,),0
397," ",1605
0,{,0
397,"
      ",1605
350,return,1606
397," ",1606
313,false,1606
0,;,0
397,"
    ",1606
0,},0
397,"

    ",1607
350,return,1609
397," ",1609
366,isset,1609
0,(,0
317,$this,1609
390,->,1609
313,identityMap,1609
0,[,0
317,$classMetadata,1609
390,->,1609
313,rootEntityName,1609
0,],0
0,[,0
317,$idHash,1609
0,],0
0,),0
0,;,0
397,"
  ",1609
0,},0
397,"

  ",1610
393,"/**
   * INTERNAL:
   * Checks whether an identifier hash exists in the identity map.
   *
   * @ignore
   *
   * @param string $idHash
   * @param string $rootClassName
   *
   * @return boolean
   */",1612
397,"
  ",1622
362,public,1623
397," ",1623
347,function,1623
397," ",1623
313,containsIdHash,1623
0,(,0
317,$idHash,1623
0,",",0
397," ",1623
317,$rootClassName,1623
0,),0
397,"
  ",1623
0,{,0
397,"
    ",1624
350,return,1625
397," ",1625
366,isset,1625
0,(,0
317,$this,1625
390,->,1625
313,identityMap,1625
0,[,0
317,$rootClassName,1625
0,],0
0,[,0
317,$idHash,1625
0,],0
0,),0
0,;,0
397,"
  ",1625
0,},0
397,"

  ",1626
393,"/**
   * Persists an entity as part of the current unit of work.
   *
   * @param object $entity The entity to persist.
   *
   * @return void
   */",1628
397,"
  ",1634
362,public,1635
397," ",1635
347,function,1635
397," ",1635
313,persist,1635
0,(,0
317,$entity,1635
0,),0
397,"
  ",1635
0,{,0
397,"
    ",1636
317,$visited,1637
397," ",1637
0,=,0
397," ",1637
377,array,1637
0,(,0
0,),0
0,;,0
397,"

    ",1637
317,$this,1639
390,->,1639
313,doPersist,1639
0,(,0
317,$entity,1639
0,",",0
397," ",1639
317,$visited,1639
0,),0
0,;,0
397,"
  ",1639
0,},0
397,"

  ",1640
393,"/**
   * Persists an entity as part of the current unit of work.
   *
   * This method is internally called during persist() cascades as it tracks
   * the already visited entities to prevent infinite recursions.
   *
   * @param object $entity  The entity to persist.
   * @param array  $visited The already visited entities.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws UnexpectedValueException
   */",1642
397,"
  ",1655
360,private,1656
397," ",1656
347,function,1656
397," ",1656
313,doPersist,1656
0,(,0
317,$entity,1656
0,",",0
397," ",1656
377,array,1656
397," ",1656
288,&,1656
317,$visited,1656
0,),0
397,"
  ",1656
0,{,0
397,"
    ",1657
317,$oid,1658
397," ",1658
0,=,0
397," ",1658
313,spl_object_hash,1658
0,(,0
317,$entity,1658
0,),0
0,;,0
397,"

    ",1658
326,if,1660
397," ",1660
0,(,0
366,isset,1660
0,(,0
317,$visited,1660
0,[,0
317,$oid,1660
0,],0
0,),0
0,),0
397," ",1660
0,{,0
397,"
      ",1660
350,return,1661
0,;,0
397," ",1661
392,"// Prevent infinite recursion",1661
397,"
    ",1661
0,},0
397,"

    ",1662
317,$visited,1664
0,[,0
317,$oid,1664
0,],0
397," ",1664
0,=,0
397," ",1664
317,$entity,1664
0,;,0
397," ",1664
392,"// Mark visited",1664
397,"

    ",1664
317,$class,1666
397," ",1666
0,=,0
397," ",1666
317,$this,1666
390,->,1666
313,em,1666
390,->,1666
313,getClassMetadata,1666
0,(,0
313,get_class,1666
0,(,0
317,$entity,1666
0,),0
0,),0
0,;,0
397,"

    ",1666
392,"// We assume NEW, so DETACHED entities result in an exception on flush (constraint violation).",1668
397,"
    ",1668
392,"// If we would detect DETACHED here we would throw an exception anyway with the same",1669
397,"
    ",1669
392,"// consequences (not recoverable/programming error), so just assuming NEW here",1670
397,"
    ",1670
392,"// lets us avoid some database lookups for entities with natural identifiers.",1671
397,"
    ",1671
317,$entityState,1672
397," ",1672
0,=,0
397," ",1672
317,$this,1672
390,->,1672
313,getEntityState,1672
0,(,0
317,$entity,1672
0,",",0
397," ",1672
313,self,1672
402,::,1672
313,STATE_NEW,1672
0,),0
0,;,0
397,"

    ",1672
339,switch,1674
397," ",1674
0,(,0
317,$entityState,1674
0,),0
397," ",1674
0,{,0
397,"
      ",1674
341,case,1675
397," ",1675
313,self,1675
402,::,1675
313,STATE_MANAGED,1675
0,:,0
397,"
        ",1675
392,"// Nothing to do, except if policy is ""deferred explicit""",1676
397,"
        ",1676
326,if,1677
397," ",1677
0,(,0
317,$class,1677
390,->,1677
313,isChangeTrackingDeferredExplicit,1677
0,(,0
0,),0
0,),0
397," ",1677
0,{,0
397,"
          ",1677
317,$this,1678
390,->,1678
313,scheduleForDirtyCheck,1678
0,(,0
317,$entity,1678
0,),0
0,;,0
397,"
        ",1678
0,},0
397,"
        ",1679
344,break,1680
0,;,0
397,"

      ",1680
341,case,1682
397," ",1682
313,self,1682
402,::,1682
313,STATE_NEW,1682
0,:,0
397,"
        ",1682
317,$this,1683
390,->,1683
313,persistNew,1683
0,(,0
317,$class,1683
0,",",0
397," ",1683
317,$entity,1683
0,),0
0,;,0
397,"
        ",1683
344,break,1684
0,;,0
397,"

      ",1684
341,case,1686
397," ",1686
313,self,1686
402,::,1686
313,STATE_REMOVED,1686
0,:,0
397,"
        ",1686
392,"// Entity becomes managed again",1687
397,"
        ",1687
365,unset,1688
0,(,0
317,$this,1688
390,->,1688
313,entityDeletions,1688
0,[,0
317,$oid,1688
0,],0
0,),0
0,;,0
397,"
        ",1688
317,$this,1689
390,->,1689
313,addToIdentityMap,1689
0,(,0
317,$entity,1689
0,),0
0,;,0
397,"

        ",1689
317,$this,1691
390,->,1691
313,entityStates,1691
0,[,0
317,$oid,1691
0,],0
397," ",1691
0,=,0
397," ",1691
313,self,1691
402,::,1691
313,STATE_MANAGED,1691
0,;,0
397,"
        ",1691
344,break,1692
0,;,0
397,"

      ",1692
341,case,1694
397," ",1694
313,self,1694
402,::,1694
313,STATE_DETACHED,1694
0,:,0
397,"
        ",1694
392,"// Can actually not happen right now since we assume STATE_NEW.",1695
397,"
        ",1695
258,throw,1696
397," ",1696
313,ORMInvalidArgumentException,1696
402,::,1696
313,detachedEntityCannot,1696
0,(,0
317,$entity,1696
0,",",0
397," ",1696
320,"""persisted""",1696
0,),0
0,;,0
397,"

      ",1696
342,default,1698
0,:,0
397,"
        ",1698
258,throw,1699
397," ",1699
324,new,1699
397," ",1699
313,UnexpectedValueException,1699
0,(,0
0,"""",0
319,"Unexpected entity state: ",1699
317,$entityState,1699
319,.,1699
0,"""",0
397," ",1699
0,.,0
397," ",1699
313,self,1699
402,::,1699
313,objToStr,1699
0,(,0
317,$entity,1699
0,),0
0,),0
0,;,0
397,"
    ",1699
0,},0
397,"

    ",1700
317,$this,1702
390,->,1702
313,cascadePersist,1702
0,(,0
317,$entity,1702
0,",",0
397," ",1702
317,$visited,1702
0,),0
0,;,0
397,"
  ",1702
0,},0
397,"

  ",1703
393,"/**
   * Deletes an entity as part of the current unit of work.
   *
   * @param object $entity The entity to remove.
   *
   * @return void
   */",1705
397,"
  ",1711
362,public,1712
397," ",1712
347,function,1712
397," ",1712
313,remove,1712
0,(,0
317,$entity,1712
0,),0
397,"
  ",1712
0,{,0
397,"
    ",1713
317,$visited,1714
397," ",1714
0,=,0
397," ",1714
377,array,1714
0,(,0
0,),0
0,;,0
397,"

    ",1714
317,$this,1716
390,->,1716
313,doRemove,1716
0,(,0
317,$entity,1716
0,",",0
397," ",1716
317,$visited,1716
0,),0
0,;,0
397,"
  ",1716
0,},0
397,"

  ",1717
393,"/**
   * Deletes an entity as part of the current unit of work.
   *
   * This method is internally called during delete() cascades as it tracks
   * the already visited entities to prevent infinite recursions.
   *
   * @param object $entity  The entity to delete.
   * @param array  $visited The map of the already visited entities.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the instance is a detached entity.
   * @throws UnexpectedValueException
   */",1719
397,"
  ",1732
360,private,1733
397," ",1733
347,function,1733
397," ",1733
313,doRemove,1733
0,(,0
317,$entity,1733
0,",",0
397," ",1733
377,array,1733
397," ",1733
288,&,1733
317,$visited,1733
0,),0
397,"
  ",1733
0,{,0
397,"
    ",1734
317,$oid,1735
397," ",1735
0,=,0
397," ",1735
313,spl_object_hash,1735
0,(,0
317,$entity,1735
0,),0
0,;,0
397,"

    ",1735
326,if,1737
397," ",1737
0,(,0
366,isset,1737
0,(,0
317,$visited,1737
0,[,0
317,$oid,1737
0,],0
0,),0
0,),0
397," ",1737
0,{,0
397,"
      ",1737
350,return,1738
0,;,0
397," ",1738
392,"// Prevent infinite recursion",1738
397,"
    ",1738
0,},0
397,"

    ",1739
317,$visited,1741
0,[,0
317,$oid,1741
0,],0
397," ",1741
0,=,0
397," ",1741
317,$entity,1741
0,;,0
397," ",1741
392,"// mark visited",1741
397,"

    ",1741
392,"// Cascade first, because scheduleForDelete() removes the entity from the identity map, which",1743
397,"
    ",1743
392,"// can cause problems when a lazy proxy has to be initialized for the cascade operation.",1744
397,"
    ",1744
317,$this,1745
390,->,1745
313,cascadeRemove,1745
0,(,0
317,$entity,1745
0,",",0
397," ",1745
317,$visited,1745
0,),0
0,;,0
397,"

    ",1745
317,$class,1747
397,"       ",1747
0,=,0
397," ",1747
317,$this,1747
390,->,1747
313,em,1747
390,->,1747
313,getClassMetadata,1747
0,(,0
313,get_class,1747
0,(,0
317,$entity,1747
0,),0
0,),0
0,;,0
397,"
    ",1747
317,$entityState,1748
397," ",1748
0,=,0
397," ",1748
317,$this,1748
390,->,1748
313,getEntityState,1748
0,(,0
317,$entity,1748
0,),0
0,;,0
397,"

    ",1748
339,switch,1750
397," ",1750
0,(,0
317,$entityState,1750
0,),0
397," ",1750
0,{,0
397,"
      ",1750
341,case,1751
397," ",1751
313,self,1751
402,::,1751
313,STATE_NEW,1751
0,:,0
397,"
      ",1751
341,case,1752
397," ",1752
313,self,1752
402,::,1752
313,STATE_REMOVED,1752
0,:,0
397,"
        ",1752
392,"// nothing to do",1753
397,"
        ",1753
344,break,1754
0,;,0
397,"

      ",1754
341,case,1756
397," ",1756
313,self,1756
402,::,1756
313,STATE_MANAGED,1756
0,:,0
397,"
        ",1756
317,$invoke,1757
397," ",1757
0,=,0
397," ",1757
317,$this,1757
390,->,1757
313,listenersInvoker,1757
390,->,1757
313,getSubscribedSystems,1757
0,(,0
317,$class,1757
0,",",0
397," ",1757
313,Events,1757
402,::,1757
313,preRemove,1757
0,),0
0,;,0
397,"

        ",1757
326,if,1759
397," ",1759
0,(,0
317,$invoke,1759
397," ",1759
292,!==,1759
397," ",1759
313,ListenersInvoker,1759
402,::,1759
313,INVOKE_NONE,1759
0,),0
397," ",1759
0,{,0
397,"
          ",1759
317,$this,1760
390,->,1760
313,listenersInvoker,1760
390,->,1760
313,invoke,1760
0,(,0
317,$class,1760
0,",",0
397," ",1760
313,Events,1760
402,::,1760
313,preRemove,1760
0,",",0
397," ",1760
317,$entity,1760
0,",",0
397," ",1760
324,new,1760
397," ",1760
313,LifecycleEventArgs,1760
0,(,0
317,$entity,1760
0,",",0
397," ",1760
317,$this,1760
390,->,1760
313,em,1760
0,),0
0,",",0
397," ",1760
317,$invoke,1760
0,),0
0,;,0
397,"
        ",1760
0,},0
397,"

        ",1761
317,$this,1763
390,->,1763
313,scheduleForDelete,1763
0,(,0
317,$entity,1763
0,),0
0,;,0
397,"
        ",1763
344,break,1764
0,;,0
397,"

      ",1764
341,case,1766
397," ",1766
313,self,1766
402,::,1766
313,STATE_DETACHED,1766
0,:,0
397,"
        ",1766
258,throw,1767
397," ",1767
313,ORMInvalidArgumentException,1767
402,::,1767
313,detachedEntityCannot,1767
0,(,0
317,$entity,1767
0,",",0
397," ",1767
320,"""removed""",1767
0,),0
0,;,0
397,"
      ",1767
342,default,1768
0,:,0
397,"
        ",1768
258,throw,1769
397," ",1769
324,new,1769
397," ",1769
313,UnexpectedValueException,1769
0,(,0
0,"""",0
319,"Unexpected entity state: ",1769
317,$entityState,1769
319,.,1769
0,"""",0
397," ",1769
0,.,0
397," ",1769
313,self,1769
402,::,1769
313,objToStr,1769
0,(,0
317,$entity,1769
0,),0
0,),0
0,;,0
397,"
    ",1769
0,},0
397,"

  ",1770
0,},0
397,"

  ",1772
393,"/**
   * Merges the state of the given detached entity into this UnitOfWork.
   *
   * @param object $entity
   *
   * @return object The managed copy of the entity.
   *
   * @throws OptimisticLockException If the entity uses optimistic locking through a version
   *         attribute and the version check against the managed copy fails.
   *
   * @todo Require active transaction!? OptimisticLockException may result in undefined state!?
   */",1774
397,"
  ",1785
362,public,1786
397," ",1786
347,function,1786
397," ",1786
313,merge,1786
0,(,0
317,$entity,1786
0,),0
397,"
  ",1786
0,{,0
397,"
    ",1787
317,$visited,1788
397," ",1788
0,=,0
397," ",1788
377,array,1788
0,(,0
0,),0
0,;,0
397,"

    ",1788
350,return,1790
397," ",1790
317,$this,1790
390,->,1790
313,doMerge,1790
0,(,0
317,$entity,1790
0,",",0
397," ",1790
317,$visited,1790
0,),0
0,;,0
397,"
  ",1790
0,},0
397,"

  ",1791
393,"/**
   * Executes a merge operation on an entity.
   *
   * @param object      $entity
   * @param array       $visited
   * @param object|null $prevManagedCopy
   * @param array|null  $assoc
   *
   * @return object The managed copy of the entity.
   *
   * @throws OptimisticLockException If the entity uses optimistic locking through a version
   *         attribute and the version check against the managed copy fails.
   * @throws ORMInvalidArgumentException If the entity instance is NEW.
   * @throws EntityNotFoundException
   */",1793
397,"
  ",1807
360,private,1808
397," ",1808
347,function,1808
397," ",1808
313,doMerge,1808
0,(,0
317,$entity,1808
0,",",0
397," ",1808
377,array,1808
397," ",1808
288,&,1808
317,$visited,1808
0,",",0
397," ",1808
317,$prevManagedCopy,1808
397," ",1808
0,=,0
397," ",1808
313,null,1808
0,",",0
397," ",1808
317,$assoc,1808
397," ",1808
0,=,0
397," ",1808
313,null,1808
0,),0
397,"
  ",1808
0,{,0
397,"
    ",1809
317,$oid,1810
397," ",1810
0,=,0
397," ",1810
313,spl_object_hash,1810
0,(,0
317,$entity,1810
0,),0
0,;,0
397,"

    ",1810
326,if,1812
397," ",1812
0,(,0
366,isset,1812
0,(,0
317,$visited,1812
0,[,0
317,$oid,1812
0,],0
0,),0
0,),0
397," ",1812
0,{,0
397,"
      ",1812
317,$managedCopy,1813
397," ",1813
0,=,0
397," ",1813
317,$visited,1813
0,[,0
317,$oid,1813
0,],0
0,;,0
397,"

      ",1813
326,if,1815
397," ",1815
0,(,0
317,$prevManagedCopy,1815
397," ",1815
292,!==,1815
397," ",1815
313,null,1815
0,),0
397," ",1815
0,{,0
397,"
        ",1815
317,$this,1816
390,->,1816
313,updateAssociationWithMergedEntity,1816
0,(,0
317,$entity,1816
0,",",0
397," ",1816
317,$assoc,1816
0,",",0
397," ",1816
317,$prevManagedCopy,1816
0,",",0
397," ",1816
317,$managedCopy,1816
0,),0
0,;,0
397,"
      ",1816
0,},0
397,"

      ",1817
350,return,1819
397," ",1819
317,$managedCopy,1819
0,;,0
397,"
    ",1819
0,},0
397,"

    ",1820
317,$class,1822
397," ",1822
0,=,0
397," ",1822
317,$this,1822
390,->,1822
313,em,1822
390,->,1822
313,getClassMetadata,1822
0,(,0
313,get_class,1822
0,(,0
317,$entity,1822
0,),0
0,),0
0,;,0
397,"

    ",1822
392,"// First we assume DETACHED, although it can still be NEW but we can avoid",1824
397,"
    ",1824
392,"// an extra db-roundtrip this way. If it is not MANAGED but has an identity,",1825
397,"
    ",1825
392,"// we need to fetch it from the db anyway in order to merge.",1826
397,"
    ",1826
392,"// MANAGED entities are ignored by the merge operation.",1827
397,"
    ",1827
317,$managedCopy,1828
397," ",1828
0,=,0
397," ",1828
317,$entity,1828
0,;,0
397,"

    ",1828
326,if,1830
397," ",1830
0,(,0
317,$this,1830
390,->,1830
313,getEntityState,1830
0,(,0
317,$entity,1830
0,",",0
397," ",1830
313,self,1830
402,::,1830
313,STATE_DETACHED,1830
0,),0
397," ",1830
292,!==,1830
397," ",1830
313,self,1830
402,::,1830
313,STATE_MANAGED,1830
0,),0
397," ",1830
0,{,0
397,"
      ",1830
392,"// Try to look the entity up in the identity map.",1831
397,"
      ",1831
317,$id,1832
397," ",1832
0,=,0
397," ",1832
317,$class,1832
390,->,1832
313,getIdentifierValues,1832
0,(,0
317,$entity,1832
0,),0
0,;,0
397,"

      ",1832
392,"// If there is no ID, it is actually NEW.",1834
397,"
      ",1834
326,if,1835
397," ",1835
0,(,0
397," ",1835
0,!,0
397," ",1835
317,$id,1835
0,),0
397," ",1835
0,{,0
397,"
        ",1835
317,$managedCopy,1836
397," ",1836
0,=,0
397," ",1836
317,$this,1836
390,->,1836
313,newInstance,1836
0,(,0
317,$class,1836
0,),0
0,;,0
397,"

        ",1836
317,$this,1838
390,->,1838
313,persistNew,1838
0,(,0
317,$class,1838
0,",",0
397," ",1838
317,$managedCopy,1838
0,),0
0,;,0
397,"
      ",1838
0,},0
397," ",1839
310,else,1839
397," ",1839
0,{,0
397,"
        ",1839
317,$flatId,1840
397," ",1840
0,=,0
397," ",1840
0,(,0
317,$class,1840
390,->,1840
313,containsForeignIdentifier,1840
0,),0
397,"
          ",1840
0,?,0
397," ",1841
317,$this,1841
390,->,1841
313,identifierFlattener,1841
390,->,1841
313,flattenIdentifier,1841
0,(,0
317,$class,1841
0,",",0
397," ",1841
317,$id,1841
0,),0
397,"
          ",1841
0,:,0
397," ",1842
317,$id,1842
0,;,0
397,"

        ",1842
317,$managedCopy,1844
397," ",1844
0,=,0
397," ",1844
317,$this,1844
390,->,1844
313,tryGetById,1844
0,(,0
317,$flatId,1844
0,",",0
397," ",1844
317,$class,1844
390,->,1844
313,rootEntityName,1844
0,),0
0,;,0
397,"

        ",1844
326,if,1846
397," ",1846
0,(,0
317,$managedCopy,1846
0,),0
397," ",1846
0,{,0
397,"
          ",1846
392,"// We have the entity in-memory already, just make sure its not removed.",1847
397,"
          ",1847
326,if,1848
397," ",1848
0,(,0
317,$this,1848
390,->,1848
313,getEntityState,1848
0,(,0
317,$managedCopy,1848
0,),0
397," ",1848
289,==,1848
397," ",1848
313,self,1848
402,::,1848
313,STATE_REMOVED,1848
0,),0
397," ",1848
0,{,0
397,"
            ",1848
258,throw,1849
397," ",1849
313,ORMInvalidArgumentException,1849
402,::,1849
313,entityIsRemoved,1849
0,(,0
317,$managedCopy,1849
0,",",0
397," ",1849
320,"""merge""",1849
0,),0
0,;,0
397,"
          ",1849
0,},0
397,"
        ",1850
0,},0
397," ",1851
310,else,1851
397," ",1851
0,{,0
397,"
          ",1851
392,"// We need to fetch the managed copy in order to merge.",1852
397,"
          ",1852
317,$managedCopy,1853
397," ",1853
0,=,0
397," ",1853
317,$this,1853
390,->,1853
313,em,1853
390,->,1853
313,find,1853
0,(,0
317,$class,1853
390,->,1853
313,name,1853
0,",",0
397," ",1853
317,$flatId,1853
0,),0
0,;,0
397,"
        ",1853
0,},0
397,"

        ",1854
326,if,1856
397," ",1856
0,(,0
317,$managedCopy,1856
397," ",1856
291,===,1856
397," ",1856
313,null,1856
0,),0
397," ",1856
0,{,0
397,"
          ",1856
392,"// If the identifier is ASSIGNED, it is NEW, otherwise an error",1857
397,"
          ",1857
392,"// since the managed entity was not found.",1858
397,"
          ",1858
326,if,1859
397," ",1859
0,(,0
397," ",1859
0,!,0
397," ",1859
317,$class,1859
390,->,1859
313,isIdentifierNatural,1859
0,(,0
0,),0
0,),0
397," ",1859
0,{,0
397,"
            ",1859
258,throw,1860
397," ",1860
313,EntityNotFoundException,1860
402,::,1860
313,fromClassNameAndIdentifier,1860
0,(,0
397,"
              ",1860
317,$class,1861
390,->,1861
313,getName,1861
0,(,0
0,),0
0,",",0
397,"
              ",1861
317,$this,1862
390,->,1862
313,identifierFlattener,1862
390,->,1862
313,flattenIdentifier,1862
0,(,0
317,$class,1862
0,",",0
397," ",1862
317,$id,1862
0,),0
397,"
            ",1862
0,),0
0,;,0
397,"
          ",1863
0,},0
397,"

          ",1864
317,$managedCopy,1866
397," ",1866
0,=,0
397," ",1866
317,$this,1866
390,->,1866
313,newInstance,1866
0,(,0
317,$class,1866
0,),0
0,;,0
397,"
          ",1866
317,$class,1867
390,->,1867
313,setIdentifierValues,1867
0,(,0
317,$managedCopy,1867
0,",",0
397," ",1867
317,$id,1867
0,),0
0,;,0
397,"

          ",1867
317,$this,1869
390,->,1869
313,persistNew,1869
0,(,0
317,$class,1869
0,",",0
397," ",1869
317,$managedCopy,1869
0,),0
0,;,0
397,"
        ",1869
0,},0
397,"
      ",1870
0,},0
397,"

      ",1871
326,if,1873
397," ",1873
0,(,0
317,$class,1873
390,->,1873
313,isVersioned,1873
397," ",1873
286,&&,1873
397," ",1873
317,$this,1873
390,->,1873
313,isLoaded,1873
0,(,0
317,$managedCopy,1873
0,),0
397," ",1873
286,&&,1873
397," ",1873
317,$this,1873
390,->,1873
313,isLoaded,1873
0,(,0
317,$entity,1873
0,),0
0,),0
397," ",1873
0,{,0
397,"
        ",1873
317,$reflField,1874
397,"          ",1874
0,=,0
397," ",1874
317,$class,1874
390,->,1874
313,reflFields,1874
0,[,0
317,$class,1874
390,->,1874
313,versionField,1874
0,],0
0,;,0
397,"
        ",1874
317,$managedCopyVersion,1875
397," ",1875
0,=,0
397," ",1875
317,$reflField,1875
390,->,1875
313,getValue,1875
0,(,0
317,$managedCopy,1875
0,),0
0,;,0
397,"
        ",1875
317,$entityVersion,1876
397,"      ",1876
0,=,0
397," ",1876
317,$reflField,1876
390,->,1876
313,getValue,1876
0,(,0
317,$entity,1876
0,),0
0,;,0
397,"

        ",1876
392,"// Throw exception if versions don't match.",1878
397,"
        ",1878
326,if,1879
397," ",1879
0,(,0
317,$managedCopyVersion,1879
397," ",1879
290,!=,1879
397," ",1879
317,$entityVersion,1879
0,),0
397," ",1879
0,{,0
397,"
          ",1879
258,throw,1880
397," ",1880
313,OptimisticLockException,1880
402,::,1880
313,lockFailedVersionMismatch,1880
0,(,0
317,$entity,1880
0,",",0
397," ",1880
317,$entityVersion,1880
0,",",0
397," ",1880
317,$managedCopyVersion,1880
0,),0
0,;,0
397,"
        ",1880
0,},0
397,"
      ",1881
0,},0
397,"

      ",1882
317,$visited,1884
0,[,0
317,$oid,1884
0,],0
397," ",1884
0,=,0
397," ",1884
317,$managedCopy,1884
0,;,0
397," ",1884
392,"// mark visited",1884
397,"

      ",1884
326,if,1886
397," ",1886
0,(,0
317,$this,1886
390,->,1886
313,isLoaded,1886
0,(,0
317,$entity,1886
0,),0
0,),0
397," ",1886
0,{,0
397,"
        ",1886
326,if,1887
397," ",1887
0,(,0
317,$managedCopy,1887
397," ",1887
298,instanceof,1887
397," ",1887
313,Proxy,1887
397," ",1887
286,&&,1887
397," ",1887
0,!,0
397," ",1887
317,$managedCopy,1887
390,->,1887
313,__isInitialized,1887
0,(,0
0,),0
0,),0
397," ",1887
0,{,0
397,"
          ",1887
317,$managedCopy,1888
390,->,1888
313,__load,1888
0,(,0
0,),0
0,;,0
397,"
        ",1888
0,},0
397,"

        ",1889
317,$this,1891
390,->,1891
313,mergeEntityStateIntoManagedCopy,1891
0,(,0
317,$entity,1891
0,",",0
397," ",1891
317,$managedCopy,1891
0,),0
0,;,0
397,"
      ",1891
0,},0
397,"

      ",1892
326,if,1894
397," ",1894
0,(,0
317,$class,1894
390,->,1894
313,isChangeTrackingDeferredExplicit,1894
0,(,0
0,),0
0,),0
397," ",1894
0,{,0
397,"
        ",1894
317,$this,1895
390,->,1895
313,scheduleForDirtyCheck,1895
0,(,0
317,$entity,1895
0,),0
0,;,0
397,"
      ",1895
0,},0
397,"
    ",1896
0,},0
397,"

    ",1897
326,if,1899
397," ",1899
0,(,0
317,$prevManagedCopy,1899
397," ",1899
292,!==,1899
397," ",1899
313,null,1899
0,),0
397," ",1899
0,{,0
397,"
      ",1899
317,$this,1900
390,->,1900
313,updateAssociationWithMergedEntity,1900
0,(,0
317,$entity,1900
0,",",0
397," ",1900
317,$assoc,1900
0,",",0
397," ",1900
317,$prevManagedCopy,1900
0,",",0
397," ",1900
317,$managedCopy,1900
0,),0
0,;,0
397,"
    ",1900
0,},0
397,"

    ",1901
392,"// Mark the managed copy visited as well",1903
397,"
    ",1903
317,$visited,1904
0,[,0
313,spl_object_hash,1904
0,(,0
317,$managedCopy,1904
0,),0
0,],0
397," ",1904
0,=,0
397," ",1904
317,$managedCopy,1904
0,;,0
397,"

    ",1904
317,$this,1906
390,->,1906
313,cascadeMerge,1906
0,(,0
317,$entity,1906
0,",",0
397," ",1906
317,$managedCopy,1906
0,",",0
397," ",1906
317,$visited,1906
0,),0
0,;,0
397,"

    ",1906
350,return,1908
397," ",1908
317,$managedCopy,1908
0,;,0
397,"
  ",1908
0,},0
397,"

  ",1909
393,"/**
   * Tests if an entity is loaded - must either be a loaded proxy or not a proxy
   *
   * @param object $entity
   *
   * @return bool
   */",1911
397,"
  ",1917
360,private,1918
397," ",1918
347,function,1918
397," ",1918
313,isLoaded,1918
0,(,0
317,$entity,1918
0,),0
397,"
  ",1918
0,{,0
397,"
    ",1919
350,return,1920
397," ",1920
0,!,0
0,(,0
317,$entity,1920
397," ",1920
298,instanceof,1920
397," ",1920
313,Proxy,1920
0,),0
397," ",1920
285,||,1920
397," ",1920
317,$entity,1920
390,->,1920
313,__isInitialized,1920
0,(,0
0,),0
0,;,0
397,"
  ",1920
0,},0
397,"

  ",1921
393,"/**
   * Sets/adds associated managed copies into the previous entity's association field
   *
   * @param object $entity
   * @param array  $association
   * @param object $previousManagedCopy
   * @param object $managedCopy
   *
   * @return void
   */",1923
397,"
  ",1932
360,private,1933
397," ",1933
347,function,1933
397," ",1933
313,updateAssociationWithMergedEntity,1933
0,(,0
317,$entity,1933
0,",",0
397," ",1933
377,array,1933
397," ",1933
317,$association,1933
0,",",0
397," ",1933
317,$previousManagedCopy,1933
0,",",0
397," ",1933
317,$managedCopy,1933
0,),0
397,"
  ",1933
0,{,0
397,"
    ",1934
317,$assocField,1935
397," ",1935
0,=,0
397," ",1935
317,$association,1935
0,[,0
320,'fieldName',1935
0,],0
0,;,0
397,"
    ",1935
317,$prevClass,1936
397,"  ",1936
0,=,0
397," ",1936
317,$this,1936
390,->,1936
313,em,1936
390,->,1936
313,getClassMetadata,1936
0,(,0
313,get_class,1936
0,(,0
317,$previousManagedCopy,1936
0,),0
0,),0
0,;,0
397,"

    ",1936
326,if,1938
397," ",1938
0,(,0
317,$association,1938
0,[,0
320,'type',1938
0,],0
397," ",1938
287,&,1938
397," ",1938
313,ClassMetadata,1938
402,::,1938
313,TO_ONE,1938
0,),0
397," ",1938
0,{,0
397,"
      ",1938
317,$prevClass,1939
390,->,1939
313,reflFields,1939
0,[,0
317,$assocField,1939
0,],0
390,->,1939
313,setValue,1939
0,(,0
317,$previousManagedCopy,1939
0,",",0
397," ",1939
317,$managedCopy,1939
0,),0
0,;,0
397,"

      ",1939
350,return,1941
0,;,0
397,"
    ",1941
0,},0
397,"

    ",1942
317,$value,1944
397,"   ",1944
0,=,0
397," ",1944
317,$prevClass,1944
390,->,1944
313,reflFields,1944
0,[,0
317,$assocField,1944
0,],0
390,->,1944
313,getValue,1944
0,(,0
317,$previousManagedCopy,1944
0,),0
0,;,0
397,"
    ",1944
317,$value,1945
0,[,0
0,],0
397," ",1945
0,=,0
397," ",1945
317,$managedCopy,1945
0,;,0
397,"

    ",1945
326,if,1947
397," ",1947
0,(,0
317,$association,1947
0,[,0
320,'type',1947
0,],0
397," ",1947
289,==,1947
397," ",1947
313,ClassMetadata,1947
402,::,1947
313,ONE_TO_MANY,1947
0,),0
397," ",1947
0,{,0
397,"
      ",1947
317,$class,1948
397," ",1948
0,=,0
397," ",1948
317,$this,1948
390,->,1948
313,em,1948
390,->,1948
313,getClassMetadata,1948
0,(,0
313,get_class,1948
0,(,0
317,$entity,1948
0,),0
0,),0
0,;,0
397,"

      ",1948
317,$class,1950
390,->,1950
313,reflFields,1950
0,[,0
317,$association,1950
0,[,0
320,'mappedBy',1950
0,],0
0,],0
390,->,1950
313,setValue,1950
0,(,0
317,$managedCopy,1950
0,",",0
397," ",1950
317,$previousManagedCopy,1950
0,),0
0,;,0
397,"
    ",1950
0,},0
397,"
  ",1951
0,},0
397,"

  ",1952
393,"/**
   * Detaches an entity from the persistence management. It's persistence will
   * no longer be managed by Doctrine.
   *
   * @param object $entity The entity to detach.
   *
   * @return void
   */",1954
397,"
  ",1961
362,public,1962
397," ",1962
347,function,1962
397," ",1962
313,detach,1962
0,(,0
317,$entity,1962
0,),0
397,"
  ",1962
0,{,0
397,"
    ",1963
317,$visited,1964
397," ",1964
0,=,0
397," ",1964
377,array,1964
0,(,0
0,),0
0,;,0
397,"

    ",1964
317,$this,1966
390,->,1966
313,doDetach,1966
0,(,0
317,$entity,1966
0,",",0
397," ",1966
317,$visited,1966
0,),0
0,;,0
397,"
  ",1966
0,},0
397,"

  ",1967
393,"/**
   * Executes a detach operation on the given entity.
   *
   * @param object  $entity
   * @param array   $visited
   * @param boolean $noCascade if true, don't cascade detach operation.
   *
   * @return void
   */",1969
397,"
  ",1977
360,private,1978
397," ",1978
347,function,1978
397," ",1978
313,doDetach,1978
0,(,0
317,$entity,1978
0,",",0
397," ",1978
377,array,1978
397," ",1978
288,&,1978
317,$visited,1978
0,",",0
397," ",1978
317,$noCascade,1978
397," ",1978
0,=,0
397," ",1978
313,false,1978
0,),0
397,"
  ",1978
0,{,0
397,"
    ",1979
317,$oid,1980
397," ",1980
0,=,0
397," ",1980
313,spl_object_hash,1980
0,(,0
317,$entity,1980
0,),0
0,;,0
397,"

    ",1980
326,if,1982
397," ",1982
0,(,0
366,isset,1982
0,(,0
317,$visited,1982
0,[,0
317,$oid,1982
0,],0
0,),0
0,),0
397," ",1982
0,{,0
397,"
      ",1982
350,return,1983
0,;,0
397," ",1983
392,"// Prevent infinite recursion",1983
397,"
    ",1983
0,},0
397,"

    ",1984
317,$visited,1986
0,[,0
317,$oid,1986
0,],0
397," ",1986
0,=,0
397," ",1986
317,$entity,1986
0,;,0
397," ",1986
392,"// mark visited",1986
397,"

    ",1986
339,switch,1988
397," ",1988
0,(,0
317,$this,1988
390,->,1988
313,getEntityState,1988
0,(,0
317,$entity,1988
0,",",0
397," ",1988
313,self,1988
402,::,1988
313,STATE_DETACHED,1988
0,),0
0,),0
397," ",1988
0,{,0
397,"
      ",1988
341,case,1989
397," ",1989
313,self,1989
402,::,1989
313,STATE_MANAGED,1989
0,:,0
397,"
        ",1989
326,if,1990
397," ",1990
0,(,0
317,$this,1990
390,->,1990
313,isInIdentityMap,1990
0,(,0
317,$entity,1990
0,),0
0,),0
397," ",1990
0,{,0
397,"
          ",1990
317,$this,1991
390,->,1991
313,removeFromIdentityMap,1991
0,(,0
317,$entity,1991
0,),0
0,;,0
397,"
        ",1991
0,},0
397,"

        ",1992
365,unset,1994
0,(,0
397,"
          ",1994
317,$this,1995
390,->,1995
313,entityInsertions,1995
0,[,0
317,$oid,1995
0,],0
0,",",0
397,"
          ",1995
317,$this,1996
390,->,1996
313,entityUpdates,1996
0,[,0
317,$oid,1996
0,],0
0,",",0
397,"
          ",1996
317,$this,1997
390,->,1997
313,entityDeletions,1997
0,[,0
317,$oid,1997
0,],0
0,",",0
397,"
          ",1997
317,$this,1998
390,->,1998
313,entityIdentifiers,1998
0,[,0
317,$oid,1998
0,],0
0,",",0
397,"
          ",1998
317,$this,1999
390,->,1999
313,entityStates,1999
0,[,0
317,$oid,1999
0,],0
0,",",0
397,"
          ",1999
317,$this,2000
390,->,2000
313,originalEntityData,2000
0,[,0
317,$oid,2000
0,],0
397,"
        ",2000
0,),0
0,;,0
397,"
        ",2001
344,break,2002
0,;,0
397,"
      ",2002
341,case,2003
397," ",2003
313,self,2003
402,::,2003
313,STATE_NEW,2003
0,:,0
397,"
      ",2003
341,case,2004
397," ",2004
313,self,2004
402,::,2004
313,STATE_DETACHED,2004
0,:,0
397,"
        ",2004
350,return,2005
0,;,0
397,"
    ",2005
0,},0
397,"

    ",2006
326,if,2008
397," ",2008
0,(,0
397," ",2008
0,!,0
397," ",2008
317,$noCascade,2008
0,),0
397," ",2008
0,{,0
397,"
      ",2008
317,$this,2009
390,->,2009
313,cascadeDetach,2009
0,(,0
317,$entity,2009
0,",",0
397," ",2009
317,$visited,2009
0,),0
0,;,0
397,"
    ",2009
0,},0
397,"
  ",2010
0,},0
397,"

  ",2011
393,"/**
   * Refreshes the state of the given entity from the database, overwriting
   * any local, unpersisted changes.
   *
   * @param object $entity The entity to refresh.
   *
   * @return void
   *
   * @throws InvalidArgumentException If the entity is not MANAGED.
   */",2013
397,"
  ",2022
362,public,2023
397," ",2023
347,function,2023
397," ",2023
313,refresh,2023
0,(,0
317,$entity,2023
0,),0
397,"
  ",2023
0,{,0
397,"
    ",2024
317,$visited,2025
397," ",2025
0,=,0
397," ",2025
377,array,2025
0,(,0
0,),0
0,;,0
397,"

    ",2025
317,$this,2027
390,->,2027
313,doRefresh,2027
0,(,0
317,$entity,2027
0,",",0
397," ",2027
317,$visited,2027
0,),0
0,;,0
397,"
  ",2027
0,},0
397,"

  ",2028
393,"/**
   * Executes a refresh operation on an entity.
   *
   * @param object $entity  The entity to refresh.
   * @param array  $visited The already visited entities during cascades.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the entity is not MANAGED.
   */",2030
397,"
  ",2039
360,private,2040
397," ",2040
347,function,2040
397," ",2040
313,doRefresh,2040
0,(,0
317,$entity,2040
0,",",0
397," ",2040
377,array,2040
397," ",2040
288,&,2040
317,$visited,2040
0,),0
397,"
  ",2040
0,{,0
397,"
    ",2041
317,$oid,2042
397," ",2042
0,=,0
397," ",2042
313,spl_object_hash,2042
0,(,0
317,$entity,2042
0,),0
0,;,0
397,"

    ",2042
326,if,2044
397," ",2044
0,(,0
366,isset,2044
0,(,0
317,$visited,2044
0,[,0
317,$oid,2044
0,],0
0,),0
0,),0
397," ",2044
0,{,0
397,"
      ",2044
350,return,2045
0,;,0
397," ",2045
392,"// Prevent infinite recursion",2045
397,"
    ",2045
0,},0
397,"

    ",2046
317,$visited,2048
0,[,0
317,$oid,2048
0,],0
397," ",2048
0,=,0
397," ",2048
317,$entity,2048
0,;,0
397," ",2048
392,"// mark visited",2048
397,"

    ",2048
317,$class,2050
397," ",2050
0,=,0
397," ",2050
317,$this,2050
390,->,2050
313,em,2050
390,->,2050
313,getClassMetadata,2050
0,(,0
313,get_class,2050
0,(,0
317,$entity,2050
0,),0
0,),0
0,;,0
397,"

    ",2050
326,if,2052
397," ",2052
0,(,0
317,$this,2052
390,->,2052
313,getEntityState,2052
0,(,0
317,$entity,2052
0,),0
397," ",2052
292,!==,2052
397," ",2052
313,self,2052
402,::,2052
313,STATE_MANAGED,2052
0,),0
397," ",2052
0,{,0
397,"
      ",2052
258,throw,2053
397," ",2053
313,ORMInvalidArgumentException,2053
402,::,2053
313,entityNotManaged,2053
0,(,0
317,$entity,2053
0,),0
0,;,0
397,"
    ",2053
0,},0
397,"

    ",2054
317,$this,2056
390,->,2056
313,getEntityPersister,2056
0,(,0
317,$class,2056
390,->,2056
313,name,2056
0,),0
390,->,2056
313,refresh,2056
0,(,0
397,"
      ",2056
313,array_combine,2057
0,(,0
317,$class,2057
390,->,2057
313,getIdentifierFieldNames,2057
0,(,0
0,),0
0,",",0
397," ",2057
317,$this,2057
390,->,2057
313,entityIdentifiers,2057
0,[,0
317,$oid,2057
0,],0
0,),0
0,",",0
397,"
      ",2057
317,$entity,2058
397,"
    ",2058
0,),0
0,;,0
397,"

    ",2059
317,$this,2061
390,->,2061
313,cascadeRefresh,2061
0,(,0
317,$entity,2061
0,",",0
397," ",2061
317,$visited,2061
0,),0
0,;,0
397,"
  ",2061
0,},0
397,"

  ",2062
393,"/**
   * Cascades a refresh operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2064
397,"
  ",2071
360,private,2072
397," ",2072
347,function,2072
397," ",2072
313,cascadeRefresh,2072
0,(,0
317,$entity,2072
0,",",0
397," ",2072
377,array,2072
397," ",2072
288,&,2072
317,$visited,2072
0,),0
397,"
  ",2072
0,{,0
397,"
    ",2073
317,$class,2074
397," ",2074
0,=,0
397," ",2074
317,$this,2074
390,->,2074
313,em,2074
390,->,2074
313,getClassMetadata,2074
0,(,0
313,get_class,2074
0,(,0
317,$entity,2074
0,),0
0,),0
0,;,0
397,"

    ",2074
317,$associationMappings,2076
397," ",2076
0,=,0
397," ",2076
313,array_filter,2076
0,(,0
397,"
      ",2076
317,$class,2077
390,->,2077
313,associationMappings,2077
0,",",0
397,"
      ",2077
347,function,2078
397," ",2078
0,(,0
317,$assoc,2078
0,),0
397," ",2078
0,{,0
397," ",2078
350,return,2078
397," ",2078
317,$assoc,2078
0,[,0
320,'isCascadeRefresh',2078
0,],0
0,;,0
397," ",2078
0,},0
397,"
    ",2078
0,),0
0,;,0
397,"

    ",2079
334,foreach,2081
397," ",2081
0,(,0
317,$associationMappings,2081
397," ",2081
338,as,2081
397," ",2081
317,$assoc,2081
0,),0
397," ",2081
0,{,0
397,"
      ",2081
317,$relatedEntities,2082
397," ",2082
0,=,0
397," ",2082
317,$class,2082
390,->,2082
313,reflFields,2082
0,[,0
317,$assoc,2082
0,[,0
320,'fieldName',2082
0,],0
0,],0
390,->,2082
313,getValue,2082
0,(,0
317,$entity,2082
0,),0
0,;,0
397,"

      ",2082
339,switch,2084
397," ",2084
0,(,0
313,true,2084
0,),0
397," ",2084
0,{,0
397,"
        ",2084
341,case,2085
397," ",2085
0,(,0
317,$relatedEntities,2085
397," ",2085
298,instanceof,2085
397," ",2085
313,PersistentCollection,2085
0,),0
0,:,0
397,"
          ",2085
392,"// Unwrap so that foreach() does not initialize",2086
397,"
          ",2086
317,$relatedEntities,2087
397," ",2087
0,=,0
397," ",2087
317,$relatedEntities,2087
390,->,2087
313,unwrap,2087
0,(,0
0,),0
0,;,0
397,"
        ",2087
392,"// break; is commented intentionally!",2088
397,"

        ",2088
341,case,2090
397," ",2090
0,(,0
317,$relatedEntities,2090
397," ",2090
298,instanceof,2090
397," ",2090
313,Collection,2090
0,),0
0,:,0
397,"
        ",2090
341,case,2091
397," ",2091
0,(,0
313,is_array,2091
0,(,0
317,$relatedEntities,2091
0,),0
0,),0
0,:,0
397,"
          ",2091
334,foreach,2092
397," ",2092
0,(,0
317,$relatedEntities,2092
397," ",2092
338,as,2092
397," ",2092
317,$relatedEntity,2092
0,),0
397," ",2092
0,{,0
397,"
            ",2092
317,$this,2093
390,->,2093
313,doRefresh,2093
0,(,0
317,$relatedEntity,2093
0,",",0
397," ",2093
317,$visited,2093
0,),0
0,;,0
397,"
          ",2093
0,},0
397,"
          ",2094
344,break,2095
0,;,0
397,"

        ",2095
341,case,2097
397," ",2097
0,(,0
317,$relatedEntities,2097
397," ",2097
292,!==,2097
397," ",2097
313,null,2097
0,),0
0,:,0
397,"
          ",2097
317,$this,2098
390,->,2098
313,doRefresh,2098
0,(,0
317,$relatedEntities,2098
0,",",0
397," ",2098
317,$visited,2098
0,),0
0,;,0
397,"
          ",2098
344,break,2099
0,;,0
397,"

        ",2099
342,default,2101
0,:,0
397,"
          ",2101
392,"// Do nothing",2102
397,"
      ",2102
0,},0
397,"
    ",2103
0,},0
397,"
  ",2104
0,},0
397,"

  ",2105
393,"/**
   * Cascades a detach operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2107
397,"
  ",2114
360,private,2115
397," ",2115
347,function,2115
397," ",2115
313,cascadeDetach,2115
0,(,0
317,$entity,2115
0,",",0
397," ",2115
377,array,2115
397," ",2115
288,&,2115
317,$visited,2115
0,),0
397,"
  ",2115
0,{,0
397,"
    ",2116
317,$class,2117
397," ",2117
0,=,0
397," ",2117
317,$this,2117
390,->,2117
313,em,2117
390,->,2117
313,getClassMetadata,2117
0,(,0
313,get_class,2117
0,(,0
317,$entity,2117
0,),0
0,),0
0,;,0
397,"

    ",2117
317,$associationMappings,2119
397," ",2119
0,=,0
397," ",2119
313,array_filter,2119
0,(,0
397,"
      ",2119
317,$class,2120
390,->,2120
313,associationMappings,2120
0,",",0
397,"
      ",2120
347,function,2121
397," ",2121
0,(,0
317,$assoc,2121
0,),0
397," ",2121
0,{,0
397," ",2121
350,return,2121
397," ",2121
317,$assoc,2121
0,[,0
320,'isCascadeDetach',2121
0,],0
0,;,0
397," ",2121
0,},0
397,"
    ",2121
0,),0
0,;,0
397,"

    ",2122
334,foreach,2124
397," ",2124
0,(,0
317,$associationMappings,2124
397," ",2124
338,as,2124
397," ",2124
317,$assoc,2124
0,),0
397," ",2124
0,{,0
397,"
      ",2124
317,$relatedEntities,2125
397," ",2125
0,=,0
397," ",2125
317,$class,2125
390,->,2125
313,reflFields,2125
0,[,0
317,$assoc,2125
0,[,0
320,'fieldName',2125
0,],0
0,],0
390,->,2125
313,getValue,2125
0,(,0
317,$entity,2125
0,),0
0,;,0
397,"

      ",2125
339,switch,2127
397," ",2127
0,(,0
313,true,2127
0,),0
397," ",2127
0,{,0
397,"
        ",2127
341,case,2128
397," ",2128
0,(,0
317,$relatedEntities,2128
397," ",2128
298,instanceof,2128
397," ",2128
313,PersistentCollection,2128
0,),0
0,:,0
397,"
          ",2128
392,"// Unwrap so that foreach() does not initialize",2129
397,"
          ",2129
317,$relatedEntities,2130
397," ",2130
0,=,0
397," ",2130
317,$relatedEntities,2130
390,->,2130
313,unwrap,2130
0,(,0
0,),0
0,;,0
397,"
        ",2130
392,"// break; is commented intentionally!",2131
397,"

        ",2131
341,case,2133
397," ",2133
0,(,0
317,$relatedEntities,2133
397," ",2133
298,instanceof,2133
397," ",2133
313,Collection,2133
0,),0
0,:,0
397,"
        ",2133
341,case,2134
397," ",2134
0,(,0
313,is_array,2134
0,(,0
317,$relatedEntities,2134
0,),0
0,),0
0,:,0
397,"
          ",2134
334,foreach,2135
397," ",2135
0,(,0
317,$relatedEntities,2135
397," ",2135
338,as,2135
397," ",2135
317,$relatedEntity,2135
0,),0
397," ",2135
0,{,0
397,"
            ",2135
317,$this,2136
390,->,2136
313,doDetach,2136
0,(,0
317,$relatedEntity,2136
0,",",0
397," ",2136
317,$visited,2136
0,),0
0,;,0
397,"
          ",2136
0,},0
397,"
          ",2137
344,break,2138
0,;,0
397,"

        ",2138
341,case,2140
397," ",2140
0,(,0
317,$relatedEntities,2140
397," ",2140
292,!==,2140
397," ",2140
313,null,2140
0,),0
0,:,0
397,"
          ",2140
317,$this,2141
390,->,2141
313,doDetach,2141
0,(,0
317,$relatedEntities,2141
0,",",0
397," ",2141
317,$visited,2141
0,),0
0,;,0
397,"
          ",2141
344,break,2142
0,;,0
397,"

        ",2142
342,default,2144
0,:,0
397,"
          ",2144
392,"// Do nothing",2145
397,"
      ",2145
0,},0
397,"
    ",2146
0,},0
397,"
  ",2147
0,},0
397,"

  ",2148
393,"/**
   * Cascades a merge operation to associated entities.
   *
   * @param object $entity
   * @param object $managedCopy
   * @param array  $visited
   *
   * @return void
   */",2150
397,"
  ",2158
360,private,2159
397," ",2159
347,function,2159
397," ",2159
313,cascadeMerge,2159
0,(,0
317,$entity,2159
0,",",0
397," ",2159
317,$managedCopy,2159
0,",",0
397," ",2159
377,array,2159
397," ",2159
288,&,2159
317,$visited,2159
0,),0
397,"
  ",2159
0,{,0
397,"
    ",2160
317,$class,2161
397," ",2161
0,=,0
397," ",2161
317,$this,2161
390,->,2161
313,em,2161
390,->,2161
313,getClassMetadata,2161
0,(,0
313,get_class,2161
0,(,0
317,$entity,2161
0,),0
0,),0
0,;,0
397,"

    ",2161
317,$associationMappings,2163
397," ",2163
0,=,0
397," ",2163
313,array_filter,2163
0,(,0
397,"
      ",2163
317,$class,2164
390,->,2164
313,associationMappings,2164
0,",",0
397,"
      ",2164
347,function,2165
397," ",2165
0,(,0
317,$assoc,2165
0,),0
397," ",2165
0,{,0
397," ",2165
350,return,2165
397," ",2165
317,$assoc,2165
0,[,0
320,'isCascadeMerge',2165
0,],0
0,;,0
397," ",2165
0,},0
397,"
    ",2165
0,),0
0,;,0
397,"

    ",2166
334,foreach,2168
397," ",2168
0,(,0
317,$associationMappings,2168
397," ",2168
338,as,2168
397," ",2168
317,$assoc,2168
0,),0
397," ",2168
0,{,0
397,"
      ",2168
317,$relatedEntities,2169
397," ",2169
0,=,0
397," ",2169
317,$class,2169
390,->,2169
313,reflFields,2169
0,[,0
317,$assoc,2169
0,[,0
320,'fieldName',2169
0,],0
0,],0
390,->,2169
313,getValue,2169
0,(,0
317,$entity,2169
0,),0
0,;,0
397,"

      ",2169
326,if,2171
397," ",2171
0,(,0
317,$relatedEntities,2171
397," ",2171
298,instanceof,2171
397," ",2171
313,Collection,2171
0,),0
397," ",2171
0,{,0
397,"
        ",2171
326,if,2172
397," ",2172
0,(,0
317,$relatedEntities,2172
397," ",2172
291,===,2172
397," ",2172
317,$class,2172
390,->,2172
313,reflFields,2172
0,[,0
317,$assoc,2172
0,[,0
320,'fieldName',2172
0,],0
0,],0
390,->,2172
313,getValue,2172
0,(,0
317,$managedCopy,2172
0,),0
0,),0
397," ",2172
0,{,0
397,"
          ",2172
345,continue,2173
0,;,0
397,"
        ",2173
0,},0
397,"

        ",2174
326,if,2176
397," ",2176
0,(,0
317,$relatedEntities,2176
397," ",2176
298,instanceof,2176
397," ",2176
313,PersistentCollection,2176
0,),0
397," ",2176
0,{,0
397,"
          ",2176
392,"// Unwrap so that foreach() does not initialize",2177
397,"
          ",2177
317,$relatedEntities,2178
397," ",2178
0,=,0
397," ",2178
317,$relatedEntities,2178
390,->,2178
313,unwrap,2178
0,(,0
0,),0
0,;,0
397,"
        ",2178
0,},0
397,"

        ",2179
334,foreach,2181
397," ",2181
0,(,0
317,$relatedEntities,2181
397," ",2181
338,as,2181
397," ",2181
317,$relatedEntity,2181
0,),0
397," ",2181
0,{,0
397,"
          ",2181
317,$this,2182
390,->,2182
313,doMerge,2182
0,(,0
317,$relatedEntity,2182
0,",",0
397," ",2182
317,$visited,2182
0,",",0
397," ",2182
317,$managedCopy,2182
0,",",0
397," ",2182
317,$assoc,2182
0,),0
0,;,0
397,"
        ",2182
0,},0
397,"
      ",2183
0,},0
397," ",2184
310,else,2184
397," ",2184
326,if,2184
397," ",2184
0,(,0
317,$relatedEntities,2184
397," ",2184
292,!==,2184
397," ",2184
313,null,2184
0,),0
397," ",2184
0,{,0
397,"
        ",2184
317,$this,2185
390,->,2185
313,doMerge,2185
0,(,0
317,$relatedEntities,2185
0,",",0
397," ",2185
317,$visited,2185
0,",",0
397," ",2185
317,$managedCopy,2185
0,",",0
397," ",2185
317,$assoc,2185
0,),0
0,;,0
397,"
      ",2185
0,},0
397,"
    ",2186
0,},0
397,"
  ",2187
0,},0
397,"

  ",2188
393,"/**
   * Cascades the save operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2190
397,"
  ",2197
360,private,2198
397," ",2198
347,function,2198
397," ",2198
313,cascadePersist,2198
0,(,0
317,$entity,2198
0,",",0
397," ",2198
377,array,2198
397," ",2198
288,&,2198
317,$visited,2198
0,),0
397,"
  ",2198
0,{,0
397,"
    ",2199
317,$class,2200
397," ",2200
0,=,0
397," ",2200
317,$this,2200
390,->,2200
313,em,2200
390,->,2200
313,getClassMetadata,2200
0,(,0
313,get_class,2200
0,(,0
317,$entity,2200
0,),0
0,),0
0,;,0
397,"

    ",2200
317,$associationMappings,2202
397," ",2202
0,=,0
397," ",2202
313,array_filter,2202
0,(,0
397,"
      ",2202
317,$class,2203
390,->,2203
313,associationMappings,2203
0,",",0
397,"
      ",2203
347,function,2204
397," ",2204
0,(,0
317,$assoc,2204
0,),0
397," ",2204
0,{,0
397," ",2204
350,return,2204
397," ",2204
317,$assoc,2204
0,[,0
320,'isCascadePersist',2204
0,],0
0,;,0
397," ",2204
0,},0
397,"
    ",2204
0,),0
0,;,0
397,"

    ",2205
334,foreach,2207
397," ",2207
0,(,0
317,$associationMappings,2207
397," ",2207
338,as,2207
397," ",2207
317,$assoc,2207
0,),0
397," ",2207
0,{,0
397,"
      ",2207
317,$relatedEntities,2208
397," ",2208
0,=,0
397," ",2208
317,$class,2208
390,->,2208
313,reflFields,2208
0,[,0
317,$assoc,2208
0,[,0
320,'fieldName',2208
0,],0
0,],0
390,->,2208
313,getValue,2208
0,(,0
317,$entity,2208
0,),0
0,;,0
397,"

      ",2208
339,switch,2210
397," ",2210
0,(,0
313,true,2210
0,),0
397," ",2210
0,{,0
397,"
        ",2210
341,case,2211
397," ",2211
0,(,0
317,$relatedEntities,2211
397," ",2211
298,instanceof,2211
397," ",2211
313,PersistentCollection,2211
0,),0
0,:,0
397,"
          ",2211
392,"// Unwrap so that foreach() does not initialize",2212
397,"
          ",2212
317,$relatedEntities,2213
397," ",2213
0,=,0
397," ",2213
317,$relatedEntities,2213
390,->,2213
313,unwrap,2213
0,(,0
0,),0
0,;,0
397,"
        ",2213
392,"// break; is commented intentionally!",2214
397,"

        ",2214
341,case,2216
397," ",2216
0,(,0
317,$relatedEntities,2216
397," ",2216
298,instanceof,2216
397," ",2216
313,Collection,2216
0,),0
0,:,0
397,"
        ",2216
341,case,2217
397," ",2217
0,(,0
313,is_array,2217
0,(,0
317,$relatedEntities,2217
0,),0
0,),0
0,:,0
397,"
          ",2217
326,if,2218
397," ",2218
0,(,0
0,(,0
317,$assoc,2218
0,[,0
320,'type',2218
0,],0
397," ",2218
287,&,2218
397," ",2218
313,ClassMetadata,2218
402,::,2218
313,TO_MANY,2218
0,),0
397," ",2218
294,<=,2218
397," ",2218
311,0,2218
0,),0
397," ",2218
0,{,0
397,"
            ",2218
258,throw,2219
397," ",2219
313,ORMInvalidArgumentException,2219
402,::,2219
313,invalidAssociation,2219
0,(,0
397,"
              ",2219
317,$this,2220
390,->,2220
313,em,2220
390,->,2220
313,getClassMetadata,2220
0,(,0
317,$assoc,2220
0,[,0
320,'targetEntity',2220
0,],0
0,),0
0,",",0
397,"
              ",2220
317,$assoc,2221
0,",",0
397,"
              ",2221
317,$relatedEntities,2222
397,"
            ",2222
0,),0
0,;,0
397,"
          ",2223
0,},0
397,"

          ",2224
334,foreach,2226
397," ",2226
0,(,0
317,$relatedEntities,2226
397," ",2226
338,as,2226
397," ",2226
317,$relatedEntity,2226
0,),0
397," ",2226
0,{,0
397,"
            ",2226
317,$this,2227
390,->,2227
313,doPersist,2227
0,(,0
317,$relatedEntity,2227
0,",",0
397," ",2227
317,$visited,2227
0,),0
0,;,0
397,"
          ",2227
0,},0
397,"

          ",2228
344,break,2230
0,;,0
397,"

        ",2230
341,case,2232
397," ",2232
0,(,0
317,$relatedEntities,2232
397," ",2232
292,!==,2232
397," ",2232
313,null,2232
0,),0
0,:,0
397,"
          ",2232
326,if,2233
397," ",2233
0,(,0
0,!,0
397," ",2233
317,$relatedEntities,2233
397," ",2233
298,instanceof,2233
397," ",2233
317,$assoc,2233
0,[,0
320,'targetEntity',2233
0,],0
0,),0
397," ",2233
0,{,0
397,"
            ",2233
258,throw,2234
397," ",2234
313,ORMInvalidArgumentException,2234
402,::,2234
313,invalidAssociation,2234
0,(,0
397,"
              ",2234
317,$this,2235
390,->,2235
313,em,2235
390,->,2235
313,getClassMetadata,2235
0,(,0
317,$assoc,2235
0,[,0
320,'targetEntity',2235
0,],0
0,),0
0,",",0
397,"
              ",2235
317,$assoc,2236
0,",",0
397,"
              ",2236
317,$relatedEntities,2237
397,"
            ",2237
0,),0
0,;,0
397,"
          ",2238
0,},0
397,"

          ",2239
317,$this,2241
390,->,2241
313,doPersist,2241
0,(,0
317,$relatedEntities,2241
0,",",0
397," ",2241
317,$visited,2241
0,),0
0,;,0
397,"
          ",2241
344,break,2242
0,;,0
397,"

        ",2242
342,default,2244
0,:,0
397,"
          ",2244
392,"// Do nothing",2245
397,"
      ",2245
0,},0
397,"
    ",2246
0,},0
397,"
  ",2247
0,},0
397,"

  ",2248
393,"/**
   * Cascades the delete operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2250
397,"
  ",2257
360,private,2258
397," ",2258
347,function,2258
397," ",2258
313,cascadeRemove,2258
0,(,0
317,$entity,2258
0,",",0
397," ",2258
377,array,2258
397," ",2258
288,&,2258
317,$visited,2258
0,),0
397,"
  ",2258
0,{,0
397,"
    ",2259
317,$class,2260
397," ",2260
0,=,0
397," ",2260
317,$this,2260
390,->,2260
313,em,2260
390,->,2260
313,getClassMetadata,2260
0,(,0
313,get_class,2260
0,(,0
317,$entity,2260
0,),0
0,),0
0,;,0
397,"

    ",2260
317,$associationMappings,2262
397," ",2262
0,=,0
397," ",2262
313,array_filter,2262
0,(,0
397,"
      ",2262
317,$class,2263
390,->,2263
313,associationMappings,2263
0,",",0
397,"
      ",2263
347,function,2264
397," ",2264
0,(,0
317,$assoc,2264
0,),0
397," ",2264
0,{,0
397," ",2264
350,return,2264
397," ",2264
317,$assoc,2264
0,[,0
320,'isCascadeRemove',2264
0,],0
0,;,0
397," ",2264
0,},0
397,"
    ",2264
0,),0
0,;,0
397,"

    ",2265
317,$entitiesToCascade,2267
397," ",2267
0,=,0
397," ",2267
377,array,2267
0,(,0
0,),0
0,;,0
397,"

    ",2267
334,foreach,2269
397," ",2269
0,(,0
317,$associationMappings,2269
397," ",2269
338,as,2269
397," ",2269
317,$assoc,2269
0,),0
397," ",2269
0,{,0
397,"
      ",2269
326,if,2270
397," ",2270
0,(,0
317,$entity,2270
397," ",2270
298,instanceof,2270
397," ",2270
313,Proxy,2270
397," ",2270
286,&&,2270
397," ",2270
0,!,0
317,$entity,2270
390,->,2270
313,__isInitialized__,2270
0,),0
397," ",2270
0,{,0
397,"
        ",2270
317,$entity,2271
390,->,2271
313,__load,2271
0,(,0
0,),0
0,;,0
397,"
      ",2271
0,},0
397,"

      ",2272
317,$relatedEntities,2274
397," ",2274
0,=,0
397," ",2274
317,$class,2274
390,->,2274
313,reflFields,2274
0,[,0
317,$assoc,2274
0,[,0
320,'fieldName',2274
0,],0
0,],0
390,->,2274
313,getValue,2274
0,(,0
317,$entity,2274
0,),0
0,;,0
397,"

      ",2274
339,switch,2276
397," ",2276
0,(,0
313,true,2276
0,),0
397," ",2276
0,{,0
397,"
        ",2276
341,case,2277
397," ",2277
0,(,0
317,$relatedEntities,2277
397," ",2277
298,instanceof,2277
397," ",2277
313,Collection,2277
0,),0
0,:,0
397,"
        ",2277
341,case,2278
397," ",2278
0,(,0
313,is_array,2278
0,(,0
317,$relatedEntities,2278
0,),0
0,),0
0,:,0
397,"
          ",2278
392,"// If its a PersistentCollection initialization is intended! No unwrap!",2279
397,"
          ",2279
334,foreach,2280
397," ",2280
0,(,0
317,$relatedEntities,2280
397," ",2280
338,as,2280
397," ",2280
317,$relatedEntity,2280
0,),0
397," ",2280
0,{,0
397,"
            ",2280
317,$entitiesToCascade,2281
0,[,0
0,],0
397," ",2281
0,=,0
397," ",2281
317,$relatedEntity,2281
0,;,0
397,"
          ",2281
0,},0
397,"
          ",2282
344,break,2283
0,;,0
397,"

        ",2283
341,case,2285
397," ",2285
0,(,0
317,$relatedEntities,2285
397," ",2285
292,!==,2285
397," ",2285
313,null,2285
0,),0
0,:,0
397,"
          ",2285
317,$entitiesToCascade,2286
0,[,0
0,],0
397," ",2286
0,=,0
397," ",2286
317,$relatedEntities,2286
0,;,0
397,"
          ",2286
344,break,2287
0,;,0
397,"

        ",2287
342,default,2289
0,:,0
397,"
          ",2289
392,"// Do nothing",2290
397,"
      ",2290
0,},0
397,"
    ",2291
0,},0
397,"

    ",2292
334,foreach,2294
397," ",2294
0,(,0
317,$entitiesToCascade,2294
397," ",2294
338,as,2294
397," ",2294
317,$relatedEntity,2294
0,),0
397," ",2294
0,{,0
397,"
      ",2294
317,$this,2295
390,->,2295
313,doRemove,2295
0,(,0
317,$relatedEntity,2295
0,",",0
397," ",2295
317,$visited,2295
0,),0
0,;,0
397,"
    ",2295
0,},0
397,"
  ",2296
0,},0
397,"

  ",2297
393,"/**
   * Acquire a lock on the given entity.
   *
   * @param object $entity
   * @param int    $lockMode
   * @param int    $lockVersion
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws TransactionRequiredException
   * @throws OptimisticLockException
   */",2299
397,"
  ",2311
362,public,2312
397," ",2312
347,function,2312
397," ",2312
313,lock,2312
0,(,0
317,$entity,2312
0,",",0
397," ",2312
317,$lockMode,2312
0,",",0
397," ",2312
317,$lockVersion,2312
397," ",2312
0,=,0
397," ",2312
313,null,2312
0,),0
397,"
  ",2312
0,{,0
397,"
    ",2313
326,if,2314
397," ",2314
0,(,0
317,$entity,2314
397," ",2314
291,===,2314
397," ",2314
313,null,2314
0,),0
397," ",2314
0,{,0
397,"
      ",2314
258,throw,2315
397," ",2315
324,new,2315
397," ",2315
314,"\InvalidArgumentException",2315
0,(,0
320,"""No entity passed to UnitOfWork#lock().""",2315
0,),0
0,;,0
397,"
    ",2315
0,},0
397,"

    ",2316
326,if,2318
397," ",2318
0,(,0
317,$this,2318
390,->,2318
313,getEntityState,2318
0,(,0
317,$entity,2318
0,",",0
397," ",2318
313,self,2318
402,::,2318
313,STATE_DETACHED,2318
0,),0
397," ",2318
290,!=,2318
397," ",2318
313,self,2318
402,::,2318
313,STATE_MANAGED,2318
0,),0
397," ",2318
0,{,0
397,"
      ",2318
258,throw,2319
397," ",2319
313,ORMInvalidArgumentException,2319
402,::,2319
313,entityNotManaged,2319
0,(,0
317,$entity,2319
0,),0
0,;,0
397,"
    ",2319
0,},0
397,"

    ",2320
317,$class,2322
397," ",2322
0,=,0
397," ",2322
317,$this,2322
390,->,2322
313,em,2322
390,->,2322
313,getClassMetadata,2322
0,(,0
313,get_class,2322
0,(,0
317,$entity,2322
0,),0
0,),0
0,;,0
397,"

    ",2322
339,switch,2324
397," ",2324
0,(,0
313,true,2324
0,),0
397," ",2324
0,{,0
397,"
      ",2324
341,case,2325
397," ",2325
313,LockMode,2325
402,::,2325
313,OPTIMISTIC,2325
397," ",2325
291,===,2325
397," ",2325
317,$lockMode,2325
0,:,0
397,"
        ",2325
326,if,2326
397," ",2326
0,(,0
397," ",2326
0,!,0
397," ",2326
317,$class,2326
390,->,2326
313,isVersioned,2326
0,),0
397," ",2326
0,{,0
397,"
          ",2326
258,throw,2327
397," ",2327
313,OptimisticLockException,2327
402,::,2327
313,notVersioned,2327
0,(,0
317,$class,2327
390,->,2327
313,name,2327
0,),0
0,;,0
397,"
        ",2327
0,},0
397,"

        ",2328
326,if,2330
397," ",2330
0,(,0
317,$lockVersion,2330
397," ",2330
291,===,2330
397," ",2330
313,null,2330
0,),0
397," ",2330
0,{,0
397,"
          ",2330
350,return,2331
0,;,0
397,"
        ",2331
0,},0
397,"

        ",2332
326,if,2334
397," ",2334
0,(,0
317,$entity,2334
397," ",2334
298,instanceof,2334
397," ",2334
313,Proxy,2334
397," ",2334
286,&&,2334
397," ",2334
0,!,0
317,$entity,2334
390,->,2334
313,__isInitialized__,2334
0,),0
397," ",2334
0,{,0
397,"
          ",2334
317,$entity,2335
390,->,2335
313,__load,2335
0,(,0
0,),0
0,;,0
397,"
        ",2335
0,},0
397,"

        ",2336
317,$entityVersion,2338
397," ",2338
0,=,0
397," ",2338
317,$class,2338
390,->,2338
313,reflFields,2338
0,[,0
317,$class,2338
390,->,2338
313,versionField,2338
0,],0
390,->,2338
313,getValue,2338
0,(,0
317,$entity,2338
0,),0
0,;,0
397,"

        ",2338
326,if,2340
397," ",2340
0,(,0
317,$entityVersion,2340
397," ",2340
290,!=,2340
397," ",2340
317,$lockVersion,2340
0,),0
397," ",2340
0,{,0
397,"
          ",2340
258,throw,2341
397," ",2341
313,OptimisticLockException,2341
402,::,2341
313,lockFailedVersionMismatch,2341
0,(,0
317,$entity,2341
0,",",0
397," ",2341
317,$lockVersion,2341
0,",",0
397," ",2341
317,$entityVersion,2341
0,),0
0,;,0
397,"
        ",2341
0,},0
397,"

        ",2342
344,break,2344
0,;,0
397,"

      ",2344
341,case,2346
397," ",2346
313,LockMode,2346
402,::,2346
313,NONE,2346
397," ",2346
291,===,2346
397," ",2346
317,$lockMode,2346
0,:,0
397,"
      ",2346
341,case,2347
397," ",2347
313,LockMode,2347
402,::,2347
313,PESSIMISTIC_READ,2347
397," ",2347
291,===,2347
397," ",2347
317,$lockMode,2347
0,:,0
397,"
      ",2347
341,case,2348
397," ",2348
313,LockMode,2348
402,::,2348
313,PESSIMISTIC_WRITE,2348
397," ",2348
291,===,2348
397," ",2348
317,$lockMode,2348
0,:,0
397,"
        ",2348
326,if,2349
397," ",2349
0,(,0
0,!,0
317,$this,2349
390,->,2349
313,em,2349
390,->,2349
313,getConnection,2349
0,(,0
0,),0
390,->,2349
313,isTransactionActive,2349
0,(,0
0,),0
0,),0
397," ",2349
0,{,0
397,"
          ",2349
258,throw,2350
397," ",2350
313,TransactionRequiredException,2350
402,::,2350
313,transactionRequired,2350
0,(,0
0,),0
0,;,0
397,"
        ",2350
0,},0
397,"

        ",2351
317,$oid,2353
397," ",2353
0,=,0
397," ",2353
313,spl_object_hash,2353
0,(,0
317,$entity,2353
0,),0
0,;,0
397,"

        ",2353
317,$this,2355
390,->,2355
313,getEntityPersister,2355
0,(,0
317,$class,2355
390,->,2355
313,name,2355
0,),0
390,->,2355
313,lock,2355
0,(,0
397,"
          ",2355
313,array_combine,2356
0,(,0
317,$class,2356
390,->,2356
313,getIdentifierFieldNames,2356
0,(,0
0,),0
0,",",0
397," ",2356
317,$this,2356
390,->,2356
313,entityIdentifiers,2356
0,[,0
317,$oid,2356
0,],0
0,),0
0,",",0
397,"
          ",2356
317,$lockMode,2357
397,"
        ",2357
0,),0
0,;,0
397,"
        ",2358
344,break,2359
0,;,0
397,"

      ",2359
342,default,2361
0,:,0
397,"
        ",2361
392,"// Do nothing",2362
397,"
    ",2362
0,},0
397,"
  ",2363
0,},0
397,"

  ",2364
393,"/**
   * Gets the CommitOrderCalculator used by the UnitOfWork to order commits.
   *
   * @return \Doctrine\ORM\Internal\CommitOrderCalculator
   */",2366
397,"
  ",2370
362,public,2371
397," ",2371
347,function,2371
397," ",2371
313,getCommitOrderCalculator,2371
0,(,0
0,),0
397,"
  ",2371
0,{,0
397,"
    ",2372
326,if,2373
397," ",2373
0,(,0
317,$this,2373
390,->,2373
313,commitOrderCalculator,2373
397," ",2373
291,===,2373
397," ",2373
313,null,2373
0,),0
397," ",2373
0,{,0
397,"
      ",2373
317,$this,2374
390,->,2374
313,commitOrderCalculator,2374
397," ",2374
0,=,0
397," ",2374
324,new,2374
397," ",2374
316,"Internal\CommitOrderCalculator",2374
0,;,0
397,"
    ",2374
0,},0
397,"

    ",2375
350,return,2377
397," ",2377
317,$this,2377
390,->,2377
313,commitOrderCalculator,2377
0,;,0
397,"
  ",2377
0,},0
397,"

  ",2378
393,"/**
   * Clears the UnitOfWork.
   *
   * @param string|null $entityName if given, only entities of this type will get detached.
   *
   * @return void
   */",2380
397,"
  ",2386
362,public,2387
397," ",2387
347,function,2387
397," ",2387
313,clear,2387
0,(,0
317,$entityName,2387
397," ",2387
0,=,0
397," ",2387
313,null,2387
0,),0
397,"
  ",2387
0,{,0
397,"
    ",2388
326,if,2389
397," ",2389
0,(,0
317,$entityName,2389
397," ",2389
291,===,2389
397," ",2389
313,null,2389
0,),0
397," ",2389
0,{,0
397,"
      ",2389
317,$this,2390
390,->,2390
313,identityMap,2390
397," ",2390
0,=,0
397,"
      ",2390
317,$this,2391
390,->,2391
313,entityIdentifiers,2391
397," ",2391
0,=,0
397,"
      ",2391
317,$this,2392
390,->,2392
313,originalEntityData,2392
397," ",2392
0,=,0
397,"
      ",2392
317,$this,2393
390,->,2393
313,entityChangeSets,2393
397," ",2393
0,=,0
397,"
      ",2393
317,$this,2394
390,->,2394
313,entityStates,2394
397," ",2394
0,=,0
397,"
      ",2394
317,$this,2395
390,->,2395
313,scheduledForSynchronization,2395
397," ",2395
0,=,0
397,"
      ",2395
317,$this,2396
390,->,2396
313,entityInsertions,2396
397," ",2396
0,=,0
397,"
      ",2396
317,$this,2397
390,->,2397
313,entityUpdates,2397
397," ",2397
0,=,0
397,"
      ",2397
317,$this,2398
390,->,2398
313,entityDeletions,2398
397," ",2398
0,=,0
397,"
      ",2398
317,$this,2399
390,->,2399
313,collectionDeletions,2399
397," ",2399
0,=,0
397,"
      ",2399
317,$this,2400
390,->,2400
313,collectionUpdates,2400
397," ",2400
0,=,0
397,"
      ",2400
317,$this,2401
390,->,2401
313,extraUpdates,2401
397," ",2401
0,=,0
397,"
      ",2401
317,$this,2402
390,->,2402
313,readOnlyObjects,2402
397," ",2402
0,=,0
397,"
      ",2402
317,$this,2403
390,->,2403
313,visitedCollections,2403
397," ",2403
0,=,0
397,"
      ",2403
317,$this,2404
390,->,2404
313,orphanRemovals,2404
397," ",2404
0,=,0
397," ",2404
377,array,2404
0,(,0
0,),0
0,;,0
397,"

      ",2404
326,if,2406
397," ",2406
0,(,0
317,$this,2406
390,->,2406
313,commitOrderCalculator,2406
397," ",2406
292,!==,2406
397," ",2406
313,null,2406
0,),0
397," ",2406
0,{,0
397,"
        ",2406
317,$this,2407
390,->,2407
313,commitOrderCalculator,2407
390,->,2407
313,clear,2407
0,(,0
0,),0
0,;,0
397,"
      ",2407
0,},0
397,"
    ",2408
0,},0
397," ",2409
310,else,2409
397," ",2409
0,{,0
397,"
      ",2409
317,$visited,2410
397," ",2410
0,=,0
397," ",2410
377,array,2410
0,(,0
0,),0
0,;,0
397,"

      ",2410
334,foreach,2412
397," ",2412
0,(,0
317,$this,2412
390,->,2412
313,identityMap,2412
397," ",2412
338,as,2412
397," ",2412
317,$className,2412
397," ",2412
269,=>,2412
397," ",2412
317,$entities,2412
0,),0
397," ",2412
0,{,0
397,"
        ",2412
326,if,2413
397," ",2413
0,(,0
317,$className,2413
397," ",2413
292,!==,2413
397," ",2413
317,$entityName,2413
0,),0
397," ",2413
0,{,0
397,"
          ",2413
345,continue,2414
0,;,0
397,"
        ",2414
0,},0
397,"

        ",2415
334,foreach,2417
397," ",2417
0,(,0
317,$entities,2417
397," ",2417
338,as,2417
397," ",2417
317,$entity,2417
0,),0
397," ",2417
0,{,0
397,"
          ",2417
317,$this,2418
390,->,2418
313,doDetach,2418
0,(,0
317,$entity,2418
0,",",0
397," ",2418
317,$visited,2418
0,",",0
397," ",2418
313,false,2418
0,),0
0,;,0
397,"
        ",2418
0,},0
397,"
      ",2419
0,},0
397,"
    ",2420
0,},0
397,"

    ",2421
326,if,2423
397," ",2423
0,(,0
317,$this,2423
390,->,2423
313,evm,2423
390,->,2423
313,hasListeners,2423
0,(,0
313,Events,2423
402,::,2423
313,onClear,2423
0,),0
0,),0
397," ",2423
0,{,0
397,"
      ",2423
317,$this,2424
390,->,2424
313,evm,2424
390,->,2424
313,dispatchEvent,2424
0,(,0
313,Events,2424
402,::,2424
313,onClear,2424
0,",",0
397," ",2424
324,new,2424
397," ",2424
316,"Event\OnClearEventArgs",2424
0,(,0
317,$this,2424
390,->,2424
313,em,2424
0,",",0
397," ",2424
317,$entityName,2424
0,),0
0,),0
0,;,0
397,"
    ",2424
0,},0
397,"
  ",2425
0,},0
397,"

  ",2426
393,"/**
   * INTERNAL:
   * Schedules an orphaned entity for removal. The remove() operation will be
   * invoked on that entity at the beginning of the next commit of this
   * UnitOfWork.
   *
   * @ignore
   *
   * @param object $entity
   *
   * @return void
   */",2428
397,"
  ",2439
362,public,2440
397," ",2440
347,function,2440
397," ",2440
313,scheduleOrphanRemoval,2440
0,(,0
317,$entity,2440
0,),0
397,"
  ",2440
0,{,0
397,"
    ",2441
317,$this,2442
390,->,2442
313,orphanRemovals,2442
0,[,0
313,spl_object_hash,2442
0,(,0
317,$entity,2442
0,),0
0,],0
397," ",2442
0,=,0
397," ",2442
317,$entity,2442
0,;,0
397,"
  ",2442
0,},0
397,"

  ",2443
393,"/**
   * INTERNAL:
   * Schedules a complete collection for removal when this UnitOfWork commits.
   *
   * @param PersistentCollection $coll
   *
   * @return void
   */",2445
397,"
  ",2452
362,public,2453
397," ",2453
347,function,2453
397," ",2453
313,scheduleCollectionDeletion,2453
0,(,0
313,PersistentCollection,2453
397," ",2453
317,$coll,2453
0,),0
397,"
  ",2453
0,{,0
397,"
    ",2454
317,$coid,2455
397," ",2455
0,=,0
397," ",2455
313,spl_object_hash,2455
0,(,0
317,$coll,2455
0,),0
0,;,0
397,"

    ",2455
392,"// TODO: if $coll is already scheduled for recreation ... what to do?",2457
397,"
    ",2457
392,"// Just remove $coll from the scheduled recreations?",2458
397,"
    ",2458
326,if,2459
397," ",2459
0,(,0
366,isset,2459
0,(,0
317,$this,2459
390,->,2459
313,collectionUpdates,2459
0,[,0
317,$coid,2459
0,],0
0,),0
0,),0
397," ",2459
0,{,0
397,"
      ",2459
365,unset,2460
0,(,0
317,$this,2460
390,->,2460
313,collectionUpdates,2460
0,[,0
317,$coid,2460
0,],0
0,),0
0,;,0
397,"
    ",2460
0,},0
397,"

    ",2461
317,$this,2463
390,->,2463
313,collectionDeletions,2463
0,[,0
317,$coid,2463
0,],0
397," ",2463
0,=,0
397," ",2463
317,$coll,2463
0,;,0
397,"
  ",2463
0,},0
397,"

  ",2464
393,"/**
   * @param PersistentCollection $coll
   *
   * @return bool
   */",2466
397,"
  ",2470
362,public,2471
397," ",2471
347,function,2471
397," ",2471
313,isCollectionScheduledForDeletion,2471
0,(,0
313,PersistentCollection,2471
397," ",2471
317,$coll,2471
0,),0
397,"
  ",2471
0,{,0
397,"
    ",2472
350,return,2473
397," ",2473
366,isset,2473
0,(,0
317,$this,2473
390,->,2473
313,collectionDeletions,2473
0,[,0
313,spl_object_hash,2473
0,(,0
317,$coll,2473
0,),0
0,],0
0,),0
0,;,0
397,"
  ",2473
0,},0
397,"

  ",2474
393,"/**
   * @param ClassMetadata $class
   *
   * @return \Doctrine\Common\Persistence\ObjectManagerAware|object
   */",2476
397,"
  ",2480
360,private,2481
397," ",2481
347,function,2481
397," ",2481
313,newInstance,2481
0,(,0
317,$class,2481
0,),0
397,"
  ",2481
0,{,0
397,"
    ",2482
317,$entity,2483
397," ",2483
0,=,0
397," ",2483
317,$class,2483
390,->,2483
313,newInstance,2483
0,(,0
0,),0
0,;,0
397,"

    ",2483
326,if,2485
397," ",2485
0,(,0
317,$entity,2485
397," ",2485
298,instanceof,2485
397," ",2485
314,"\Doctrine\Common\Persistence\ObjectManagerAware",2485
0,),0
397," ",2485
0,{,0
397,"
      ",2485
317,$entity,2486
390,->,2486
313,injectObjectManager,2486
0,(,0
317,$this,2486
390,->,2486
313,em,2486
0,",",0
397," ",2486
317,$class,2486
0,),0
0,;,0
397,"
    ",2486
0,},0
397,"

    ",2487
350,return,2489
397," ",2489
317,$entity,2489
0,;,0
397,"
  ",2489
0,},0
397,"

  ",2490
393,"/**
   * INTERNAL:
   * Creates an entity. Used for reconstitution of persistent entities.
   *
   * Internal note: Highly performance-sensitive method.
   *
   * @ignore
   *
   * @param string $className The name of the entity class.
   * @param array  $data      The data for the entity.
   * @param array  $hints     Any hints to account for during reconstitution/lookup of the entity.
   *
   * @return object The managed entity instance.
   *
   * @todo Rename: getOrCreateEntity
   */",2492
397,"
  ",2507
362,public,2508
397," ",2508
347,function,2508
397," ",2508
313,createEntity,2508
0,(,0
317,$className,2508
0,",",0
397," ",2508
377,array,2508
397," ",2508
317,$data,2508
0,",",0
397," ",2508
288,&,2508
317,$hints,2508
397," ",2508
0,=,0
397," ",2508
377,array,2508
0,(,0
0,),0
0,),0
397,"
  ",2508
0,{,0
397,"
    ",2509
317,$class,2510
397," ",2510
0,=,0
397," ",2510
317,$this,2510
390,->,2510
313,em,2510
390,->,2510
313,getClassMetadata,2510
0,(,0
317,$className,2510
0,),0
0,;,0
397,"
    ",2510
392,"//$isReadOnly = isset($hints[Query::HINT_READ_ONLY]);",2511
397,"

    ",2511
317,$id,2513
397," ",2513
0,=,0
397," ",2513
317,$this,2513
390,->,2513
313,identifierFlattener,2513
390,->,2513
313,flattenIdentifier,2513
0,(,0
317,$class,2513
0,",",0
397," ",2513
317,$data,2513
0,),0
0,;,0
397,"
    ",2513
317,$idHash,2514
397," ",2514
0,=,0
397," ",2514
313,implode,2514
0,(,0
320,"' '",2514
0,",",0
397," ",2514
317,$id,2514
0,),0
0,;,0
397,"

    ",2514
326,if,2516
397," ",2516
0,(,0
366,isset,2516
0,(,0
317,$this,2516
390,->,2516
313,identityMap,2516
0,[,0
317,$class,2516
390,->,2516
313,rootEntityName,2516
0,],0
0,[,0
317,$idHash,2516
0,],0
0,),0
0,),0
397," ",2516
0,{,0
397,"
      ",2516
317,$entity,2517
397," ",2517
0,=,0
397," ",2517
317,$this,2517
390,->,2517
313,identityMap,2517
0,[,0
317,$class,2517
390,->,2517
313,rootEntityName,2517
0,],0
0,[,0
317,$idHash,2517
0,],0
0,;,0
397,"
      ",2517
317,$oid,2518
397," ",2518
0,=,0
397," ",2518
313,spl_object_hash,2518
0,(,0
317,$entity,2518
0,),0
0,;,0
397,"

      ",2518
326,if,2520
397," ",2520
0,(,0
397,"
        ",2520
366,isset,2521
0,(,0
317,$hints,2521
0,[,0
313,Query,2521
402,::,2521
313,HINT_REFRESH,2521
0,],0
0,),0
397,"
        ",2521
286,&&,2522
397," ",2522
366,isset,2522
0,(,0
317,$hints,2522
0,[,0
313,Query,2522
402,::,2522
313,HINT_REFRESH_ENTITY,2522
0,],0
0,),0
397,"
        ",2522
286,&&,2523
397," ",2523
0,(,0
317,$unmanagedProxy,2523
397," ",2523
0,=,0
397," ",2523
317,$hints,2523
0,[,0
313,Query,2523
402,::,2523
313,HINT_REFRESH_ENTITY,2523
0,],0
0,),0
397," ",2523
292,!==,2523
397," ",2523
317,$entity,2523
397,"
        ",2523
286,&&,2524
397," ",2524
317,$unmanagedProxy,2524
397," ",2524
298,instanceof,2524
397," ",2524
313,Proxy,2524
397,"
        ",2524
286,&&,2525
397," ",2525
317,$this,2525
390,->,2525
313,isIdentifierEquals,2525
0,(,0
317,$unmanagedProxy,2525
0,",",0
397," ",2525
317,$entity,2525
0,),0
397,"
      ",2525
0,),0
397," ",2526
0,{,0
397,"
        ",2526
392,"// DDC-1238 - we have a managed instance, but it isn't the provided one.",2527
397,"
        ",2527
392,"// Therefore we clear its identifier. Also, we must re-fetch metadata since the",2528
397,"
        ",2528
392,"// refreshed object may be anything",2529
397,"

        ",2529
334,foreach,2531
397," ",2531
0,(,0
317,$class,2531
390,->,2531
313,identifier,2531
397," ",2531
338,as,2531
397," ",2531
317,$fieldName,2531
0,),0
397," ",2531
0,{,0
397,"
          ",2531
317,$class,2532
390,->,2532
313,reflFields,2532
0,[,0
317,$fieldName,2532
0,],0
390,->,2532
313,setValue,2532
0,(,0
317,$unmanagedProxy,2532
0,",",0
397," ",2532
313,null,2532
0,),0
0,;,0
397,"
        ",2532
0,},0
397,"

        ",2533
350,return,2535
397," ",2535
317,$unmanagedProxy,2535
0,;,0
397,"
      ",2535
0,},0
397,"

      ",2536
326,if,2538
397," ",2538
0,(,0
317,$entity,2538
397," ",2538
298,instanceof,2538
397," ",2538
313,Proxy,2538
397," ",2538
286,&&,2538
397," ",2538
0,!,0
397," ",2538
317,$entity,2538
390,->,2538
313,__isInitialized,2538
0,(,0
0,),0
0,),0
397," ",2538
0,{,0
397,"
        ",2538
317,$entity,2539
390,->,2539
313,__setInitialized,2539
0,(,0
313,true,2539
0,),0
0,;,0
397,"

        ",2539
317,$overrideLocalValues,2541
397," ",2541
0,=,0
397," ",2541
313,true,2541
0,;,0
397,"

        ",2541
326,if,2543
397," ",2543
0,(,0
317,$entity,2543
397," ",2543
298,instanceof,2543
397," ",2543
313,NotifyPropertyChanged,2543
0,),0
397," ",2543
0,{,0
397,"
          ",2543
317,$entity,2544
390,->,2544
313,addPropertyChangedListener,2544
0,(,0
317,$this,2544
0,),0
0,;,0
397,"
        ",2544
0,},0
397,"
      ",2545
0,},0
397," ",2546
310,else,2546
397," ",2546
0,{,0
397,"
        ",2546
317,$overrideLocalValues,2547
397," ",2547
0,=,0
397," ",2547
366,isset,2547
0,(,0
317,$hints,2547
0,[,0
313,Query,2547
402,::,2547
313,HINT_REFRESH,2547
0,],0
0,),0
0,;,0
397,"

        ",2547
392,"// If only a specific entity is set to refresh, check that it's the one",2549
397,"
        ",2549
326,if,2550
397," ",2550
0,(,0
366,isset,2550
0,(,0
317,$hints,2550
0,[,0
313,Query,2550
402,::,2550
313,HINT_REFRESH_ENTITY,2550
0,],0
0,),0
0,),0
397," ",2550
0,{,0
397,"
          ",2550
317,$overrideLocalValues,2551
397," ",2551
0,=,0
397," ",2551
317,$hints,2551
0,[,0
313,Query,2551
402,::,2551
313,HINT_REFRESH_ENTITY,2551
0,],0
397," ",2551
291,===,2551
397," ",2551
317,$entity,2551
0,;,0
397,"
        ",2551
0,},0
397,"
      ",2552
0,},0
397,"

      ",2553
326,if,2555
397," ",2555
0,(,0
317,$overrideLocalValues,2555
0,),0
397," ",2555
0,{,0
397,"
        ",2555
392,"// inject ObjectManager upon refresh.",2556
397,"
        ",2556
326,if,2557
397," ",2557
0,(,0
317,$entity,2557
397," ",2557
298,instanceof,2557
397," ",2557
313,ObjectManagerAware,2557
0,),0
397," ",2557
0,{,0
397,"
          ",2557
317,$entity,2558
390,->,2558
313,injectObjectManager,2558
0,(,0
317,$this,2558
390,->,2558
313,em,2558
0,",",0
397," ",2558
317,$class,2558
0,),0
0,;,0
397,"
        ",2558
0,},0
397,"

        ",2559
317,$this,2561
390,->,2561
313,originalEntityData,2561
0,[,0
317,$oid,2561
0,],0
397," ",2561
0,=,0
397," ",2561
317,$data,2561
0,;,0
397,"
      ",2561
0,},0
397,"
    ",2562
0,},0
397," ",2563
310,else,2563
397," ",2563
0,{,0
397,"
      ",2563
317,$entity,2564
397," ",2564
0,=,0
397," ",2564
317,$this,2564
390,->,2564
313,newInstance,2564
0,(,0
317,$class,2564
0,),0
0,;,0
397,"
      ",2564
317,$oid,2565
397,"    ",2565
0,=,0
397," ",2565
313,spl_object_hash,2565
0,(,0
317,$entity,2565
0,),0
0,;,0
397,"

      ",2565
317,$this,2567
390,->,2567
313,entityIdentifiers,2567
0,[,0
317,$oid,2567
0,],0
397,"  ",2567
0,=,0
397," ",2567
317,$id,2567
0,;,0
397,"
      ",2567
317,$this,2568
390,->,2568
313,entityStates,2568
0,[,0
317,$oid,2568
0,],0
397,"       ",2568
0,=,0
397," ",2568
313,self,2568
402,::,2568
313,STATE_MANAGED,2568
0,;,0
397,"
      ",2568
317,$this,2569
390,->,2569
313,originalEntityData,2569
0,[,0
317,$oid,2569
0,],0
397," ",2569
0,=,0
397," ",2569
317,$data,2569
0,;,0
397,"

      ",2569
317,$this,2571
390,->,2571
313,identityMap,2571
0,[,0
317,$class,2571
390,->,2571
313,rootEntityName,2571
0,],0
0,[,0
317,$idHash,2571
0,],0
397," ",2571
0,=,0
397," ",2571
317,$entity,2571
0,;,0
397,"

      ",2571
326,if,2573
397," ",2573
0,(,0
317,$entity,2573
397," ",2573
298,instanceof,2573
397," ",2573
313,NotifyPropertyChanged,2573
0,),0
397," ",2573
0,{,0
397,"
        ",2573
317,$entity,2574
390,->,2574
313,addPropertyChangedListener,2574
0,(,0
317,$this,2574
0,),0
0,;,0
397,"
      ",2574
0,},0
397,"

      ",2575
317,$overrideLocalValues,2577
397," ",2577
0,=,0
397," ",2577
313,true,2577
0,;,0
397,"
    ",2577
0,},0
397,"

    ",2578
326,if,2580
397," ",2580
0,(,0
397," ",2580
0,!,0
397," ",2580
317,$overrideLocalValues,2580
0,),0
397," ",2580
0,{,0
397,"
      ",2580
350,return,2581
397," ",2581
317,$entity,2581
0,;,0
397,"
    ",2581
0,},0
397,"

    ",2582
334,foreach,2584
397," ",2584
0,(,0
317,$data,2584
397," ",2584
338,as,2584
397," ",2584
317,$field,2584
397," ",2584
269,=>,2584
397," ",2584
317,$value,2584
0,),0
397," ",2584
0,{,0
397,"
      ",2584
326,if,2585
397," ",2585
0,(,0
366,isset,2585
0,(,0
317,$class,2585
390,->,2585
313,fieldMappings,2585
0,[,0
317,$field,2585
0,],0
0,),0
0,),0
397," ",2585
0,{,0
397,"
        ",2585
317,$class,2586
390,->,2586
313,reflFields,2586
0,[,0
317,$field,2586
0,],0
390,->,2586
313,setValue,2586
0,(,0
317,$entity,2586
0,",",0
397," ",2586
317,$value,2586
0,),0
0,;,0
397,"
      ",2586
0,},0
397,"
    ",2587
0,},0
397,"

    ",2588
392,"// Loading the entity right here, if its in the eager loading map get rid of it there.",2590
397,"
    ",2590
365,unset,2591
0,(,0
317,$this,2591
390,->,2591
313,eagerLoadingEntities,2591
0,[,0
317,$class,2591
390,->,2591
313,rootEntityName,2591
0,],0
0,[,0
317,$idHash,2591
0,],0
0,),0
0,;,0
397,"

    ",2591
326,if,2593
397," ",2593
0,(,0
366,isset,2593
0,(,0
317,$this,2593
390,->,2593
313,eagerLoadingEntities,2593
0,[,0
317,$class,2593
390,->,2593
313,rootEntityName,2593
0,],0
0,),0
397," ",2593
286,&&,2593
397," ",2593
0,!,0
397," ",2593
317,$this,2593
390,->,2593
313,eagerLoadingEntities,2593
0,[,0
317,$class,2593
390,->,2593
313,rootEntityName,2593
0,],0
0,),0
397," ",2593
0,{,0
397,"
      ",2593
365,unset,2594
0,(,0
317,$this,2594
390,->,2594
313,eagerLoadingEntities,2594
0,[,0
317,$class,2594
390,->,2594
313,rootEntityName,2594
0,],0
0,),0
0,;,0
397,"
    ",2594
0,},0
397,"

    ",2595
392,"// Properly initialize any unfetched associations, if partial objects are not allowed.",2597
397,"
    ",2597
326,if,2598
397," ",2598
0,(,0
366,isset,2598
0,(,0
317,$hints,2598
0,[,0
313,Query,2598
402,::,2598
313,HINT_FORCE_PARTIAL_LOAD,2598
0,],0
0,),0
0,),0
397," ",2598
0,{,0
397,"
      ",2598
350,return,2599
397," ",2599
317,$entity,2599
0,;,0
397,"
    ",2599
0,},0
397,"

    ",2600
334,foreach,2602
397," ",2602
0,(,0
317,$class,2602
390,->,2602
313,associationMappings,2602
397," ",2602
338,as,2602
397," ",2602
317,$field,2602
397," ",2602
269,=>,2602
397," ",2602
317,$assoc,2602
0,),0
397," ",2602
0,{,0
397,"
      ",2602
392,"// Check if the association is not among the fetch-joined associations already.",2603
397,"
      ",2603
326,if,2604
397," ",2604
0,(,0
366,isset,2604
0,(,0
317,$hints,2604
0,[,0
320,'fetchAlias',2604
0,],0
0,),0
397," ",2604
286,&&,2604
397," ",2604
366,isset,2604
0,(,0
317,$hints,2604
0,[,0
320,'fetched',2604
0,],0
0,[,0
317,$hints,2604
0,[,0
320,'fetchAlias',2604
0,],0
0,],0
0,[,0
317,$field,2604
0,],0
0,),0
0,),0
397," ",2604
0,{,0
397,"
        ",2604
345,continue,2605
0,;,0
397,"
      ",2605
0,},0
397,"

      ",2606
317,$targetClass,2608
397," ",2608
0,=,0
397," ",2608
317,$this,2608
390,->,2608
313,em,2608
390,->,2608
313,getClassMetadata,2608
0,(,0
317,$assoc,2608
0,[,0
320,'targetEntity',2608
0,],0
0,),0
0,;,0
397,"

      ",2608
339,switch,2610
397," ",2610
0,(,0
313,true,2610
0,),0
397," ",2610
0,{,0
397,"
        ",2610
341,case,2611
397," ",2611
0,(,0
317,$assoc,2611
0,[,0
320,'type',2611
0,],0
397," ",2611
287,&,2611
397," ",2611
313,ClassMetadata,2611
402,::,2611
313,TO_ONE,2611
0,),0
0,:,0
397,"
          ",2611
326,if,2612
397," ",2612
0,(,0
397," ",2612
0,!,0
397," ",2612
317,$assoc,2612
0,[,0
320,'isOwningSide',2612
0,],0
0,),0
397," ",2612
0,{,0
397,"

            ",2612
392,"// use the given entity association",2614
397,"
            ",2614
326,if,2615
397," ",2615
0,(,0
366,isset,2615
0,(,0
317,$data,2615
0,[,0
317,$field,2615
0,],0
0,),0
397," ",2615
286,&&,2615
397," ",2615
313,is_object,2615
0,(,0
317,$data,2615
0,[,0
317,$field,2615
0,],0
0,),0
397," ",2615
286,&&,2615
397," ",2615
366,isset,2615
0,(,0
317,$this,2615
390,->,2615
313,entityStates,2615
0,[,0
313,spl_object_hash,2615
0,(,0
317,$data,2615
0,[,0
317,$field,2615
0,],0
0,),0
0,],0
0,),0
0,),0
397," ",2615
0,{,0
397,"

              ",2615
317,$this,2617
390,->,2617
313,originalEntityData,2617
0,[,0
317,$oid,2617
0,],0
0,[,0
317,$field,2617
0,],0
397," ",2617
0,=,0
397," ",2617
317,$data,2617
0,[,0
317,$field,2617
0,],0
0,;,0
397,"

              ",2617
317,$class,2619
390,->,2619
313,reflFields,2619
0,[,0
317,$field,2619
0,],0
390,->,2619
313,setValue,2619
0,(,0
317,$entity,2619
0,",",0
397," ",2619
317,$data,2619
0,[,0
317,$field,2619
0,],0
0,),0
0,;,0
397,"
              ",2619
317,$targetClass,2620
390,->,2620
313,reflFields,2620
0,[,0
317,$assoc,2620
0,[,0
320,'mappedBy',2620
0,],0
0,],0
390,->,2620
313,setValue,2620
0,(,0
317,$data,2620
0,[,0
317,$field,2620
0,],0
0,",",0
397," ",2620
317,$entity,2620
0,),0
0,;,0
397,"

              ",2620
345,continue,2622
397," ",2622
311,2,2622
0,;,0
397,"
            ",2622
0,},0
397,"

            ",2623
392,"// Inverse side of x-to-one can never be lazy",2625
397,"
            ",2625
317,$class,2626
390,->,2626
313,reflFields,2626
0,[,0
317,$field,2626
0,],0
390,->,2626
313,setValue,2626
0,(,0
317,$entity,2626
0,",",0
397," ",2626
317,$this,2626
390,->,2626
313,getEntityPersister,2626
0,(,0
317,$assoc,2626
0,[,0
320,'targetEntity',2626
0,],0
0,),0
390,->,2626
313,loadOneToOneEntity,2626
0,(,0
317,$assoc,2626
0,",",0
397," ",2626
317,$entity,2626
0,),0
0,),0
0,;,0
397,"

            ",2626
345,continue,2628
397," ",2628
311,2,2628
0,;,0
397,"
          ",2628
0,},0
397,"

          ",2629
392,"// use the entity association",2631
397,"
          ",2631
326,if,2632
397," ",2632
0,(,0
366,isset,2632
0,(,0
317,$data,2632
0,[,0
317,$field,2632
0,],0
0,),0
397," ",2632
286,&&,2632
397," ",2632
313,is_object,2632
0,(,0
317,$data,2632
0,[,0
317,$field,2632
0,],0
0,),0
397," ",2632
286,&&,2632
397," ",2632
366,isset,2632
0,(,0
317,$this,2632
390,->,2632
313,entityStates,2632
0,[,0
313,spl_object_hash,2632
0,(,0
317,$data,2632
0,[,0
317,$field,2632
0,],0
0,),0
0,],0
0,),0
0,),0
397," ",2632
0,{,0
397,"
            ",2632
317,$class,2633
390,->,2633
313,reflFields,2633
0,[,0
317,$field,2633
0,],0
390,->,2633
313,setValue,2633
0,(,0
317,$entity,2633
0,",",0
397," ",2633
317,$data,2633
0,[,0
317,$field,2633
0,],0
0,),0
0,;,0
397,"
            ",2633
317,$this,2634
390,->,2634
313,originalEntityData,2634
0,[,0
317,$oid,2634
0,],0
0,[,0
317,$field,2634
0,],0
397," ",2634
0,=,0
397," ",2634
317,$data,2634
0,[,0
317,$field,2634
0,],0
0,;,0
397,"

            ",2634
345,continue,2636
0,;,0
397,"
          ",2636
0,},0
397,"

          ",2637
317,$associatedId,2639
397," ",2639
0,=,0
397," ",2639
377,array,2639
0,(,0
0,),0
0,;,0
397,"

          ",2639
392,"// TODO: Is this even computed right in all cases of composite keys?",2641
397,"
          ",2641
334,foreach,2642
397," ",2642
0,(,0
317,$assoc,2642
0,[,0
320,'targetToSourceKeyColumns',2642
0,],0
397," ",2642
338,as,2642
397," ",2642
317,$targetColumn,2642
397," ",2642
269,=>,2642
397," ",2642
317,$srcColumn,2642
0,),0
397," ",2642
0,{,0
397,"
            ",2642
317,$joinColumnValue,2643
397," ",2643
0,=,0
397," ",2643
366,isset,2643
0,(,0
317,$data,2643
0,[,0
317,$srcColumn,2643
0,],0
0,),0
397," ",2643
0,?,0
397," ",2643
317,$data,2643
0,[,0
317,$srcColumn,2643
0,],0
397," ",2643
0,:,0
397," ",2643
313,null,2643
0,;,0
397,"

            ",2643
326,if,2645
397," ",2645
0,(,0
317,$joinColumnValue,2645
397," ",2645
292,!==,2645
397," ",2645
313,null,2645
0,),0
397," ",2645
0,{,0
397,"
              ",2645
326,if,2646
397," ",2646
0,(,0
317,$targetClass,2646
390,->,2646
313,containsForeignIdentifier,2646
0,),0
397," ",2646
0,{,0
397,"
                ",2646
317,$associatedId,2647
0,[,0
317,$targetClass,2647
390,->,2647
313,getFieldForColumn,2647
0,(,0
317,$targetColumn,2647
0,),0
0,],0
397," ",2647
0,=,0
397," ",2647
317,$joinColumnValue,2647
0,;,0
397,"
              ",2647
0,},0
397," ",2648
310,else,2648
397," ",2648
0,{,0
397,"
                ",2648
317,$associatedId,2649
0,[,0
317,$targetClass,2649
390,->,2649
313,fieldNames,2649
0,[,0
317,$targetColumn,2649
0,],0
0,],0
397," ",2649
0,=,0
397," ",2649
317,$joinColumnValue,2649
0,;,0
397,"
              ",2649
0,},0
397,"
            ",2650
0,},0
397," ",2651
309,elseif,2651
397," ",2651
0,(,0
317,$targetClass,2651
390,->,2651
313,containsForeignIdentifier,2651
397,"
              ",2651
286,&&,2652
397," ",2652
313,in_array,2652
0,(,0
317,$targetClass,2652
390,->,2652
313,getFieldForColumn,2652
0,(,0
317,$targetColumn,2652
0,),0
0,",",0
397," ",2652
317,$targetClass,2652
390,->,2652
313,identifier,2652
0,",",0
397," ",2652
313,true,2652
0,),0
397,"
            ",2652
0,),0
397," ",2653
0,{,0
397,"
              ",2653
392,"// the missing key is part of target's entity primary key",2654
397,"
              ",2654
317,$associatedId,2655
397," ",2655
0,=,0
397," ",2655
377,array,2655
0,(,0
0,),0
0,;,0
397,"
              ",2655
344,break,2656
0,;,0
397,"
            ",2656
0,},0
397,"
          ",2657
0,},0
397,"

          ",2658
326,if,2660
397," ",2660
0,(,0
397," ",2660
0,!,0
397," ",2660
317,$associatedId,2660
0,),0
397," ",2660
0,{,0
397,"
            ",2660
392,"// Foreign key is NULL",2661
397,"
            ",2661
317,$class,2662
390,->,2662
313,reflFields,2662
0,[,0
317,$field,2662
0,],0
390,->,2662
313,setValue,2662
0,(,0
317,$entity,2662
0,",",0
397," ",2662
313,null,2662
0,),0
0,;,0
397,"
            ",2662
317,$this,2663
390,->,2663
313,originalEntityData,2663
0,[,0
317,$oid,2663
0,],0
0,[,0
317,$field,2663
0,],0
397," ",2663
0,=,0
397," ",2663
313,null,2663
0,;,0
397,"

            ",2663
345,continue,2665
0,;,0
397,"
          ",2665
0,},0
397,"

          ",2666
326,if,2668
397," ",2668
0,(,0
397," ",2668
0,!,0
397," ",2668
366,isset,2668
0,(,0
317,$hints,2668
0,[,0
320,'fetchMode',2668
0,],0
0,[,0
317,$class,2668
390,->,2668
313,name,2668
0,],0
0,[,0
317,$field,2668
0,],0
0,),0
0,),0
397," ",2668
0,{,0
397,"
            ",2668
317,$hints,2669
0,[,0
320,'fetchMode',2669
0,],0
0,[,0
317,$class,2669
390,->,2669
313,name,2669
0,],0
0,[,0
317,$field,2669
0,],0
397," ",2669
0,=,0
397," ",2669
317,$assoc,2669
0,[,0
320,'fetch',2669
0,],0
0,;,0
397,"
          ",2669
0,},0
397,"

          ",2670
392,"// Foreign key is set",2672
397,"
          ",2672
392,"// Check identity map first",2673
397,"
          ",2673
392,"// FIXME: Can break easily with composite keys if join column values are in",2674
397,"
          ",2674
392,"//        wrong order. The correct order is the one in ClassMetadata#identifier.",2675
397,"
          ",2675
317,$relatedIdHash,2676
397," ",2676
0,=,0
397," ",2676
313,implode,2676
0,(,0
320,"' '",2676
0,",",0
397," ",2676
317,$associatedId,2676
0,),0
0,;,0
397,"

          ",2676
339,switch,2678
397," ",2678
0,(,0
313,true,2678
0,),0
397," ",2678
0,{,0
397,"
            ",2678
341,case,2679
397," ",2679
0,(,0
366,isset,2679
0,(,0
317,$this,2679
390,->,2679
313,identityMap,2679
0,[,0
317,$targetClass,2679
390,->,2679
313,rootEntityName,2679
0,],0
0,[,0
317,$relatedIdHash,2679
0,],0
0,),0
0,),0
0,:,0
397,"
              ",2679
317,$newValue,2680
397," ",2680
0,=,0
397," ",2680
317,$this,2680
390,->,2680
313,identityMap,2680
0,[,0
317,$targetClass,2680
390,->,2680
313,rootEntityName,2680
0,],0
0,[,0
317,$relatedIdHash,2680
0,],0
0,;,0
397,"

              ",2680
392,"// If this is an uninitialized proxy, we are deferring eager loads,",2682
397,"
              ",2682
392,"// this association is marked as eager fetch, and its an uninitialized proxy (wtf!)",2683
397,"
              ",2683
392,"// then we can append this entity for eager loading!",2684
397,"
              ",2684
326,if,2685
397," ",2685
0,(,0
317,$hints,2685
0,[,0
320,'fetchMode',2685
0,],0
0,[,0
317,$class,2685
390,->,2685
313,name,2685
0,],0
0,[,0
317,$field,2685
0,],0
397," ",2685
289,==,2685
397," ",2685
313,ClassMetadata,2685
402,::,2685
313,FETCH_EAGER,2685
397," ",2685
286,&&,2685
397,"
                ",2685
366,isset,2686
0,(,0
317,$hints,2686
0,[,0
313,self,2686
402,::,2686
313,HINT_DEFEREAGERLOAD,2686
0,],0
0,),0
397," ",2686
286,&&,2686
397,"
                ",2686
0,!,0
317,$targetClass,2687
390,->,2687
313,isIdentifierComposite,2687
397," ",2687
286,&&,2687
397,"
                ",2687
317,$newValue,2688
397," ",2688
298,instanceof,2688
397," ",2688
313,Proxy,2688
397," ",2688
286,&&,2688
397,"
                ",2688
317,$newValue,2689
390,->,2689
313,__isInitialized__,2689
397," ",2689
291,===,2689
397," ",2689
313,false,2689
0,),0
397," ",2689
0,{,0
397,"

                ",2689
317,$this,2691
390,->,2691
313,eagerLoadingEntities,2691
0,[,0
317,$targetClass,2691
390,->,2691
313,rootEntityName,2691
0,],0
0,[,0
317,$relatedIdHash,2691
0,],0
397," ",2691
0,=,0
397," ",2691
313,current,2691
0,(,0
317,$associatedId,2691
0,),0
0,;,0
397,"
              ",2691
0,},0
397,"

              ",2692
344,break,2694
0,;,0
397,"

            ",2694
341,case,2696
397," ",2696
0,(,0
317,$targetClass,2696
390,->,2696
313,subClasses,2696
0,),0
0,:,0
397,"
              ",2696
392,"// If it might be a subtype, it can not be lazy. There isn't even",2697
397,"
              ",2697
392,"// a way to solve this with deferred eager loading, which means putting",2698
397,"
              ",2698
392,"// an entity with subclasses at a *-to-one location is really bad! (performance-wise)",2699
397,"
              ",2699
317,$newValue,2700
397," ",2700
0,=,0
397," ",2700
317,$this,2700
390,->,2700
313,getEntityPersister,2700
0,(,0
317,$assoc,2700
0,[,0
320,'targetEntity',2700
0,],0
0,),0
390,->,2700
313,loadOneToOneEntity,2700
0,(,0
317,$assoc,2700
0,",",0
397," ",2700
317,$entity,2700
0,",",0
397," ",2700
317,$associatedId,2700
0,),0
0,;,0
397,"
              ",2700
344,break,2701
0,;,0
397,"

            ",2701
342,default,2703
0,:,0
397,"
              ",2703
339,switch,2704
397," ",2704
0,(,0
313,true,2704
0,),0
397," ",2704
0,{,0
397,"
                ",2704
392,"// We are negating the condition here. Other cases will assume it is valid!",2705
397,"
                ",2705
341,case,2706
397," ",2706
0,(,0
317,$hints,2706
0,[,0
320,'fetchMode',2706
0,],0
0,[,0
317,$class,2706
390,->,2706
313,name,2706
0,],0
0,[,0
317,$field,2706
0,],0
397," ",2706
292,!==,2706
397," ",2706
313,ClassMetadata,2706
402,::,2706
313,FETCH_EAGER,2706
0,),0
0,:,0
397,"
                  ",2706
317,$newValue,2707
397," ",2707
0,=,0
397," ",2707
317,$this,2707
390,->,2707
313,em,2707
390,->,2707
313,getProxyFactory,2707
0,(,0
0,),0
390,->,2707
313,getProxy,2707
0,(,0
317,$assoc,2707
0,[,0
320,'targetEntity',2707
0,],0
0,",",0
397," ",2707
317,$associatedId,2707
0,),0
0,;,0
397,"
                  ",2707
344,break,2708
0,;,0
397,"

                ",2708
392,"// Deferred eager load only works for single identifier classes",2710
397,"
                ",2710
341,case,2711
397," ",2711
0,(,0
366,isset,2711
0,(,0
317,$hints,2711
0,[,0
313,self,2711
402,::,2711
313,HINT_DEFEREAGERLOAD,2711
0,],0
0,),0
397," ",2711
286,&&,2711
397," ",2711
0,!,0
397," ",2711
317,$targetClass,2711
390,->,2711
313,isIdentifierComposite,2711
0,),0
0,:,0
397,"
                  ",2711
392,"// TODO: Is there a faster approach?",2712
397,"
                  ",2712
317,$this,2713
390,->,2713
313,eagerLoadingEntities,2713
0,[,0
317,$targetClass,2713
390,->,2713
313,rootEntityName,2713
0,],0
0,[,0
317,$relatedIdHash,2713
0,],0
397," ",2713
0,=,0
397," ",2713
313,current,2713
0,(,0
317,$associatedId,2713
0,),0
0,;,0
397,"

                  ",2713
317,$newValue,2715
397," ",2715
0,=,0
397," ",2715
317,$this,2715
390,->,2715
313,em,2715
390,->,2715
313,getProxyFactory,2715
0,(,0
0,),0
390,->,2715
313,getProxy,2715
0,(,0
317,$assoc,2715
0,[,0
320,'targetEntity',2715
0,],0
0,",",0
397," ",2715
317,$associatedId,2715
0,),0
0,;,0
397,"
                  ",2715
344,break,2716
0,;,0
397,"

                ",2716
342,default,2718
0,:,0
397,"
                  ",2718
392,"// TODO: This is very imperformant, ignore it?",2719
397,"
                  ",2719
317,$newValue,2720
397," ",2720
0,=,0
397," ",2720
317,$this,2720
390,->,2720
313,em,2720
390,->,2720
313,find,2720
0,(,0
317,$assoc,2720
0,[,0
320,'targetEntity',2720
0,],0
0,",",0
397," ",2720
317,$associatedId,2720
0,),0
0,;,0
397,"
                  ",2720
344,break,2721
0,;,0
397,"
              ",2721
0,},0
397,"

              ",2722
392,"// PERF: Inlined & optimized code from UnitOfWork#registerManaged()",2724
397,"
              ",2724
317,$newValueOid,2725
397," ",2725
0,=,0
397," ",2725
313,spl_object_hash,2725
0,(,0
317,$newValue,2725
0,),0
0,;,0
397,"
              ",2725
317,$this,2726
390,->,2726
313,entityIdentifiers,2726
0,[,0
317,$newValueOid,2726
0,],0
397," ",2726
0,=,0
397," ",2726
317,$associatedId,2726
0,;,0
397,"
              ",2726
317,$this,2727
390,->,2727
313,identityMap,2727
0,[,0
317,$targetClass,2727
390,->,2727
313,rootEntityName,2727
0,],0
0,[,0
317,$relatedIdHash,2727
0,],0
397," ",2727
0,=,0
397," ",2727
317,$newValue,2727
0,;,0
397,"

              ",2727
326,if,2729
397," ",2729
0,(,0
397,"
                ",2729
317,$newValue,2730
397," ",2730
298,instanceof,2730
397," ",2730
313,NotifyPropertyChanged,2730
397," ",2730
286,&&,2730
397,"
                ",2730
0,(,0
397," ",2731
0,!,0
397," ",2731
317,$newValue,2731
397," ",2731
298,instanceof,2731
397," ",2731
313,Proxy,2731
397," ",2731
285,||,2731
397," ",2731
317,$newValue,2731
390,->,2731
313,__isInitialized,2731
0,(,0
0,),0
0,),0
397,"
              ",2731
0,),0
397," ",2732
0,{,0
397,"
                ",2732
317,$newValue,2733
390,->,2733
313,addPropertyChangedListener,2733
0,(,0
317,$this,2733
0,),0
0,;,0
397,"
              ",2733
0,},0
397,"
              ",2734
317,$this,2735
390,->,2735
313,entityStates,2735
0,[,0
317,$newValueOid,2735
0,],0
397," ",2735
0,=,0
397," ",2735
313,self,2735
402,::,2735
313,STATE_MANAGED,2735
0,;,0
397,"
              ",2735
392,"// make sure that when an proxy is then finally loaded, $this->originalEntityData is set also!",2736
397,"
              ",2736
344,break,2737
0,;,0
397,"
          ",2737
0,},0
397,"

          ",2738
317,$this,2740
390,->,2740
313,originalEntityData,2740
0,[,0
317,$oid,2740
0,],0
0,[,0
317,$field,2740
0,],0
397," ",2740
0,=,0
397," ",2740
317,$newValue,2740
0,;,0
397,"
          ",2740
317,$class,2741
390,->,2741
313,reflFields,2741
0,[,0
317,$field,2741
0,],0
390,->,2741
313,setValue,2741
0,(,0
317,$entity,2741
0,",",0
397," ",2741
317,$newValue,2741
0,),0
0,;,0
397,"

          ",2741
326,if,2743
397," ",2743
0,(,0
317,$assoc,2743
0,[,0
320,'inversedBy',2743
0,],0
397," ",2743
286,&&,2743
397," ",2743
317,$assoc,2743
0,[,0
320,'type',2743
0,],0
397," ",2743
287,&,2743
397," ",2743
313,ClassMetadata,2743
402,::,2743
313,ONE_TO_ONE,2743
0,),0
397," ",2743
0,{,0
397,"
            ",2743
317,$inverseAssoc,2744
397," ",2744
0,=,0
397," ",2744
317,$targetClass,2744
390,->,2744
313,associationMappings,2744
0,[,0
317,$assoc,2744
0,[,0
320,'inversedBy',2744
0,],0
0,],0
0,;,0
397,"
            ",2744
317,$targetClass,2745
390,->,2745
313,reflFields,2745
0,[,0
317,$inverseAssoc,2745
0,[,0
320,'fieldName',2745
0,],0
0,],0
390,->,2745
313,setValue,2745
0,(,0
317,$newValue,2745
0,",",0
397," ",2745
317,$entity,2745
0,),0
0,;,0
397,"
          ",2745
0,},0
397,"

          ",2746
344,break,2748
0,;,0
397,"

        ",2748
342,default,2750
0,:,0
397,"
          ",2750
392,"// Ignore if its a cached collection",2751
397,"
          ",2751
326,if,2752
397," ",2752
0,(,0
366,isset,2752
0,(,0
317,$hints,2752
0,[,0
313,Query,2752
402,::,2752
313,HINT_CACHE_ENABLED,2752
0,],0
0,),0
397," ",2752
286,&&,2752
397," ",2752
317,$class,2752
390,->,2752
313,getFieldValue,2752
0,(,0
317,$entity,2752
0,",",0
397," ",2752
317,$field,2752
0,),0
397," ",2752
298,instanceof,2752
397," ",2752
313,PersistentCollection,2752
0,),0
397," ",2752
0,{,0
397,"
            ",2752
344,break,2753
0,;,0
397,"
          ",2753
0,},0
397,"

          ",2754
392,"// use the given collection",2756
397,"
          ",2756
326,if,2757
397," ",2757
0,(,0
366,isset,2757
0,(,0
317,$data,2757
0,[,0
317,$field,2757
0,],0
0,),0
397," ",2757
286,&&,2757
397," ",2757
317,$data,2757
0,[,0
317,$field,2757
0,],0
397," ",2757
298,instanceof,2757
397," ",2757
313,PersistentCollection,2757
0,),0
397," ",2757
0,{,0
397,"

            ",2757
317,$data,2759
0,[,0
317,$field,2759
0,],0
390,->,2759
313,setOwner,2759
0,(,0
317,$entity,2759
0,",",0
397," ",2759
317,$assoc,2759
0,),0
0,;,0
397,"

            ",2759
317,$class,2761
390,->,2761
313,reflFields,2761
0,[,0
317,$field,2761
0,],0
390,->,2761
313,setValue,2761
0,(,0
317,$entity,2761
0,",",0
397," ",2761
317,$data,2761
0,[,0
317,$field,2761
0,],0
0,),0
0,;,0
397,"
            ",2761
317,$this,2762
390,->,2762
313,originalEntityData,2762
0,[,0
317,$oid,2762
0,],0
0,[,0
317,$field,2762
0,],0
397," ",2762
0,=,0
397," ",2762
317,$data,2762
0,[,0
317,$field,2762
0,],0
0,;,0
397,"

            ",2762
344,break,2764
0,;,0
397,"
          ",2764
0,},0
397,"

          ",2765
392,"// Inject collection",2767
397,"
          ",2767
317,$pColl,2768
397," ",2768
0,=,0
397," ",2768
324,new,2768
397," ",2768
313,PersistentCollection,2768
0,(,0
317,$this,2768
390,->,2768
313,em,2768
0,",",0
397," ",2768
317,$targetClass,2768
0,",",0
397," ",2768
324,new,2768
397," ",2768
313,ArrayCollection,2768
0,),0
0,;,0
397,"
          ",2768
317,$pColl,2769
390,->,2769
313,setOwner,2769
0,(,0
317,$entity,2769
0,",",0
397," ",2769
317,$assoc,2769
0,),0
0,;,0
397,"
          ",2769
317,$pColl,2770
390,->,2770
313,setInitialized,2770
0,(,0
313,false,2770
0,),0
0,;,0
397,"

          ",2770
317,$reflField,2772
397," ",2772
0,=,0
397," ",2772
317,$class,2772
390,->,2772
313,reflFields,2772
0,[,0
317,$field,2772
0,],0
0,;,0
397,"
          ",2772
317,$reflField,2773
390,->,2773
313,setValue,2773
0,(,0
317,$entity,2773
0,",",0
397," ",2773
317,$pColl,2773
0,),0
0,;,0
397,"

          ",2773
326,if,2775
397," ",2775
0,(,0
317,$assoc,2775
0,[,0
320,'fetch',2775
0,],0
397," ",2775
289,==,2775
397," ",2775
313,ClassMetadata,2775
402,::,2775
313,FETCH_EAGER,2775
0,),0
397," ",2775
0,{,0
397,"
            ",2775
317,$this,2776
390,->,2776
313,loadCollection,2776
0,(,0
317,$pColl,2776
0,),0
0,;,0
397,"
            ",2776
317,$pColl,2777
390,->,2777
313,takeSnapshot,2777
0,(,0
0,),0
0,;,0
397,"
          ",2777
0,},0
397,"

          ",2778
317,$this,2780
390,->,2780
313,originalEntityData,2780
0,[,0
317,$oid,2780
0,],0
0,[,0
317,$field,2780
0,],0
397," ",2780
0,=,0
397," ",2780
317,$pColl,2780
0,;,0
397,"
          ",2780
344,break,2781
0,;,0
397,"
      ",2781
0,},0
397,"
    ",2782
0,},0
397,"

    ",2783
326,if,2785
397," ",2785
0,(,0
317,$overrideLocalValues,2785
0,),0
397," ",2785
0,{,0
397,"
      ",2785
392,"// defer invoking of postLoad event to hydration complete step",2786
397,"
      ",2786
317,$this,2787
390,->,2787
313,hydrationCompleteHandler,2787
390,->,2787
313,deferPostLoadInvoking,2787
0,(,0
317,$class,2787
0,",",0
397," ",2787
317,$entity,2787
0,),0
0,;,0
397,"
    ",2787
0,},0
397,"

    ",2788
350,return,2790
397," ",2790
317,$entity,2790
0,;,0
397,"
  ",2790
0,},0
397,"

  ",2791
393,"/**
   * @return void
   */",2793
397,"
  ",2795
362,public,2796
397," ",2796
347,function,2796
397," ",2796
313,triggerEagerLoads,2796
0,(,0
0,),0
397,"
  ",2796
0,{,0
397,"
    ",2797
326,if,2798
397," ",2798
0,(,0
397," ",2798
0,!,0
397," ",2798
317,$this,2798
390,->,2798
313,eagerLoadingEntities,2798
0,),0
397," ",2798
0,{,0
397,"
      ",2798
350,return,2799
0,;,0
397,"
    ",2799
0,},0
397,"

    ",2800
392,"// avoid infinite recursion",2802
397,"
    ",2802
317,$eagerLoadingEntities,2803
397,"       ",2803
0,=,0
397," ",2803
317,$this,2803
390,->,2803
313,eagerLoadingEntities,2803
0,;,0
397,"
    ",2803
317,$this,2804
390,->,2804
313,eagerLoadingEntities,2804
397," ",2804
0,=,0
397," ",2804
377,array,2804
0,(,0
0,),0
0,;,0
397,"

    ",2804
334,foreach,2806
397," ",2806
0,(,0
317,$eagerLoadingEntities,2806
397," ",2806
338,as,2806
397," ",2806
317,$entityName,2806
397," ",2806
269,=>,2806
397," ",2806
317,$ids,2806
0,),0
397," ",2806
0,{,0
397,"
      ",2806
326,if,2807
397," ",2807
0,(,0
397," ",2807
0,!,0
397," ",2807
317,$ids,2807
0,),0
397," ",2807
0,{,0
397,"
        ",2807
345,continue,2808
0,;,0
397,"
      ",2808
0,},0
397,"

      ",2809
317,$class,2811
397," ",2811
0,=,0
397," ",2811
317,$this,2811
390,->,2811
313,em,2811
390,->,2811
313,getClassMetadata,2811
0,(,0
317,$entityName,2811
0,),0
0,;,0
397,"

      ",2811
317,$this,2813
390,->,2813
313,getEntityPersister,2813
0,(,0
317,$entityName,2813
0,),0
390,->,2813
313,loadAll,2813
0,(,0
397,"
        ",2813
313,array_combine,2814
0,(,0
317,$class,2814
390,->,2814
313,identifier,2814
0,",",0
397," ",2814
377,array,2814
0,(,0
313,array_values,2814
0,(,0
317,$ids,2814
0,),0
0,),0
0,),0
397,"
      ",2814
0,),0
0,;,0
397,"
    ",2815
0,},0
397,"
  ",2816
0,},0
397,"

  ",2817
393,"/**
   * Initializes (loads) an uninitialized persistent collection of an entity.
   *
   * @param \Doctrine\ORM\PersistentCollection $collection The collection to initialize.
   *
   * @return void
   *
   * @todo Maybe later move to EntityManager#initialize($proxyOrCollection). See DDC-733.
   */",2819
397,"
  ",2827
362,public,2828
397," ",2828
347,function,2828
397," ",2828
313,loadCollection,2828
0,(,0
313,PersistentCollection,2828
397," ",2828
317,$collection,2828
0,),0
397,"
  ",2828
0,{,0
397,"
    ",2829
317,$assoc,2830
397,"     ",2830
0,=,0
397," ",2830
317,$collection,2830
390,->,2830
313,getMapping,2830
0,(,0
0,),0
0,;,0
397,"
    ",2830
317,$persister,2831
397," ",2831
0,=,0
397," ",2831
317,$this,2831
390,->,2831
313,getEntityPersister,2831
0,(,0
317,$assoc,2831
0,[,0
320,'targetEntity',2831
0,],0
0,),0
0,;,0
397,"

    ",2831
339,switch,2833
397," ",2833
0,(,0
317,$assoc,2833
0,[,0
320,'type',2833
0,],0
0,),0
397," ",2833
0,{,0
397,"
      ",2833
341,case,2834
397," ",2834
313,ClassMetadata,2834
402,::,2834
313,ONE_TO_MANY,2834
0,:,0
397,"
        ",2834
317,$persister,2835
390,->,2835
313,loadOneToManyCollection,2835
0,(,0
317,$assoc,2835
0,",",0
397," ",2835
317,$collection,2835
390,->,2835
313,getOwner,2835
0,(,0
0,),0
0,",",0
397," ",2835
317,$collection,2835
0,),0
0,;,0
397,"
        ",2835
344,break,2836
0,;,0
397,"

      ",2836
341,case,2838
397," ",2838
313,ClassMetadata,2838
402,::,2838
313,MANY_TO_MANY,2838
0,:,0
397,"
        ",2838
317,$persister,2839
390,->,2839
313,loadManyToManyCollection,2839
0,(,0
317,$assoc,2839
0,",",0
397," ",2839
317,$collection,2839
390,->,2839
313,getOwner,2839
0,(,0
0,),0
0,",",0
397," ",2839
317,$collection,2839
0,),0
0,;,0
397,"
        ",2839
344,break,2840
0,;,0
397,"
    ",2840
0,},0
397,"

    ",2841
317,$collection,2843
390,->,2843
313,setInitialized,2843
0,(,0
313,true,2843
0,),0
0,;,0
397,"
  ",2843
0,},0
397,"

  ",2844
393,"/**
   * Gets the identity map of the UnitOfWork.
   *
   * @return array
   */",2846
397,"
  ",2850
362,public,2851
397," ",2851
347,function,2851
397," ",2851
313,getIdentityMap,2851
0,(,0
0,),0
397,"
  ",2851
0,{,0
397,"
    ",2852
350,return,2853
397," ",2853
317,$this,2853
390,->,2853
313,identityMap,2853
0,;,0
397,"
  ",2853
0,},0
397,"

  ",2854
393,"/**
   * Gets the original data of an entity. The original data is the data that was
   * present at the time the entity was reconstituted from the database.
   *
   * @param object $entity
   *
   * @return array
   */",2856
397,"
  ",2863
362,public,2864
397," ",2864
347,function,2864
397," ",2864
313,getOriginalEntityData,2864
0,(,0
317,$entity,2864
0,),0
397,"
  ",2864
0,{,0
397,"
    ",2865
317,$oid,2866
397," ",2866
0,=,0
397," ",2866
313,spl_object_hash,2866
0,(,0
317,$entity,2866
0,),0
0,;,0
397,"

    ",2866
326,if,2868
397," ",2868
0,(,0
366,isset,2868
0,(,0
317,$this,2868
390,->,2868
313,originalEntityData,2868
0,[,0
317,$oid,2868
0,],0
0,),0
0,),0
397," ",2868
0,{,0
397,"
      ",2868
350,return,2869
397," ",2869
317,$this,2869
390,->,2869
313,originalEntityData,2869
0,[,0
317,$oid,2869
0,],0
0,;,0
397,"
    ",2869
0,},0
397,"

    ",2870
350,return,2872
397," ",2872
377,array,2872
0,(,0
0,),0
0,;,0
397,"
  ",2872
0,},0
397,"

  ",2873
393,"/**
   * @ignore
   *
   * @param object $entity
   * @param array  $data
   *
   * @return void
   */",2875
397,"
  ",2882
362,public,2883
397," ",2883
347,function,2883
397," ",2883
313,setOriginalEntityData,2883
0,(,0
317,$entity,2883
0,",",0
397," ",2883
377,array,2883
397," ",2883
317,$data,2883
0,),0
397,"
  ",2883
0,{,0
397,"
    ",2884
317,$this,2885
390,->,2885
313,originalEntityData,2885
0,[,0
313,spl_object_hash,2885
0,(,0
317,$entity,2885
0,),0
0,],0
397," ",2885
0,=,0
397," ",2885
317,$data,2885
0,;,0
397,"
  ",2885
0,},0
397,"

  ",2886
393,"/**
   * INTERNAL:
   * Sets a property value of the original data array of an entity.
   *
   * @ignore
   *
   * @param string $oid
   * @param string $property
   * @param mixed  $value
   *
   * @return void
   */",2888
397,"
  ",2899
362,public,2900
397," ",2900
347,function,2900
397," ",2900
313,setOriginalEntityProperty,2900
0,(,0
317,$oid,2900
0,",",0
397," ",2900
317,$property,2900
0,",",0
397," ",2900
317,$value,2900
0,),0
397,"
  ",2900
0,{,0
397,"
    ",2901
317,$this,2902
390,->,2902
313,originalEntityData,2902
0,[,0
317,$oid,2902
0,],0
0,[,0
317,$property,2902
0,],0
397," ",2902
0,=,0
397," ",2902
317,$value,2902
0,;,0
397,"
  ",2902
0,},0
397,"

  ",2903
393,"/**
   * Gets the identifier of an entity.
   * The returned value is always an array of identifier values. If the entity
   * has a composite identifier then the identifier values are in the same
   * order as the identifier field names as returned by ClassMetadata#getIdentifierFieldNames().
   *
   * @param object $entity
   *
   * @return array The identifier values.
   */",2905
397,"
  ",2914
362,public,2915
397," ",2915
347,function,2915
397," ",2915
313,getEntityIdentifier,2915
0,(,0
317,$entity,2915
0,),0
397,"
  ",2915
0,{,0
397,"
    ",2916
350,return,2917
397," ",2917
317,$this,2917
390,->,2917
313,entityIdentifiers,2917
0,[,0
313,spl_object_hash,2917
0,(,0
317,$entity,2917
0,),0
0,],0
0,;,0
397,"
  ",2917
0,},0
397,"

  ",2918
393,"/**
   * Processes an entity instance to extract their identifier values.
   *
   * @param object $entity The entity instance.
   *
   * @return mixed A scalar value.
   *
   * @throws \Doctrine\ORM\ORMInvalidArgumentException
   */",2920
397,"
  ",2928
362,public,2929
397," ",2929
347,function,2929
397," ",2929
313,getSingleIdentifierValue,2929
0,(,0
317,$entity,2929
0,),0
397,"
  ",2929
0,{,0
397,"
    ",2930
317,$class,2931
397," ",2931
0,=,0
397," ",2931
317,$this,2931
390,->,2931
313,em,2931
390,->,2931
313,getClassMetadata,2931
0,(,0
313,get_class,2931
0,(,0
317,$entity,2931
0,),0
0,),0
0,;,0
397,"

    ",2931
326,if,2933
397," ",2933
0,(,0
317,$class,2933
390,->,2933
313,isIdentifierComposite,2933
0,),0
397," ",2933
0,{,0
397,"
      ",2933
258,throw,2934
397," ",2934
313,ORMInvalidArgumentException,2934
402,::,2934
313,invalidCompositeIdentifier,2934
0,(,0
0,),0
0,;,0
397,"
    ",2934
0,},0
397,"

    ",2935
317,$values,2937
397," ",2937
0,=,0
397," ",2937
317,$this,2937
390,->,2937
313,isInIdentityMap,2937
0,(,0
317,$entity,2937
0,),0
397,"
      ",2937
0,?,0
397," ",2938
317,$this,2938
390,->,2938
313,getEntityIdentifier,2938
0,(,0
317,$entity,2938
0,),0
397,"
      ",2938
0,:,0
397," ",2939
317,$class,2939
390,->,2939
313,getIdentifierValues,2939
0,(,0
317,$entity,2939
0,),0
0,;,0
397,"

    ",2939
350,return,2941
397," ",2941
366,isset,2941
0,(,0
317,$values,2941
0,[,0
317,$class,2941
390,->,2941
313,identifier,2941
0,[,0
311,0,2941
0,],0
0,],0
0,),0
397," ",2941
0,?,0
397," ",2941
317,$values,2941
0,[,0
317,$class,2941
390,->,2941
313,identifier,2941
0,[,0
311,0,2941
0,],0
0,],0
397," ",2941
0,:,0
397," ",2941
313,null,2941
0,;,0
397,"
  ",2941
0,},0
397,"

  ",2942
393,"/**
   * Tries to find an entity with the given identifier in the identity map of
   * this UnitOfWork.
   *
   * @param mixed  $id            The entity identifier to look for.
   * @param string $rootClassName The name of the root class of the mapped entity hierarchy.
   *
   * @return object|bool Returns the entity with the specified identifier if it exists in
   *                     this UnitOfWork, FALSE otherwise.
   */",2944
397,"
  ",2953
362,public,2954
397," ",2954
347,function,2954
397," ",2954
313,tryGetById,2954
0,(,0
317,$id,2954
0,",",0
397," ",2954
317,$rootClassName,2954
0,),0
397,"
  ",2954
0,{,0
397,"
    ",2955
317,$idHash,2956
397," ",2956
0,=,0
397," ",2956
313,implode,2956
0,(,0
320,"' '",2956
0,",",0
397," ",2956
302,(array),2956
397," ",2956
317,$id,2956
0,),0
0,;,0
397,"

    ",2956
326,if,2958
397," ",2958
0,(,0
366,isset,2958
0,(,0
317,$this,2958
390,->,2958
313,identityMap,2958
0,[,0
317,$rootClassName,2958
0,],0
0,[,0
317,$idHash,2958
0,],0
0,),0
0,),0
397," ",2958
0,{,0
397,"
      ",2958
350,return,2959
397," ",2959
317,$this,2959
390,->,2959
313,identityMap,2959
0,[,0
317,$rootClassName,2959
0,],0
0,[,0
317,$idHash,2959
0,],0
0,;,0
397,"
    ",2959
0,},0
397,"

    ",2960
350,return,2962
397," ",2962
313,false,2962
0,;,0
397,"
  ",2962
0,},0
397,"

  ",2963
393,"/**
   * Schedules an entity for dirty-checking at commit-time.
   *
   * @param object $entity The entity to schedule for dirty-checking.
   *
   * @return void
   *
   * @todo Rename: scheduleForSynchronization
   */",2965
397,"
  ",2973
362,public,2974
397," ",2974
347,function,2974
397," ",2974
313,scheduleForDirtyCheck,2974
0,(,0
317,$entity,2974
0,),0
397,"
  ",2974
0,{,0
397,"
    ",2975
317,$rootClassName,2976
397," ",2976
0,=,0
397," ",2976
317,$this,2976
390,->,2976
313,em,2976
390,->,2976
313,getClassMetadata,2976
0,(,0
313,get_class,2976
0,(,0
317,$entity,2976
0,),0
0,),0
390,->,2976
313,rootEntityName,2976
0,;,0
397,"

    ",2976
317,$this,2978
390,->,2978
313,scheduledForSynchronization,2978
0,[,0
317,$rootClassName,2978
0,],0
0,[,0
313,spl_object_hash,2978
0,(,0
317,$entity,2978
0,),0
0,],0
397," ",2978
0,=,0
397," ",2978
317,$entity,2978
0,;,0
397,"
  ",2978
0,},0
397,"

  ",2979
393,"/**
   * Checks whether the UnitOfWork has any pending insertions.
   *
   * @return boolean TRUE if this UnitOfWork has pending insertions, FALSE otherwise.
   */",2981
397,"
  ",2985
362,public,2986
397," ",2986
347,function,2986
397," ",2986
313,hasPendingInsertions,2986
0,(,0
0,),0
397,"
  ",2986
0,{,0
397,"
    ",2987
350,return,2988
397," ",2988
0,!,0
397," ",2988
367,empty,2988
0,(,0
317,$this,2988
390,->,2988
313,entityInsertions,2988
0,),0
0,;,0
397,"
  ",2988
0,},0
397,"

  ",2989
393,"/**
   * Calculates the size of the UnitOfWork. The size of the UnitOfWork is the
   * number of entities in the identity map.
   *
   * @return integer
   */",2991
397,"
  ",2996
362,public,2997
397," ",2997
347,function,2997
397," ",2997
313,size,2997
0,(,0
0,),0
397,"
  ",2997
0,{,0
397,"
    ",2998
317,$countArray,2999
397," ",2999
0,=,0
397," ",2999
313,array_map,2999
0,(,0
347,function,2999
397," ",2999
0,(,0
317,$item,2999
0,),0
397," ",2999
0,{,0
397," ",2999
350,return,2999
397," ",2999
313,count,2999
0,(,0
317,$item,2999
0,),0
0,;,0
397," ",2999
0,},0
0,",",0
397," ",2999
317,$this,2999
390,->,2999
313,identityMap,2999
0,),0
0,;,0
397,"

    ",2999
350,return,3001
397," ",3001
313,array_sum,3001
0,(,0
317,$countArray,3001
0,),0
0,;,0
397,"
  ",3001
0,},0
397,"

  ",3002
393,"/**
   * Gets the EntityPersister for an Entity.
   *
   * @param string $entityName The name of the Entity.
   *
   * @return \Doctrine\ORM\Persisters\Entity\EntityPersister
   */",3004
397,"
  ",3010
362,public,3011
397," ",3011
347,function,3011
397," ",3011
313,getEntityPersister,3011
0,(,0
317,$entityName,3011
0,),0
397,"
  ",3011
0,{,0
397,"
    ",3012
326,if,3013
397," ",3013
0,(,0
366,isset,3013
0,(,0
317,$this,3013
390,->,3013
313,persisters,3013
0,[,0
317,$entityName,3013
0,],0
0,),0
0,),0
397," ",3013
0,{,0
397,"
      ",3013
350,return,3014
397," ",3014
317,$this,3014
390,->,3014
313,persisters,3014
0,[,0
317,$entityName,3014
0,],0
0,;,0
397,"
    ",3014
0,},0
397,"

    ",3015
317,$class,3017
397," ",3017
0,=,0
397," ",3017
317,$this,3017
390,->,3017
313,em,3017
390,->,3017
313,getClassMetadata,3017
0,(,0
317,$entityName,3017
0,),0
0,;,0
397,"

    ",3017
339,switch,3019
397," ",3019
0,(,0
313,true,3019
0,),0
397," ",3019
0,{,0
397,"
      ",3019
341,case,3020
397," ",3020
0,(,0
317,$class,3020
390,->,3020
313,isInheritanceTypeNone,3020
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3020
317,$persister,3021
397," ",3021
0,=,0
397," ",3021
324,new,3021
397," ",3021
313,BasicEntityPersister,3021
0,(,0
317,$this,3021
390,->,3021
313,em,3021
0,",",0
397," ",3021
317,$class,3021
0,),0
0,;,0
397,"
        ",3021
344,break,3022
0,;,0
397,"

      ",3022
341,case,3024
397," ",3024
0,(,0
317,$class,3024
390,->,3024
313,isInheritanceTypeSingleTable,3024
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3024
317,$persister,3025
397," ",3025
0,=,0
397," ",3025
324,new,3025
397," ",3025
313,SingleTablePersister,3025
0,(,0
317,$this,3025
390,->,3025
313,em,3025
0,",",0
397," ",3025
317,$class,3025
0,),0
0,;,0
397,"
        ",3025
344,break,3026
0,;,0
397,"

      ",3026
341,case,3028
397," ",3028
0,(,0
317,$class,3028
390,->,3028
313,isInheritanceTypeJoined,3028
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3028
317,$persister,3029
397," ",3029
0,=,0
397," ",3029
324,new,3029
397," ",3029
313,JoinedSubclassPersister,3029
0,(,0
317,$this,3029
390,->,3029
313,em,3029
0,",",0
397," ",3029
317,$class,3029
0,),0
0,;,0
397,"
        ",3029
344,break,3030
0,;,0
397,"

      ",3030
342,default,3032
0,:,0
397,"
        ",3032
258,throw,3033
397," ",3033
324,new,3033
397," ",3033
314,"\RuntimeException",3033
0,(,0
320,"'No persister found for entity.'",3033
0,),0
0,;,0
397,"
    ",3033
0,},0
397,"

    ",3034
326,if,3036
397," ",3036
0,(,0
317,$this,3036
390,->,3036
313,hasCache,3036
397," ",3036
286,&&,3036
397," ",3036
317,$class,3036
390,->,3036
313,cache,3036
397," ",3036
292,!==,3036
397," ",3036
313,null,3036
0,),0
397," ",3036
0,{,0
397,"
      ",3036
317,$persister,3037
397," ",3037
0,=,0
397," ",3037
317,$this,3037
390,->,3037
313,em,3037
390,->,3037
313,getConfiguration,3037
0,(,0
0,),0
397,"
        ",3037
390,->,3038
313,getSecondLevelCacheConfiguration,3038
0,(,0
0,),0
397,"
        ",3038
390,->,3039
313,getCacheFactory,3039
0,(,0
0,),0
397,"
        ",3039
390,->,3040
313,buildCachedEntityPersister,3040
0,(,0
317,$this,3040
390,->,3040
313,em,3040
0,",",0
397," ",3040
317,$persister,3040
0,",",0
397," ",3040
317,$class,3040
0,),0
0,;,0
397,"
    ",3040
0,},0
397,"

    ",3041
317,$this,3043
390,->,3043
313,persisters,3043
0,[,0
317,$entityName,3043
0,],0
397," ",3043
0,=,0
397," ",3043
317,$persister,3043
0,;,0
397,"

    ",3043
350,return,3045
397," ",3045
317,$this,3045
390,->,3045
313,persisters,3045
0,[,0
317,$entityName,3045
0,],0
0,;,0
397,"
  ",3045
0,},0
397,"

  ",3046
393,"/**
   * Gets a collection persister for a collection-valued association.
   *
   * @param array $association
   *
   * @return \Doctrine\ORM\Persisters\Collection\CollectionPersister
   */",3048
397,"
  ",3054
362,public,3055
397," ",3055
347,function,3055
397," ",3055
313,getCollectionPersister,3055
0,(,0
377,array,3055
397," ",3055
317,$association,3055
0,),0
397,"
  ",3055
0,{,0
397,"
    ",3056
317,$role,3057
397," ",3057
0,=,0
397," ",3057
366,isset,3057
0,(,0
317,$association,3057
0,[,0
320,'cache',3057
0,],0
0,),0
397,"
      ",3057
0,?,0
397," ",3058
317,$association,3058
0,[,0
320,'sourceEntity',3058
0,],0
397," ",3058
0,.,0
397," ",3058
320,'::',3058
397," ",3058
0,.,0
397," ",3058
317,$association,3058
0,[,0
320,'fieldName',3058
0,],0
397,"
      ",3058
0,:,0
397," ",3059
317,$association,3059
0,[,0
320,'type',3059
0,],0
0,;,0
397,"

    ",3059
326,if,3061
397," ",3061
0,(,0
366,isset,3061
0,(,0
317,$this,3061
390,->,3061
313,collectionPersisters,3061
0,[,0
317,$role,3061
0,],0
0,),0
0,),0
397," ",3061
0,{,0
397,"
      ",3061
350,return,3062
397," ",3062
317,$this,3062
390,->,3062
313,collectionPersisters,3062
0,[,0
317,$role,3062
0,],0
0,;,0
397,"
    ",3062
0,},0
397,"

    ",3063
317,$persister,3065
397," ",3065
0,=,0
397," ",3065
313,ClassMetadata,3065
402,::,3065
313,ONE_TO_MANY,3065
397," ",3065
291,===,3065
397," ",3065
317,$association,3065
0,[,0
320,'type',3065
0,],0
397,"
      ",3065
0,?,0
397," ",3066
324,new,3066
397," ",3066
313,OneToManyPersister,3066
0,(,0
317,$this,3066
390,->,3066
313,em,3066
0,),0
397,"
      ",3066
0,:,0
397," ",3067
324,new,3067
397," ",3067
313,ManyToManyPersister,3067
0,(,0
317,$this,3067
390,->,3067
313,em,3067
0,),0
0,;,0
397,"

    ",3067
326,if,3069
397," ",3069
0,(,0
317,$this,3069
390,->,3069
313,hasCache,3069
397," ",3069
286,&&,3069
397," ",3069
366,isset,3069
0,(,0
317,$association,3069
0,[,0
320,'cache',3069
0,],0
0,),0
0,),0
397," ",3069
0,{,0
397,"
      ",3069
317,$persister,3070
397," ",3070
0,=,0
397," ",3070
317,$this,3070
390,->,3070
313,em,3070
390,->,3070
313,getConfiguration,3070
0,(,0
0,),0
397,"
        ",3070
390,->,3071
313,getSecondLevelCacheConfiguration,3071
0,(,0
0,),0
397,"
        ",3071
390,->,3072
313,getCacheFactory,3072
0,(,0
0,),0
397,"
        ",3072
390,->,3073
313,buildCachedCollectionPersister,3073
0,(,0
317,$this,3073
390,->,3073
313,em,3073
0,",",0
397," ",3073
317,$persister,3073
0,",",0
397," ",3073
317,$association,3073
0,),0
0,;,0
397,"
    ",3073
0,},0
397,"

    ",3074
317,$this,3076
390,->,3076
313,collectionPersisters,3076
0,[,0
317,$role,3076
0,],0
397," ",3076
0,=,0
397," ",3076
317,$persister,3076
0,;,0
397,"

    ",3076
350,return,3078
397," ",3078
317,$this,3078
390,->,3078
313,collectionPersisters,3078
0,[,0
317,$role,3078
0,],0
0,;,0
397,"
  ",3078
0,},0
397,"

  ",3079
393,"/**
   * INTERNAL:
   * Registers an entity as managed.
   *
   * @param object $entity The entity.
   * @param array  $id     The identifier values.
   * @param array  $data   The original entity data.
   *
   * @return void
   */",3081
397,"
  ",3090
362,public,3091
397," ",3091
347,function,3091
397," ",3091
313,registerManaged,3091
0,(,0
317,$entity,3091
0,",",0
397," ",3091
377,array,3091
397," ",3091
317,$id,3091
0,",",0
397," ",3091
377,array,3091
397," ",3091
317,$data,3091
0,),0
397,"
  ",3091
0,{,0
397,"
    ",3092
317,$oid,3093
397," ",3093
0,=,0
397," ",3093
313,spl_object_hash,3093
0,(,0
317,$entity,3093
0,),0
0,;,0
397,"

    ",3093
317,$this,3095
390,->,3095
313,entityIdentifiers,3095
0,[,0
317,$oid,3095
0,],0
397,"  ",3095
0,=,0
397," ",3095
317,$id,3095
0,;,0
397,"
    ",3095
317,$this,3096
390,->,3096
313,entityStates,3096
0,[,0
317,$oid,3096
0,],0
397,"       ",3096
0,=,0
397," ",3096
313,self,3096
402,::,3096
313,STATE_MANAGED,3096
0,;,0
397,"
    ",3096
317,$this,3097
390,->,3097
313,originalEntityData,3097
0,[,0
317,$oid,3097
0,],0
397," ",3097
0,=,0
397," ",3097
317,$data,3097
0,;,0
397,"

    ",3097
317,$this,3099
390,->,3099
313,addToIdentityMap,3099
0,(,0
317,$entity,3099
0,),0
0,;,0
397,"

    ",3099
326,if,3101
397," ",3101
0,(,0
317,$entity,3101
397," ",3101
298,instanceof,3101
397," ",3101
313,NotifyPropertyChanged,3101
397," ",3101
286,&&,3101
397," ",3101
0,(,0
397," ",3101
0,!,0
397," ",3101
317,$entity,3101
397," ",3101
298,instanceof,3101
397," ",3101
313,Proxy,3101
397," ",3101
285,||,3101
397," ",3101
317,$entity,3101
390,->,3101
313,__isInitialized,3101
0,(,0
0,),0
0,),0
0,),0
397," ",3101
0,{,0
397,"
      ",3101
317,$entity,3102
390,->,3102
313,addPropertyChangedListener,3102
0,(,0
317,$this,3102
0,),0
0,;,0
397,"
    ",3102
0,},0
397,"
  ",3103
0,},0
397,"

  ",3104
393,"/**
   * INTERNAL:
   * Clears the property changeset of the entity with the given OID.
   *
   * @param string $oid The entity's OID.
   *
   * @return void
   */",3106
397,"
  ",3113
362,public,3114
397," ",3114
347,function,3114
397," ",3114
313,clearEntityChangeSet,3114
0,(,0
317,$oid,3114
0,),0
397,"
  ",3114
0,{,0
397,"
    ",3115
317,$this,3116
390,->,3116
313,entityChangeSets,3116
0,[,0
317,$oid,3116
0,],0
397," ",3116
0,=,0
397," ",3116
377,array,3116
0,(,0
0,),0
0,;,0
397,"
  ",3116
0,},0
397,"

  ",3117
392,"/* PropertyChangedListener implementation */",3119
397,"

  ",3119
393,"/**
   * Notifies this UnitOfWork of a property change in an entity.
   *
   * @param object $entity       The entity that owns the property.
   * @param string $propertyName The name of the property that changed.
   * @param mixed  $oldValue     The old value of the property.
   * @param mixed  $newValue     The new value of the property.
   *
   * @return void
   */",3121
397,"
  ",3130
362,public,3131
397," ",3131
347,function,3131
397," ",3131
313,propertyChanged,3131
0,(,0
317,$entity,3131
0,",",0
397," ",3131
317,$propertyName,3131
0,",",0
397," ",3131
317,$oldValue,3131
0,",",0
397," ",3131
317,$newValue,3131
0,),0
397,"
  ",3131
0,{,0
397,"
    ",3132
317,$oid,3133
397,"   ",3133
0,=,0
397," ",3133
313,spl_object_hash,3133
0,(,0
317,$entity,3133
0,),0
0,;,0
397,"
    ",3133
317,$class,3134
397," ",3134
0,=,0
397," ",3134
317,$this,3134
390,->,3134
313,em,3134
390,->,3134
313,getClassMetadata,3134
0,(,0
313,get_class,3134
0,(,0
317,$entity,3134
0,),0
0,),0
0,;,0
397,"

    ",3134
317,$isAssocField,3136
397," ",3136
0,=,0
397," ",3136
366,isset,3136
0,(,0
317,$class,3136
390,->,3136
313,associationMappings,3136
0,[,0
317,$propertyName,3136
0,],0
0,),0
0,;,0
397,"

    ",3136
326,if,3138
397," ",3138
0,(,0
397," ",3138
0,!,0
397," ",3138
317,$isAssocField,3138
397," ",3138
286,&&,3138
397," ",3138
0,!,0
397," ",3138
366,isset,3138
0,(,0
317,$class,3138
390,->,3138
313,fieldMappings,3138
0,[,0
317,$propertyName,3138
0,],0
0,),0
0,),0
397," ",3138
0,{,0
397,"
      ",3138
350,return,3139
0,;,0
397," ",3139
392,"// ignore non-persistent fields",3139
397,"
    ",3139
0,},0
397,"

    ",3140
392,"// Update changeset and mark entity for synchronization",3142
397,"
    ",3142
317,$this,3143
390,->,3143
313,entityChangeSets,3143
0,[,0
317,$oid,3143
0,],0
0,[,0
317,$propertyName,3143
0,],0
397," ",3143
0,=,0
397," ",3143
377,array,3143
0,(,0
317,$oldValue,3143
0,",",0
397," ",3143
317,$newValue,3143
0,),0
0,;,0
397,"

    ",3143
326,if,3145
397," ",3145
0,(,0
397," ",3145
0,!,0
397," ",3145
366,isset,3145
0,(,0
317,$this,3145
390,->,3145
313,scheduledForSynchronization,3145
0,[,0
317,$class,3145
390,->,3145
313,rootEntityName,3145
0,],0
0,[,0
317,$oid,3145
0,],0
0,),0
0,),0
397," ",3145
0,{,0
397,"
      ",3145
317,$this,3146
390,->,3146
313,scheduleForDirtyCheck,3146
0,(,0
317,$entity,3146
0,),0
0,;,0
397,"
    ",3146
0,},0
397,"
  ",3147
0,},0
397,"

  ",3148
393,"/**
   * Gets the currently scheduled entity insertions in this UnitOfWork.
   *
   * @return array
   */",3150
397,"
  ",3154
362,public,3155
397," ",3155
347,function,3155
397," ",3155
313,getScheduledEntityInsertions,3155
0,(,0
0,),0
397,"
  ",3155
0,{,0
397,"
    ",3156
350,return,3157
397," ",3157
317,$this,3157
390,->,3157
313,entityInsertions,3157
0,;,0
397,"
  ",3157
0,},0
397,"

  ",3158
393,"/**
   * Gets the currently scheduled entity updates in this UnitOfWork.
   *
   * @return array
   */",3160
397,"
  ",3164
362,public,3165
397," ",3165
347,function,3165
397," ",3165
313,getScheduledEntityUpdates,3165
0,(,0
0,),0
397,"
  ",3165
0,{,0
397,"
    ",3166
350,return,3167
397," ",3167
317,$this,3167
390,->,3167
313,entityUpdates,3167
0,;,0
397,"
  ",3167
0,},0
397,"

  ",3168
393,"/**
   * Gets the currently scheduled entity deletions in this UnitOfWork.
   *
   * @return array
   */",3170
397,"
  ",3174
362,public,3175
397," ",3175
347,function,3175
397," ",3175
313,getScheduledEntityDeletions,3175
0,(,0
0,),0
397,"
  ",3175
0,{,0
397,"
    ",3176
350,return,3177
397," ",3177
317,$this,3177
390,->,3177
313,entityDeletions,3177
0,;,0
397,"
  ",3177
0,},0
397,"

  ",3178
393,"/**
   * Gets the currently scheduled complete collection deletions
   *
   * @return array
   */",3180
397,"
  ",3184
362,public,3185
397," ",3185
347,function,3185
397," ",3185
313,getScheduledCollectionDeletions,3185
0,(,0
0,),0
397,"
  ",3185
0,{,0
397,"
    ",3186
350,return,3187
397," ",3187
317,$this,3187
390,->,3187
313,collectionDeletions,3187
0,;,0
397,"
  ",3187
0,},0
397,"

  ",3188
393,"/**
   * Gets the currently scheduled collection inserts, updates and deletes.
   *
   * @return array
   */",3190
397,"
  ",3194
362,public,3195
397," ",3195
347,function,3195
397," ",3195
313,getScheduledCollectionUpdates,3195
0,(,0
0,),0
397,"
  ",3195
0,{,0
397,"
    ",3196
350,return,3197
397," ",3197
317,$this,3197
390,->,3197
313,collectionUpdates,3197
0,;,0
397,"
  ",3197
0,},0
397,"

  ",3198
393,"/**
   * Helper method to initialize a lazy loading proxy or persistent collection.
   *
   * @param object $obj
   *
   * @return void
   */",3200
397,"
  ",3206
362,public,3207
397," ",3207
347,function,3207
397," ",3207
313,initializeObject,3207
0,(,0
317,$obj,3207
0,),0
397,"
  ",3207
0,{,0
397,"
    ",3208
326,if,3209
397," ",3209
0,(,0
317,$obj,3209
397," ",3209
298,instanceof,3209
397," ",3209
313,Proxy,3209
0,),0
397," ",3209
0,{,0
397,"
      ",3209
317,$obj,3210
390,->,3210
313,__load,3210
0,(,0
0,),0
0,;,0
397,"

      ",3210
350,return,3212
0,;,0
397,"
    ",3212
0,},0
397,"

    ",3213
326,if,3215
397," ",3215
0,(,0
317,$obj,3215
397," ",3215
298,instanceof,3215
397," ",3215
313,PersistentCollection,3215
0,),0
397," ",3215
0,{,0
397,"
      ",3215
317,$obj,3216
390,->,3216
313,initialize,3216
0,(,0
0,),0
0,;,0
397,"
    ",3216
0,},0
397,"
  ",3217
0,},0
397,"

  ",3218
393,"/**
   * Helper method to show an object as string.
   *
   * @param object $obj
   *
   * @return string
   */",3220
397,"
  ",3226
360,private,3227
397," ",3227
357,static,3227
397," ",3227
347,function,3227
397," ",3227
313,objToStr,3227
0,(,0
317,$obj,3227
0,),0
397,"
  ",3227
0,{,0
397,"
    ",3228
350,return,3229
397," ",3229
313,method_exists,3229
0,(,0
317,$obj,3229
0,",",0
397," ",3229
320,'__toString',3229
0,),0
397," ",3229
0,?,0
397," ",3229
301,(string),3229
317,$obj,3229
397," ",3229
0,:,0
397," ",3229
313,get_class,3229
0,(,0
317,$obj,3229
0,),0
0,.,0
320,'@',3229
0,.,0
313,spl_object_hash,3229
0,(,0
317,$obj,3229
0,),0
0,;,0
397,"
  ",3229
0,},0
397,"

  ",3230
393,"/**
   * Marks an entity as read-only so that it will not be considered for updates during UnitOfWork#commit().
   *
   * This operation cannot be undone as some parts of the UnitOfWork now keep gathering information
   * on this object that might be necessary to perform a correct update.
   *
   * @param object $object
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   */",3232
397,"
  ",3243
362,public,3244
397," ",3244
347,function,3244
397," ",3244
313,markReadOnly,3244
0,(,0
317,$object,3244
0,),0
397,"
  ",3244
0,{,0
397,"
    ",3245
326,if,3246
397," ",3246
0,(,0
397," ",3246
0,!,0
397," ",3246
313,is_object,3246
0,(,0
317,$object,3246
0,),0
397," ",3246
285,||,3246
397," ",3246
0,!,0
397," ",3246
317,$this,3246
390,->,3246
313,isInIdentityMap,3246
0,(,0
317,$object,3246
0,),0
0,),0
397," ",3246
0,{,0
397,"
      ",3246
258,throw,3247
397," ",3247
313,ORMInvalidArgumentException,3247
402,::,3247
313,readOnlyRequiresManagedEntity,3247
0,(,0
317,$object,3247
0,),0
0,;,0
397,"
    ",3247
0,},0
397,"

    ",3248
317,$this,3250
390,->,3250
313,readOnlyObjects,3250
0,[,0
313,spl_object_hash,3250
0,(,0
317,$object,3250
0,),0
0,],0
397," ",3250
0,=,0
397," ",3250
313,true,3250
0,;,0
397,"
  ",3250
0,},0
397,"

  ",3251
393,"/**
   * Is this entity read only?
   *
   * @param object $object
   *
   * @return bool
   *
   * @throws ORMInvalidArgumentException
   */",3253
397,"
  ",3261
362,public,3262
397," ",3262
347,function,3262
397," ",3262
313,isReadOnly,3262
0,(,0
317,$object,3262
0,),0
397,"
  ",3262
0,{,0
397,"
    ",3263
326,if,3264
397," ",3264
0,(,0
397," ",3264
0,!,0
397," ",3264
313,is_object,3264
0,(,0
317,$object,3264
0,),0
0,),0
397," ",3264
0,{,0
397,"
      ",3264
258,throw,3265
397," ",3265
313,ORMInvalidArgumentException,3265
402,::,3265
313,readOnlyRequiresManagedEntity,3265
0,(,0
317,$object,3265
0,),0
0,;,0
397,"
    ",3265
0,},0
397,"

    ",3266
350,return,3268
397," ",3268
366,isset,3268
0,(,0
317,$this,3268
390,->,3268
313,readOnlyObjects,3268
0,[,0
313,spl_object_hash,3268
0,(,0
317,$object,3268
0,),0
0,],0
0,),0
0,;,0
397,"
  ",3268
0,},0
397,"

  ",3269
393,"/**
   * Perform whatever processing is encapsulated here after completion of the transaction.
   */",3271
397,"
  ",3273
360,private,3274
397," ",3274
347,function,3274
397," ",3274
313,afterTransactionComplete,3274
0,(,0
0,),0
397,"
  ",3274
0,{,0
397,"
    ",3275
326,if,3276
397," ",3276
0,(,0
397," ",3276
0,!,0
397," ",3276
317,$this,3276
390,->,3276
313,hasCache,3276
0,),0
397," ",3276
0,{,0
397,"
      ",3276
350,return,3277
0,;,0
397,"
    ",3277
0,},0
397,"

    ",3278
334,foreach,3280
397," ",3280
0,(,0
317,$this,3280
390,->,3280
313,persisters,3280
397," ",3280
338,as,3280
397," ",3280
317,$persister,3280
0,),0
397," ",3280
0,{,0
397,"
      ",3280
326,if,3281
397," ",3281
0,(,0
317,$persister,3281
397," ",3281
298,instanceof,3281
397," ",3281
313,CachedPersister,3281
0,),0
397," ",3281
0,{,0
397,"
        ",3281
317,$persister,3282
390,->,3282
313,afterTransactionComplete,3282
0,(,0
0,),0
0,;,0
397,"
      ",3282
0,},0
397,"
    ",3283
0,},0
397,"

    ",3284
334,foreach,3286
397," ",3286
0,(,0
317,$this,3286
390,->,3286
313,collectionPersisters,3286
397," ",3286
338,as,3286
397," ",3286
317,$persister,3286
0,),0
397," ",3286
0,{,0
397,"
      ",3286
326,if,3287
397," ",3287
0,(,0
317,$persister,3287
397," ",3287
298,instanceof,3287
397," ",3287
313,CachedPersister,3287
0,),0
397," ",3287
0,{,0
397,"
        ",3287
317,$persister,3288
390,->,3288
313,afterTransactionComplete,3288
0,(,0
0,),0
0,;,0
397,"
      ",3288
0,},0
397,"
    ",3289
0,},0
397,"
  ",3290
0,},0
397,"

  ",3291
393,"/**
   * Perform whatever processing is encapsulated here after completion of the rolled-back.
   */",3293
397,"
  ",3295
360,private,3296
397," ",3296
347,function,3296
397," ",3296
313,afterTransactionRolledBack,3296
0,(,0
0,),0
397,"
  ",3296
0,{,0
397,"
    ",3297
326,if,3298
397," ",3298
0,(,0
397," ",3298
0,!,0
397," ",3298
317,$this,3298
390,->,3298
313,hasCache,3298
0,),0
397," ",3298
0,{,0
397,"
      ",3298
350,return,3299
0,;,0
397,"
    ",3299
0,},0
397,"

    ",3300
334,foreach,3302
397," ",3302
0,(,0
317,$this,3302
390,->,3302
313,persisters,3302
397," ",3302
338,as,3302
397," ",3302
317,$persister,3302
0,),0
397," ",3302
0,{,0
397,"
      ",3302
326,if,3303
397," ",3303
0,(,0
317,$persister,3303
397," ",3303
298,instanceof,3303
397," ",3303
313,CachedPersister,3303
0,),0
397," ",3303
0,{,0
397,"
        ",3303
317,$persister,3304
390,->,3304
313,afterTransactionRolledBack,3304
0,(,0
0,),0
0,;,0
397,"
      ",3304
0,},0
397,"
    ",3305
0,},0
397,"

    ",3306
334,foreach,3308
397," ",3308
0,(,0
317,$this,3308
390,->,3308
313,collectionPersisters,3308
397," ",3308
338,as,3308
397," ",3308
317,$persister,3308
0,),0
397," ",3308
0,{,0
397,"
      ",3308
326,if,3309
397," ",3309
0,(,0
317,$persister,3309
397," ",3309
298,instanceof,3309
397," ",3309
313,CachedPersister,3309
0,),0
397," ",3309
0,{,0
397,"
        ",3309
317,$persister,3310
390,->,3310
313,afterTransactionRolledBack,3310
0,(,0
0,),0
0,;,0
397,"
      ",3310
0,},0
397,"
    ",3311
0,},0
397,"
  ",3312
0,},0
397,"

  ",3313
360,private,3315
397," ",3315
347,function,3315
397," ",3315
313,dispatchOnFlushEvent,3315
0,(,0
0,),0
397,"
  ",3315
0,{,0
397,"
    ",3316
326,if,3317
397," ",3317
0,(,0
317,$this,3317
390,->,3317
313,evm,3317
390,->,3317
313,hasListeners,3317
0,(,0
313,Events,3317
402,::,3317
313,onFlush,3317
0,),0
0,),0
397," ",3317
0,{,0
397,"
      ",3317
317,$this,3318
390,->,3318
313,evm,3318
390,->,3318
313,dispatchEvent,3318
0,(,0
313,Events,3318
402,::,3318
313,onFlush,3318
0,",",0
397," ",3318
324,new,3318
397," ",3318
313,OnFlushEventArgs,3318
0,(,0
317,$this,3318
390,->,3318
313,em,3318
0,),0
0,),0
0,;,0
397,"
    ",3318
0,},0
397,"
  ",3319
0,},0
397,"

  ",3320
360,private,3322
397," ",3322
347,function,3322
397," ",3322
313,dispatchPostFlushEvent,3322
0,(,0
0,),0
397,"
  ",3322
0,{,0
397,"
    ",3323
326,if,3324
397," ",3324
0,(,0
317,$this,3324
390,->,3324
313,evm,3324
390,->,3324
313,hasListeners,3324
0,(,0
313,Events,3324
402,::,3324
313,postFlush,3324
0,),0
0,),0
397," ",3324
0,{,0
397,"
      ",3324
317,$this,3325
390,->,3325
313,evm,3325
390,->,3325
313,dispatchEvent,3325
0,(,0
313,Events,3325
402,::,3325
313,postFlush,3325
0,",",0
397," ",3325
324,new,3325
397," ",3325
313,PostFlushEventArgs,3325
0,(,0
317,$this,3325
390,->,3325
313,em,3325
0,),0
0,),0
0,;,0
397,"
    ",3325
0,},0
397,"
  ",3326
0,},0
397,"

  ",3327
393,"/**
   * Verifies if two given entities actually are the same based on identifier comparison
   *
   * @param object $entity1
   * @param object $entity2
   *
   * @return bool
   */",3329
397,"
  ",3336
360,private,3337
397," ",3337
347,function,3337
397," ",3337
313,isIdentifierEquals,3337
0,(,0
317,$entity1,3337
0,",",0
397," ",3337
317,$entity2,3337
0,),0
397,"
  ",3337
0,{,0
397,"
    ",3338
326,if,3339
397," ",3339
0,(,0
317,$entity1,3339
397," ",3339
291,===,3339
397," ",3339
317,$entity2,3339
0,),0
397," ",3339
0,{,0
397,"
      ",3339
350,return,3340
397," ",3340
313,true,3340
0,;,0
397,"
    ",3340
0,},0
397,"

    ",3341
317,$class,3343
397," ",3343
0,=,0
397," ",3343
317,$this,3343
390,->,3343
313,em,3343
390,->,3343
313,getClassMetadata,3343
0,(,0
313,get_class,3343
0,(,0
317,$entity1,3343
0,),0
0,),0
0,;,0
397,"

    ",3343
326,if,3345
397," ",3345
0,(,0
317,$class,3345
397," ",3345
292,!==,3345
397," ",3345
317,$this,3345
390,->,3345
313,em,3345
390,->,3345
313,getClassMetadata,3345
0,(,0
313,get_class,3345
0,(,0
317,$entity2,3345
0,),0
0,),0
0,),0
397," ",3345
0,{,0
397,"
      ",3345
350,return,3346
397," ",3346
313,false,3346
0,;,0
397,"
    ",3346
0,},0
397,"

    ",3347
317,$oid1,3349
397," ",3349
0,=,0
397," ",3349
313,spl_object_hash,3349
0,(,0
317,$entity1,3349
0,),0
0,;,0
397,"
    ",3349
317,$oid2,3350
397," ",3350
0,=,0
397," ",3350
313,spl_object_hash,3350
0,(,0
317,$entity2,3350
0,),0
0,;,0
397,"

    ",3350
317,$id1,3352
397," ",3352
0,=,0
397," ",3352
366,isset,3352
0,(,0
317,$this,3352
390,->,3352
313,entityIdentifiers,3352
0,[,0
317,$oid1,3352
0,],0
0,),0
397,"
      ",3352
0,?,0
397," ",3353
317,$this,3353
390,->,3353
313,entityIdentifiers,3353
0,[,0
317,$oid1,3353
0,],0
397,"
      ",3353
0,:,0
397," ",3354
317,$this,3354
390,->,3354
313,identifierFlattener,3354
390,->,3354
313,flattenIdentifier,3354
0,(,0
317,$class,3354
0,",",0
397," ",3354
317,$class,3354
390,->,3354
313,getIdentifierValues,3354
0,(,0
317,$entity1,3354
0,),0
0,),0
0,;,0
397,"
    ",3354
317,$id2,3355
397," ",3355
0,=,0
397," ",3355
366,isset,3355
0,(,0
317,$this,3355
390,->,3355
313,entityIdentifiers,3355
0,[,0
317,$oid2,3355
0,],0
0,),0
397,"
      ",3355
0,?,0
397," ",3356
317,$this,3356
390,->,3356
313,entityIdentifiers,3356
0,[,0
317,$oid2,3356
0,],0
397,"
      ",3356
0,:,0
397," ",3357
317,$this,3357
390,->,3357
313,identifierFlattener,3357
390,->,3357
313,flattenIdentifier,3357
0,(,0
317,$class,3357
0,",",0
397," ",3357
317,$class,3357
390,->,3357
313,getIdentifierValues,3357
0,(,0
317,$entity2,3357
0,),0
0,),0
0,;,0
397,"

    ",3357
350,return,3359
397," ",3359
317,$id1,3359
397," ",3359
291,===,3359
397," ",3359
317,$id2,3359
397," ",3359
285,||,3359
397," ",3359
313,implode,3359
0,(,0
320,"' '",3359
0,",",0
397," ",3359
317,$id1,3359
0,),0
397," ",3359
291,===,3359
397," ",3359
313,implode,3359
0,(,0
320,"' '",3359
0,",",0
397," ",3359
317,$id2,3359
0,),0
0,;,0
397,"
  ",3359
0,},0
397,"

  ",3360
393,"/**
   * @param object $entity
   * @param object $managedCopy
   *
   * @throws ORMException
   * @throws OptimisticLockException
   * @throws TransactionRequiredException
   */",3362
397,"
  ",3369
360,private,3370
397," ",3370
347,function,3370
397," ",3370
313,mergeEntityStateIntoManagedCopy,3370
0,(,0
317,$entity,3370
0,",",0
397," ",3370
317,$managedCopy,3370
0,),0
397,"
  ",3370
0,{,0
397,"
    ",3371
317,$class,3372
397," ",3372
0,=,0
397," ",3372
317,$this,3372
390,->,3372
313,em,3372
390,->,3372
313,getClassMetadata,3372
0,(,0
313,get_class,3372
0,(,0
317,$entity,3372
0,),0
0,),0
0,;,0
397,"

    ",3372
334,foreach,3374
397," ",3374
0,(,0
317,$this,3374
390,->,3374
313,reflectionPropertiesGetter,3374
390,->,3374
313,getProperties,3374
0,(,0
317,$class,3374
390,->,3374
313,name,3374
0,),0
397," ",3374
338,as,3374
397," ",3374
317,$prop,3374
0,),0
397," ",3374
0,{,0
397,"
      ",3374
317,$name,3375
397," ",3375
0,=,0
397," ",3375
317,$prop,3375
390,->,3375
313,name,3375
0,;,0
397,"

      ",3375
317,$prop,3377
390,->,3377
313,setAccessible,3377
0,(,0
313,true,3377
0,),0
0,;,0
397,"

      ",3377
326,if,3379
397," ",3379
0,(,0
397," ",3379
0,!,0
397," ",3379
366,isset,3379
0,(,0
317,$class,3379
390,->,3379
313,associationMappings,3379
0,[,0
317,$name,3379
0,],0
0,),0
0,),0
397," ",3379
0,{,0
397,"
        ",3379
326,if,3380
397," ",3380
0,(,0
397," ",3380
0,!,0
397," ",3380
317,$class,3380
390,->,3380
313,isIdentifier,3380
0,(,0
317,$name,3380
0,),0
0,),0
397," ",3380
0,{,0
397,"
          ",3380
317,$prop,3381
390,->,3381
313,setValue,3381
0,(,0
317,$managedCopy,3381
0,",",0
397," ",3381
317,$prop,3381
390,->,3381
313,getValue,3381
0,(,0
317,$entity,3381
0,),0
0,),0
0,;,0
397,"
        ",3381
0,},0
397,"
      ",3382
0,},0
397," ",3383
310,else,3383
397," ",3383
0,{,0
397,"
        ",3383
317,$assoc2,3384
397," ",3384
0,=,0
397," ",3384
317,$class,3384
390,->,3384
313,associationMappings,3384
0,[,0
317,$name,3384
0,],0
0,;,0
397,"

        ",3384
326,if,3386
397," ",3386
0,(,0
317,$assoc2,3386
0,[,0
320,'type',3386
0,],0
397," ",3386
287,&,3386
397," ",3386
313,ClassMetadata,3386
402,::,3386
313,TO_ONE,3386
0,),0
397," ",3386
0,{,0
397,"
          ",3386
317,$other,3387
397," ",3387
0,=,0
397," ",3387
317,$prop,3387
390,->,3387
313,getValue,3387
0,(,0
317,$entity,3387
0,),0
0,;,0
397,"
          ",3387
326,if,3388
397," ",3388
0,(,0
317,$other,3388
397," ",3388
291,===,3388
397," ",3388
313,null,3388
0,),0
397," ",3388
0,{,0
397,"
            ",3388
317,$prop,3389
390,->,3389
313,setValue,3389
0,(,0
317,$managedCopy,3389
0,",",0
397," ",3389
313,null,3389
0,),0
0,;,0
397,"
          ",3389
0,},0
397," ",3390
310,else,3390
397," ",3390
0,{,0
397,"
            ",3390
326,if,3391
397," ",3391
0,(,0
317,$other,3391
397," ",3391
298,instanceof,3391
397," ",3391
313,Proxy,3391
397," ",3391
286,&&,3391
397," ",3391
0,!,0
317,$other,3391
390,->,3391
313,__isInitialized,3391
0,(,0
0,),0
0,),0
397," ",3391
0,{,0
397,"
              ",3391
392,"// do not merge fields marked lazy that have not been fetched.",3392
397,"
              ",3392
345,continue,3393
0,;,0
397,"
            ",3393
0,},0
397,"

            ",3394
326,if,3396
397," ",3396
0,(,0
397," ",3396
0,!,0
397," ",3396
317,$assoc2,3396
0,[,0
320,'isCascadeMerge',3396
0,],0
0,),0
397," ",3396
0,{,0
397,"
              ",3396
326,if,3397
397," ",3397
0,(,0
317,$this,3397
390,->,3397
313,getEntityState,3397
0,(,0
317,$other,3397
0,),0
397," ",3397
291,===,3397
397," ",3397
313,self,3397
402,::,3397
313,STATE_DETACHED,3397
0,),0
397," ",3397
0,{,0
397,"
                ",3397
317,$targetClass,3398
397," ",3398
0,=,0
397," ",3398
317,$this,3398
390,->,3398
313,em,3398
390,->,3398
313,getClassMetadata,3398
0,(,0
317,$assoc2,3398
0,[,0
320,'targetEntity',3398
0,],0
0,),0
0,;,0
397,"
                ",3398
317,$relatedId,3399
397,"   ",3399
0,=,0
397," ",3399
317,$targetClass,3399
390,->,3399
313,getIdentifierValues,3399
0,(,0
317,$other,3399
0,),0
0,;,0
397,"

                ",3399
326,if,3401
397," ",3401
0,(,0
317,$targetClass,3401
390,->,3401
313,subClasses,3401
0,),0
397," ",3401
0,{,0
397,"
                  ",3401
317,$other,3402
397," ",3402
0,=,0
397," ",3402
317,$this,3402
390,->,3402
313,em,3402
390,->,3402
313,find,3402
0,(,0
317,$targetClass,3402
390,->,3402
313,name,3402
0,",",0
397," ",3402
317,$relatedId,3402
0,),0
0,;,0
397,"
                ",3402
0,},0
397," ",3403
310,else,3403
397," ",3403
0,{,0
397,"
                  ",3403
317,$other,3404
397," ",3404
0,=,0
397," ",3404
317,$this,3404
390,->,3404
313,em,3404
390,->,3404
313,getProxyFactory,3404
0,(,0
0,),0
390,->,3404
313,getProxy,3404
0,(,0
397,"
                    ",3404
317,$assoc2,3405
0,[,0
320,'targetEntity',3405
0,],0
0,",",0
397,"
                    ",3405
317,$relatedId,3406
397,"
                  ",3406
0,),0
0,;,0
397,"
                  ",3407
317,$this,3408
390,->,3408
313,registerManaged,3408
0,(,0
317,$other,3408
0,",",0
397," ",3408
317,$relatedId,3408
0,",",0
397," ",3408
377,array,3408
0,(,0
0,),0
0,),0
0,;,0
397,"
                ",3408
0,},0
397,"
              ",3409
0,},0
397,"

              ",3410
317,$prop,3412
390,->,3412
313,setValue,3412
0,(,0
317,$managedCopy,3412
0,",",0
397," ",3412
317,$other,3412
0,),0
0,;,0
397,"
            ",3412
0,},0
397,"
          ",3413
0,},0
397,"
        ",3414
0,},0
397," ",3415
310,else,3415
397," ",3415
0,{,0
397,"
          ",3415
317,$mergeCol,3416
397," ",3416
0,=,0
397," ",3416
317,$prop,3416
390,->,3416
313,getValue,3416
0,(,0
317,$entity,3416
0,),0
0,;,0
397,"

          ",3416
326,if,3418
397," ",3418
0,(,0
317,$mergeCol,3418
397," ",3418
298,instanceof,3418
397," ",3418
313,PersistentCollection,3418
397," ",3418
286,&&,3418
397," ",3418
0,!,0
397," ",3418
317,$mergeCol,3418
390,->,3418
313,isInitialized,3418
0,(,0
0,),0
0,),0
397," ",3418
0,{,0
397,"
            ",3418
392,"// do not merge fields marked lazy that have not been fetched.",3419
397,"
            ",3419
392,"// keep the lazy persistent collection of the managed copy.",3420
397,"
            ",3420
345,continue,3421
0,;,0
397,"
          ",3421
0,},0
397,"

          ",3422
317,$managedCol,3424
397," ",3424
0,=,0
397," ",3424
317,$prop,3424
390,->,3424
313,getValue,3424
0,(,0
317,$managedCopy,3424
0,),0
0,;,0
397,"

          ",3424
326,if,3426
397," ",3426
0,(,0
397," ",3426
0,!,0
397," ",3426
317,$managedCol,3426
0,),0
397," ",3426
0,{,0
397,"
            ",3426
317,$managedCol,3427
397," ",3427
0,=,0
397," ",3427
324,new,3427
397," ",3427
313,PersistentCollection,3427
0,(,0
397,"
              ",3427
317,$this,3428
390,->,3428
313,em,3428
0,",",0
397,"
              ",3428
317,$this,3429
390,->,3429
313,em,3429
390,->,3429
313,getClassMetadata,3429
0,(,0
317,$assoc2,3429
0,[,0
320,'targetEntity',3429
0,],0
0,),0
0,",",0
397,"
              ",3429
324,new,3430
397," ",3430
313,ArrayCollection,3430
397,"
            ",3430
0,),0
0,;,0
397,"
            ",3431
317,$managedCol,3432
390,->,3432
313,setOwner,3432
0,(,0
317,$managedCopy,3432
0,",",0
397," ",3432
317,$assoc2,3432
0,),0
0,;,0
397,"
            ",3432
317,$prop,3433
390,->,3433
313,setValue,3433
0,(,0
317,$managedCopy,3433
0,",",0
397," ",3433
317,$managedCol,3433
0,),0
0,;,0
397,"

            ",3433
317,$this,3435
390,->,3435
313,originalEntityData,3435
0,[,0
313,spl_object_hash,3435
0,(,0
317,$entity,3435
0,),0
0,],0
0,[,0
317,$name,3435
0,],0
397," ",3435
0,=,0
397," ",3435
317,$managedCol,3435
0,;,0
397,"
          ",3435
0,},0
397,"

          ",3436
326,if,3438
397," ",3438
0,(,0
317,$assoc2,3438
0,[,0
320,'isCascadeMerge',3438
0,],0
0,),0
397," ",3438
0,{,0
397,"
            ",3438
317,$managedCol,3439
390,->,3439
313,initialize,3439
0,(,0
0,),0
0,;,0
397,"

            ",3439
392,"// clear and set dirty a managed collection if its not also the same collection to merge from.",3441
397,"
            ",3441
326,if,3442
397," ",3442
0,(,0
397," ",3442
0,!,0
397," ",3442
317,$managedCol,3442
390,->,3442
313,isEmpty,3442
0,(,0
0,),0
397," ",3442
286,&&,3442
397," ",3442
317,$managedCol,3442
397," ",3442
292,!==,3442
397," ",3442
317,$mergeCol,3442
0,),0
397," ",3442
0,{,0
397,"
              ",3442
317,$managedCol,3443
390,->,3443
313,unwrap,3443
0,(,0
0,),0
390,->,3443
313,clear,3443
0,(,0
0,),0
0,;,0
397,"
              ",3443
317,$managedCol,3444
390,->,3444
313,setDirty,3444
0,(,0
313,true,3444
0,),0
0,;,0
397,"

              ",3444
326,if,3446
397," ",3446
0,(,0
317,$assoc2,3446
0,[,0
320,'isOwningSide',3446
0,],0
397,"
                ",3446
286,&&,3447
397," ",3447
317,$assoc2,3447
0,[,0
320,'type',3447
0,],0
397," ",3447
289,==,3447
397," ",3447
313,ClassMetadata,3447
402,::,3447
313,MANY_TO_MANY,3447
397,"
                ",3447
286,&&,3448
397," ",3448
317,$class,3448
390,->,3448
313,isChangeTrackingNotify,3448
0,(,0
0,),0
397,"
              ",3448
0,),0
397," ",3449
0,{,0
397,"
                ",3449
317,$this,3450
390,->,3450
313,scheduleForDirtyCheck,3450
0,(,0
317,$managedCopy,3450
0,),0
0,;,0
397,"
              ",3450
0,},0
397,"
            ",3451
0,},0
397,"
          ",3452
0,},0
397,"
        ",3453
0,},0
397,"
      ",3454
0,},0
397,"

      ",3455
326,if,3457
397," ",3457
0,(,0
317,$class,3457
390,->,3457
313,isChangeTrackingNotify,3457
0,(,0
0,),0
0,),0
397," ",3457
0,{,0
397,"
        ",3457
392,"// Just treat all properties as changed, there is no other choice.",3458
397,"
        ",3458
317,$this,3459
390,->,3459
313,propertyChanged,3459
0,(,0
317,$managedCopy,3459
0,",",0
397," ",3459
317,$name,3459
0,",",0
397," ",3459
313,null,3459
0,",",0
397," ",3459
317,$prop,3459
390,->,3459
313,getValue,3459
0,(,0
317,$managedCopy,3459
0,),0
0,),0
0,;,0
397,"
      ",3459
0,},0
397,"
    ",3460
0,},0
397,"
  ",3461
0,},0
397,"

  ",3462
393,"/**
   * This method called by hydrators, and indicates that hydrator totally completed current hydration cycle.
   * Unit of work able to fire deferred events, related to loading events here.
   *
   * @internal should be called internally from object hydrators
   */",3464
397,"
  ",3469
362,public,3470
397," ",3470
347,function,3470
397," ",3470
313,hydrationComplete,3470
0,(,0
0,),0
397,"
  ",3470
0,{,0
397,"
    ",3471
317,$this,3472
390,->,3472
313,hydrationCompleteHandler,3472
390,->,3472
313,hydrationComplete,3472
0,(,0
0,),0
0,;,0
397,"
  ",3472
0,},0
397,"
",3473
0,},0
