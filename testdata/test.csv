394,"<?php
",1
392,"/*
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This software consists of voluntary contributions made by many individuals
 * and is licensed under the MIT license. For more information, see
 * <http://www.doctrine-project.org>.
 */",2
397,"

",18
375,namespace,20
397," ",20
316,"Doctrine\ORM",20
0,;,0
397,"

",20
354,use,22
397," ",22
316,"Doctrine\Common\Persistence\Mapping\RuntimeReflectionService",22
0,;,0
397,"
",22
354,use,23
397," ",23
316,"Doctrine\DBAL\LockMode",23
0,;,0
397,"
",23
354,use,24
397," ",24
316,"Doctrine\ORM\Internal\HydrationCompleteHandler",24
0,;,0
397,"
",24
354,use,25
397," ",25
316,"Doctrine\ORM\Mapping\Reflection\ReflectionPropertiesGetter",25
0,;,0
397,"
",25
354,use,26
397," ",26
313,Exception,26
0,;,0
397,"
",26
354,use,27
397," ",27
313,InvalidArgumentException,27
0,;,0
397,"
",27
354,use,28
397," ",28
313,UnexpectedValueException,28
0,;,0
397,"

",28
354,use,30
397," ",30
316,"Doctrine\Common\Collections\ArrayCollection",30
0,;,0
397,"
",30
354,use,31
397," ",31
316,"Doctrine\Common\Collections\Collection",31
0,;,0
397,"
",31
354,use,32
397," ",32
316,"Doctrine\Common\NotifyPropertyChanged",32
0,;,0
397,"
",32
354,use,33
397," ",33
316,"Doctrine\Common\PropertyChangedListener",33
0,;,0
397,"
",33
354,use,34
397," ",34
316,"Doctrine\Common\Persistence\ObjectManagerAware",34
0,;,0
397,"
",34
354,use,35
397," ",35
316,"Doctrine\ORM\Mapping\ClassMetadata",35
0,;,0
397,"
",35
354,use,36
397," ",36
316,"Doctrine\ORM\Proxy\Proxy",36
0,;,0
397,"

",36
354,use,38
397," ",38
316,"Doctrine\ORM\Event\LifecycleEventArgs",38
0,;,0
397,"
",38
354,use,39
397," ",39
316,"Doctrine\ORM\Event\PreUpdateEventArgs",39
0,;,0
397,"
",39
354,use,40
397," ",40
316,"Doctrine\ORM\Event\PreFlushEventArgs",40
0,;,0
397,"
",40
354,use,41
397," ",41
316,"Doctrine\ORM\Event\OnFlushEventArgs",41
0,;,0
397,"
",41
354,use,42
397," ",42
316,"Doctrine\ORM\Event\PostFlushEventArgs",42
0,;,0
397,"
",42
354,use,43
397," ",43
316,"Doctrine\ORM\Event\ListenersInvoker",43
0,;,0
397,"

",43
354,use,45
397," ",45
316,"Doctrine\ORM\Cache\Persister\CachedPersister",45
0,;,0
397,"
",45
354,use,46
397," ",46
316,"Doctrine\ORM\Persisters\Entity\BasicEntityPersister",46
0,;,0
397,"
",46
354,use,47
397," ",47
316,"Doctrine\ORM\Persisters\Entity\SingleTablePersister",47
0,;,0
397,"
",47
354,use,48
397," ",48
316,"Doctrine\ORM\Persisters\Entity\JoinedSubclassPersister",48
0,;,0
397,"
",48
354,use,49
397," ",49
316,"Doctrine\ORM\Persisters\Collection\OneToManyPersister",49
0,;,0
397,"
",49
354,use,50
397," ",50
316,"Doctrine\ORM\Persisters\Collection\ManyToManyPersister",50
0,;,0
397,"
",50
354,use,51
397," ",51
316,"Doctrine\ORM\Utility\IdentifierFlattener",51
0,;,0
397,"
",51
354,use,52
397," ",52
316,"Doctrine\ORM\Cache\AssociationCacheEntry",52
0,;,0
397,"

",52
393,"/**
 * The UnitOfWork is responsible for tracking changes to objects during an
 * ""object-level"" transaction and for writing out changes to the database
 * in the correct order.
 *
 * Internal note: This class contains highly performance-sensitive code.
 *
 * @since       2.0
 * @author      Benjamin Eberlei <kontakt@beberlei.de>
 * @author      Guilherme Blanco <guilhermeblanco@hotmail.com>
 * @author      Jonathan Wage <jonwage@gmail.com>
 * @author      Roman Borschel <roman@code-factory.org>
 * @author      Rob Caiger <rob@clocal.co.uk>
 */",54
397,"
",67
387,#[,68
314,"\Attribute",68
0,(,0
314,"\Attribute",68
402,::,68
313,TARGET_METHOD,68
0,),0
0,",",0
314,"\Attribute",68
0,],0
397,"
",68
369,class,69
397," ",69
313,UnitOfWork,69
397," ",69
374,implements,69
397," ",69
313,PropertyChangedListener,69
397,"
",69
0,{,0
397,"
  ",70
393,"/**
   * An entity is in MANAGED state when its persistence is managed by an EntityManager.
   */",71
397,"
  ",73
349,const,74
397," ",74
313,STATE_MANAGED,74
397," ",74
0,=,0
397," ",74
311,1,74
0,;,0
397,"

  ",74
393,"/**
   * An entity is new if it has just been instantiated (i.e. using the ""new"" operator)
   * and is not (yet) managed by an EntityManager.
   */",76
397,"
  ",79
349,const,80
397," ",80
313,STATE_NEW,80
397," ",80
0,=,0
397," ",80
311,2,80
0,;,0
397,"

  ",80
393,"/**
   * A detached entity is an instance with persistent state and identity that is not
   * (or no longer) associated with an EntityManager (and a UnitOfWork).
   */",82
397,"
  ",85
349,const,86
397," ",86
313,STATE_DETACHED,86
397," ",86
0,=,0
397," ",86
311,3,86
0,;,0
397,"

  ",86
393,"/**
   * A removed entity instance is an instance with a persistent identity,
   * associated with an EntityManager, whose persistent state will be deleted
   * on commit.
   */",88
397,"
  ",92
349,const,93
397," ",93
313,STATE_REMOVED,93
397," ",93
0,=,0
397," ",93
311,4,93
0,;,0
397,"

  ",93
393,"/**
   * Hint used to collect all primary keys of associated entities during hydration
   * and execute it in a dedicated query afterwards
   * @see https://doctrine-orm.readthedocs.org/en/latest/reference/dql-doctrine-query-language.html?highlight=eager#temporarily-change-fetch-mode-in-dql
   */",95
397,"
  ",99
349,const,100
397," ",100
313,HINT_DEFEREAGERLOAD,100
397," ",100
0,=,0
397," ",100
320,'deferEagerLoad',100
0,;,0
397,"

  ",100
393,"/**
   * The identity map that holds references to all managed entities that have
   * an identity. The entities are grouped by their class name.
   * Since all classes in a hierarchy must share the same identifier set,
   * we always take the root class name of the hierarchy.
   *
   * @var array
   */",102
397,"
  ",109
360,private,110
397," ",110
317,$identityMap,110
397," ",110
0,=,0
397," ",110
377,array,110
0,(,0
0,),0
0,;,0
397,"

  ",110
393,"/**
   * Map of all identifiers of managed entities.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",112
397,"
  ",117
360,private,118
397," ",118
317,$entityIdentifiers,118
397," ",118
0,=,0
397," ",118
377,array,118
0,(,0
0,),0
0,;,0
397,"

  ",118
393,"/**
   * Map of the original entity data of managed entities.
   * Keys are object ids (spl_object_hash). This is used for calculating changesets
   * at commit time.
   *
   * Internal note: Note that PHPs ""copy-on-write"" behavior helps a lot with memory usage.
   *                A value will only really be copied if the value in the entity is modified
   *                by the user.
   *
   * @var array
   */",120
397,"
  ",130
360,private,131
397," ",131
317,$originalEntityData,131
397," ",131
0,=,0
397," ",131
377,array,131
0,(,0
0,),0
0,;,0
397,"

  ",131
393,"/**
   * Map of entity changes. Keys are object ids (spl_object_hash).
   * Filled at the beginning of a commit of the UnitOfWork and cleaned at the end.
   *
   * @var array
   */",133
397,"
  ",138
360,private,139
397," ",139
317,$entityChangeSets,139
397," ",139
0,=,0
397," ",139
377,array,139
0,(,0
0,),0
0,;,0
397,"

  ",139
393,"/**
   * The (cached) states of any known entities.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",141
397,"
  ",146
360,private,147
397," ",147
317,$entityStates,147
397," ",147
0,=,0
397," ",147
377,array,147
0,(,0
0,),0
0,;,0
397,"

  ",147
393,"/**
   * Map of entities that are scheduled for dirty checking at commit time.
   * This is only used for entities with a change tracking policy of DEFERRED_EXPLICIT.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",149
397,"
  ",155
360,private,156
397," ",156
317,$scheduledForSynchronization,156
397," ",156
0,=,0
397," ",156
377,array,156
0,(,0
0,),0
0,;,0
397,"

  ",156
393,"/**
   * A list of all pending entity insertions.
   *
   * @var array
   */",158
397,"
  ",162
360,private,163
397," ",163
317,$entityInsertions,163
397," ",163
0,=,0
397," ",163
377,array,163
0,(,0
0,),0
0,;,0
397,"

  ",163
393,"/**
   * A list of all pending entity updates.
   *
   * @var array
   */",165
397,"
  ",169
360,private,170
397," ",170
317,$entityUpdates,170
397," ",170
0,=,0
397," ",170
377,array,170
0,(,0
0,),0
0,;,0
397,"

  ",170
393,"/**
   * Any pending extra updates that have been scheduled by persisters.
   *
   * @var array
   */",172
397,"
  ",176
360,private,177
397," ",177
317,$extraUpdates,177
397," ",177
0,=,0
397," ",177
377,array,177
0,(,0
0,),0
0,;,0
397,"

  ",177
393,"/**
   * A list of all pending entity deletions.
   *
   * @var array
   */",179
397,"
  ",183
360,private,184
397," ",184
317,$entityDeletions,184
397," ",184
0,=,0
397," ",184
377,array,184
0,(,0
0,),0
0,;,0
397,"

  ",184
393,"/**
   * All pending collection deletions.
   *
   * @var array
   */",186
397,"
  ",190
360,private,191
397," ",191
317,$collectionDeletions,191
397," ",191
0,=,0
397," ",191
377,array,191
0,(,0
0,),0
0,;,0
397,"

  ",191
393,"/**
   * All pending collection updates.
   *
   * @var array
   */",193
397,"
  ",197
360,private,198
397," ",198
317,$collectionUpdates,198
397," ",198
0,=,0
397," ",198
377,array,198
0,(,0
0,),0
0,;,0
397,"

  ",198
393,"/**
   * List of collections visited during changeset calculation on a commit-phase of a UnitOfWork.
   * At the end of the UnitOfWork all these collections will make new snapshots
   * of their data.
   *
   * @var array
   */",200
397,"
  ",206
360,private,207
397," ",207
317,$visitedCollections,207
397," ",207
0,=,0
397," ",207
377,array,207
0,(,0
0,),0
0,;,0
397,"

  ",207
393,"/**
   * The EntityManager that ""owns"" this UnitOfWork instance.
   *
   * @var EntityManagerInterface
   */",209
397,"
  ",213
360,private,214
397," ",214
317,$em,214
0,;,0
397,"

  ",214
393,"/**
   * The calculator used to calculate the order in which changes to
   * entities need to be written to the database.
   *
   * @var \Doctrine\ORM\Internal\CommitOrderCalculator
   */",216
397,"
  ",221
360,private,222
397," ",222
317,$commitOrderCalculator,222
0,;,0
397,"

  ",222
393,"/**
   * The entity persister instances used to persist entity instances.
   *
   * @var array
   */",224
397,"
  ",228
360,private,229
397," ",229
317,$persisters,229
397," ",229
0,=,0
397," ",229
377,array,229
0,(,0
0,),0
0,;,0
397,"

  ",229
393,"/**
   * The collection persister instances used to persist collections.
   *
   * @var array
   */",231
397,"
  ",235
360,private,236
397," ",236
317,$collectionPersisters,236
397," ",236
0,=,0
397," ",236
377,array,236
0,(,0
0,),0
0,;,0
397,"

  ",236
393,"/**
   * The EventManager used for dispatching events.
   *
   * @var \Doctrine\Common\EventManager
   */",238
397,"
  ",242
360,private,243
397," ",243
317,$evm,243
0,;,0
397,"

  ",243
393,"/**
   * The ListenersInvoker used for dispatching events.
   *
   * @var \Doctrine\ORM\Event\ListenersInvoker
   */",245
397,"
  ",249
360,private,250
397," ",250
317,$listenersInvoker,250
0,;,0
397,"

  ",250
393,"/**
   * The IdentifierFlattener used for manipulating identifiers
   *
   * @var \Doctrine\ORM\Utility\IdentifierFlattener
   */",252
397,"
  ",256
360,private,257
397," ",257
317,$identifierFlattener,257
0,;,0
397,"

  ",257
393,"/**
   * Orphaned entities that are scheduled for removal.
   *
   * @var array
   */",259
397,"
  ",263
360,private,264
397," ",264
317,$orphanRemovals,264
397," ",264
0,=,0
397," ",264
377,array,264
0,(,0
0,),0
0,;,0
397,"

  ",264
393,"/**
   * Read-Only objects are never evaluated
   *
   * @var array
   */",266
397,"
  ",270
360,private,271
397," ",271
317,$readOnlyObjects,271
397," ",271
0,=,0
397," ",271
377,array,271
0,(,0
0,),0
0,;,0
397,"

  ",271
393,"/**
   * Map of Entity Class-Names and corresponding IDs that should eager loaded when requested.
   *
   * @var array
   */",273
397,"
  ",277
360,private,278
397," ",278
317,$eagerLoadingEntities,278
397," ",278
0,=,0
397," ",278
377,array,278
0,(,0
0,),0
0,;,0
397,"

  ",278
393,"/**
   * @var boolean
   */",280
397,"
  ",282
361,protected,283
397," ",283
317,$hasCache,283
397," ",283
0,=,0
397," ",283
313,false,283
0,;,0
397,"

  ",283
393,"/**
   * Helper for handling completion of hydration
   *
   * @var HydrationCompleteHandler
   */",285
397,"
  ",289
360,private,290
397," ",290
317,$hydrationCompleteHandler,290
0,;,0
397,"

  ",290
393,"/**
   * @var ReflectionPropertiesGetter
   */",292
397,"
  ",294
360,private,295
397," ",295
317,$reflectionPropertiesGetter,295
0,;,0
397,"

  ",295
393,"/**
   * Initializes a new UnitOfWork instance, bound to the given EntityManager.
   *
   * @param EntityManagerInterface $em
   */",297
397,"
  ",301
362,public,302
397," ",302
347,function,302
397," ",302
313,__construct,302
0,(,0
313,EntityManagerInterface,302
397," ",302
317,$em,302
0,),0
397,"
  ",302
0,{,0
397,"
    ",303
317,$this,304
390,->,304
313,em,304
397,"                         ",304
0,=,0
397," ",304
317,$em,304
0,;,0
397,"
    ",304
317,$this,305
390,->,305
313,evm,305
397,"                        ",305
0,=,0
397," ",305
317,$em,305
390,->,305
313,getEventManager,305
0,(,0
0,),0
0,;,0
397,"
    ",305
317,$this,306
390,->,306
313,listenersInvoker,306
397,"           ",306
0,=,0
397," ",306
324,new,306
397," ",306
313,ListenersInvoker,306
0,(,0
317,$em,306
0,),0
0,;,0
397,"
    ",306
317,$this,307
390,->,307
313,hasCache,307
397,"                   ",307
0,=,0
397," ",307
317,$em,307
390,->,307
313,getConfiguration,307
0,(,0
0,),0
390,->,307
313,isSecondLevelCacheEnabled,307
0,(,0
0,),0
0,;,0
397,"
    ",307
317,$this,308
390,->,308
313,identifierFlattener,308
397,"        ",308
0,=,0
397," ",308
324,new,308
397," ",308
313,IdentifierFlattener,308
0,(,0
317,$this,308
0,",",0
397," ",308
317,$em,308
390,->,308
313,getMetadataFactory,308
0,(,0
0,),0
0,),0
0,;,0
397,"
    ",308
317,$this,309
390,->,309
313,hydrationCompleteHandler,309
397,"   ",309
0,=,0
397," ",309
324,new,309
397," ",309
313,HydrationCompleteHandler,309
0,(,0
317,$this,309
390,->,309
313,listenersInvoker,309
0,",",0
397," ",309
317,$em,309
0,),0
0,;,0
397,"
    ",309
317,$this,310
390,->,310
313,reflectionPropertiesGetter,310
397," ",310
0,=,0
397," ",310
324,new,310
397," ",310
313,ReflectionPropertiesGetter,310
0,(,0
324,new,310
397," ",310
313,RuntimeReflectionService,310
0,(,0
0,),0
0,),0
0,;,0
397,"
  ",310
0,},0
397,"

  ",311
393,"/**
   * Commits the UnitOfWork, executing all operations that have been postponed
   * up to this point. The state of all managed entities will be synchronized with
   * the database.
   *
   * The operations are executed in the following order:
   *
   * 1) All entity insertions
   * 2) All entity updates
   * 3) All collection deletions
   * 4) All collection updates
   * 5) All entity deletions
   *
   * @param null|object|array $entity
   *
   * @return void
   *
   * @throws \Exception
   */",313
397,"
  ",331
362,public,332
397," ",332
347,function,332
397," ",332
313,commit,332
0,(,0
317,$entity,332
397," ",332
0,=,0
397," ",332
313,null,332
0,),0
397,"
  ",332
0,{,0
397,"
    ",333
392,"// Raise preFlush",334
397,"
    ",334
326,if,335
397," ",335
0,(,0
317,$this,335
390,->,335
313,evm,335
390,->,335
313,hasListeners,335
0,(,0
313,Events,335
402,::,335
313,preFlush,335
0,),0
0,),0
397," ",335
0,{,0
397,"
      ",335
317,$this,336
390,->,336
313,evm,336
390,->,336
313,dispatchEvent,336
0,(,0
313,Events,336
402,::,336
313,preFlush,336
0,",",0
397," ",336
324,new,336
397," ",336
313,PreFlushEventArgs,336
0,(,0
317,$this,336
390,->,336
313,em,336
0,),0
0,),0
0,;,0
397,"
    ",336
0,},0
397,"

    ",337
392,"// Compute changes done since last commit.",339
397,"
    ",339
326,if,340
397," ",340
0,(,0
317,$entity,340
397," ",340
291,===,340
397," ",340
313,null,340
0,),0
397," ",340
0,{,0
397,"
      ",340
317,$this,341
390,->,341
313,computeChangeSets,341
0,(,0
0,),0
0,;,0
397,"
    ",341
0,},0
397," ",342
309,elseif,342
397," ",342
0,(,0
313,is_object,342
0,(,0
317,$entity,342
0,),0
0,),0
397," ",342
0,{,0
397,"
      ",342
317,$this,343
390,->,343
313,computeSingleEntityChangeSet,343
0,(,0
317,$entity,343
0,),0
0,;,0
397,"
    ",343
0,},0
397," ",344
309,elseif,344
397," ",344
0,(,0
313,is_array,344
0,(,0
317,$entity,344
0,),0
0,),0
397," ",344
0,{,0
397,"
      ",344
334,foreach,345
397," ",345
0,(,0
317,$entity,345
397," ",345
338,as,345
397," ",345
317,$object,345
0,),0
397," ",345
0,{,0
397,"
        ",345
317,$this,346
390,->,346
313,computeSingleEntityChangeSet,346
0,(,0
317,$object,346
0,),0
0,;,0
397,"
      ",346
0,},0
397,"
    ",347
0,},0
397,"

    ",348
326,if,350
397," ",350
0,(,0
397," ",350
0,!,0
397," ",350
0,(,0
317,$this,350
390,->,350
313,entityInsertions,350
397," ",350
285,||,350
397,"
      ",350
317,$this,351
390,->,351
313,entityDeletions,351
397," ",351
285,||,351
397,"
      ",351
317,$this,352
390,->,352
313,entityUpdates,352
397," ",352
285,||,352
397,"
      ",352
317,$this,353
390,->,353
313,collectionUpdates,353
397," ",353
285,||,353
397,"
      ",353
317,$this,354
390,->,354
313,collectionDeletions,354
397," ",354
285,||,354
397,"
      ",354
317,$this,355
390,->,355
313,orphanRemovals,355
0,),0
0,),0
397," ",355
0,{,0
397,"
      ",355
317,$this,356
390,->,356
313,dispatchOnFlushEvent,356
0,(,0
0,),0
0,;,0
397,"
      ",356
317,$this,357
390,->,357
313,dispatchPostFlushEvent,357
0,(,0
0,),0
0,;,0
397,"

      ",357
350,return,359
0,;,0
397," ",359
392,"// Nothing to do.",359
397,"
    ",359
0,},0
397,"

    ",360
326,if,362
397," ",362
0,(,0
317,$this,362
390,->,362
313,orphanRemovals,362
0,),0
397," ",362
0,{,0
397,"
      ",362
334,foreach,363
397," ",363
0,(,0
317,$this,363
390,->,363
313,orphanRemovals,363
397," ",363
338,as,363
397," ",363
317,$orphan,363
0,),0
397," ",363
0,{,0
397,"
        ",363
317,$this,364
390,->,364
313,remove,364
0,(,0
317,$orphan,364
0,),0
0,;,0
397,"
      ",364
0,},0
397,"
    ",365
0,},0
397,"

    ",366
317,$this,368
390,->,368
313,dispatchOnFlushEvent,368
0,(,0
0,),0
0,;,0
397,"

    ",368
392,"// Now we need a commit order to maintain referential integrity",370
397,"
    ",370
317,$commitOrder,371
397," ",371
0,=,0
397," ",371
317,$this,371
390,->,371
313,getCommitOrder,371
0,(,0
0,),0
0,;,0
397,"

    ",371
317,$conn,373
397," ",373
0,=,0
397," ",373
317,$this,373
390,->,373
313,em,373
390,->,373
313,getConnection,373
0,(,0
0,),0
0,;,0
397,"
    ",373
317,$conn,374
390,->,374
313,beginTransaction,374
0,(,0
0,),0
0,;,0
397,"

    ",374
351,try,376
397," ",376
0,{,0
397,"
      ",376
326,if,377
397," ",377
0,(,0
317,$this,377
390,->,377
313,entityInsertions,377
0,),0
397," ",377
0,{,0
397,"
        ",377
334,foreach,378
397," ",378
0,(,0
317,$commitOrder,378
397," ",378
338,as,378
397," ",378
317,$class,378
0,),0
397," ",378
0,{,0
397,"
          ",378
317,$this,379
390,->,379
313,executeInserts,379
0,(,0
317,$class,379
0,),0
0,;,0
397,"
        ",379
0,},0
397,"
      ",380
0,},0
397,"

      ",381
326,if,383
397," ",383
0,(,0
317,$this,383
390,->,383
313,entityUpdates,383
0,),0
397," ",383
0,{,0
397,"
        ",383
334,foreach,384
397," ",384
0,(,0
317,$commitOrder,384
397," ",384
338,as,384
397," ",384
317,$class,384
0,),0
397," ",384
0,{,0
397,"
          ",384
317,$this,385
390,->,385
313,executeUpdates,385
0,(,0
317,$class,385
0,),0
0,;,0
397,"
        ",385
0,},0
397,"
      ",386
0,},0
397,"

      ",387
392,"// Extra updates that were requested by persisters.",389
397,"
      ",389
326,if,390
397," ",390
0,(,0
317,$this,390
390,->,390
313,extraUpdates,390
0,),0
397," ",390
0,{,0
397,"
        ",390
317,$this,391
390,->,391
313,executeExtraUpdates,391
0,(,0
0,),0
0,;,0
397,"
      ",391
0,},0
397,"

      ",392
392,"// Collection deletions (deletions of complete collections)",394
397,"
      ",394
334,foreach,395
397," ",395
0,(,0
317,$this,395
390,->,395
313,collectionDeletions,395
397," ",395
338,as,395
397," ",395
317,$collectionToDelete,395
0,),0
397," ",395
0,{,0
397,"
        ",395
317,$this,396
390,->,396
313,getCollectionPersister,396
0,(,0
317,$collectionToDelete,396
390,->,396
313,getMapping,396
0,(,0
0,),0
0,),0
390,->,396
313,delete,396
0,(,0
317,$collectionToDelete,396
0,),0
0,;,0
397,"
      ",396
0,},0
397,"

      ",397
392,"// Collection updates (deleteRows, updateRows, insertRows)",399
397,"
      ",399
334,foreach,400
397," ",400
0,(,0
317,$this,400
390,->,400
313,collectionUpdates,400
397," ",400
338,as,400
397," ",400
317,$collectionToUpdate,400
0,),0
397," ",400
0,{,0
397,"
        ",400
317,$this,401
390,->,401
313,getCollectionPersister,401
0,(,0
317,$collectionToUpdate,401
390,->,401
313,getMapping,401
0,(,0
0,),0
0,),0
390,->,401
313,update,401
0,(,0
317,$collectionToUpdate,401
0,),0
0,;,0
397,"
      ",401
0,},0
397,"

      ",402
392,"// Entity deletions come last and need to be in reverse commit order",404
397,"
      ",404
326,if,405
397," ",405
0,(,0
317,$this,405
390,->,405
313,entityDeletions,405
0,),0
397," ",405
0,{,0
397,"
        ",405
332,for,406
397," ",406
0,(,0
317,$count,406
397," ",406
0,=,0
397," ",406
313,count,406
0,(,0
317,$commitOrder,406
0,),0
0,",",0
397," ",406
317,$i,406
397," ",406
0,=,0
397," ",406
317,$count,406
397," ",406
0,-,0
397," ",406
311,1,406
0,;,0
397," ",406
317,$i,406
397," ",406
295,>=,406
397," ",406
311,0,406
397," ",406
286,&&,406
397," ",406
317,$this,406
390,->,406
313,entityDeletions,406
0,;,0
397," ",406
389,--,406
317,$i,406
0,),0
397," ",406
0,{,0
397,"
          ",406
317,$this,407
390,->,407
313,executeDeletions,407
0,(,0
317,$commitOrder,407
0,[,0
317,$i,407
0,],0
0,),0
0,;,0
397,"
        ",407
0,},0
397,"
      ",408
0,},0
397,"

      ",409
317,$conn,411
390,->,411
313,commit,411
0,(,0
0,),0
0,;,0
397,"
    ",411
0,},0
397," ",412
352,catch,412
397," ",412
0,(,0
313,Exception,412
397," ",412
317,$e,412
0,),0
397," ",412
0,{,0
397,"
      ",412
317,$this,413
390,->,413
313,em,413
390,->,413
313,close,413
0,(,0
0,),0
0,;,0
397,"
      ",413
317,$conn,414
390,->,414
313,rollback,414
0,(,0
0,),0
0,;,0
397,"

      ",414
317,$this,416
390,->,416
313,afterTransactionRolledBack,416
0,(,0
0,),0
0,;,0
397,"

      ",416
258,throw,418
397," ",418
317,$e,418
0,;,0
397,"
    ",418
0,},0
397,"

    ",419
317,$this,421
390,->,421
313,afterTransactionComplete,421
0,(,0
0,),0
0,;,0
397,"

    ",421
392,"// Take new snapshots from visited collections",423
397,"
    ",423
334,foreach,424
397," ",424
0,(,0
317,$this,424
390,->,424
313,visitedCollections,424
397," ",424
338,as,424
397," ",424
317,$coll,424
0,),0
397," ",424
0,{,0
397,"
      ",424
317,$coll,425
390,->,425
313,takeSnapshot,425
0,(,0
0,),0
0,;,0
397,"
    ",425
0,},0
397,"

    ",426
317,$this,428
390,->,428
313,dispatchPostFlushEvent,428
0,(,0
0,),0
0,;,0
397,"

    ",428
392,"// Clear up",430
397,"
    ",430
317,$this,431
390,->,431
313,entityInsertions,431
397," ",431
0,=,0
397,"
    ",431
317,$this,432
390,->,432
313,entityUpdates,432
397," ",432
0,=,0
397,"
    ",432
317,$this,433
390,->,433
313,entityDeletions,433
397," ",433
0,=,0
397,"
    ",433
317,$this,434
390,->,434
313,extraUpdates,434
397," ",434
0,=,0
397,"
    ",434
317,$this,435
390,->,435
313,entityChangeSets,435
397," ",435
0,=,0
397,"
    ",435
317,$this,436
390,->,436
313,collectionUpdates,436
397," ",436
0,=,0
397,"
    ",436
317,$this,437
390,->,437
313,collectionDeletions,437
397," ",437
0,=,0
397,"
    ",437
317,$this,438
390,->,438
313,visitedCollections,438
397," ",438
0,=,0
397,"
    ",438
317,$this,439
390,->,439
313,scheduledForSynchronization,439
397," ",439
0,=,0
397,"
    ",439
317,$this,440
390,->,440
313,orphanRemovals,440
397," ",440
0,=,0
397," ",440
377,array,440
0,(,0
0,),0
0,;,0
397,"
  ",440
0,},0
397,"

  ",441
393,"/**
   * Computes the changesets of all entities scheduled for insertion.
   *
   * @return void
   */",443
397,"
  ",447
360,private,448
397," ",448
347,function,448
397," ",448
313,computeScheduleInsertsChangeSets,448
0,(,0
0,),0
397,"
  ",448
0,{,0
397,"
    ",449
334,foreach,450
397," ",450
0,(,0
317,$this,450
390,->,450
313,entityInsertions,450
397," ",450
338,as,450
397," ",450
317,$entity,450
0,),0
397," ",450
0,{,0
397,"
      ",450
317,$class,451
397," ",451
0,=,0
397," ",451
317,$this,451
390,->,451
313,em,451
390,->,451
313,getClassMetadata,451
0,(,0
313,get_class,451
0,(,0
317,$entity,451
0,),0
0,),0
0,;,0
397,"

      ",451
317,$this,453
390,->,453
313,computeChangeSet,453
0,(,0
317,$class,453
0,",",0
397," ",453
317,$entity,453
0,),0
0,;,0
397,"
    ",453
0,},0
397,"
  ",454
0,},0
397,"

  ",455
393,"/**
   * Only flushes the given entity according to a ruleset that keeps the UoW consistent.
   *
   * 1. All entities scheduled for insertion, (orphan) removals and changes in collections are processed as well!
   * 2. Read Only entities are skipped.
   * 3. Proxies are skipped.
   * 4. Only if entity is properly managed.
   *
   * @param object $entity
   *
   * @return void
   *
   * @throws \InvalidArgumentException
   */",457
397,"
  ",470
360,private,471
397," ",471
347,function,471
397," ",471
313,computeSingleEntityChangeSet,471
0,(,0
317,$entity,471
0,),0
397,"
  ",471
0,{,0
397,"
    ",472
317,$state,473
397," ",473
0,=,0
397," ",473
317,$this,473
390,->,473
313,getEntityState,473
0,(,0
317,$entity,473
0,),0
0,;,0
397,"

    ",473
326,if,475
397," ",475
0,(,0
317,$state,475
397," ",475
292,!==,475
397," ",475
313,self,475
402,::,475
313,STATE_MANAGED,475
397," ",475
286,&&,475
397," ",475
317,$state,475
397," ",475
292,!==,475
397," ",475
313,self,475
402,::,475
313,STATE_REMOVED,475
0,),0
397," ",475
0,{,0
397,"
      ",475
258,throw,476
397," ",476
324,new,476
397," ",476
314,"\InvalidArgumentException",476
0,(,0
320,"""Entity has to be managed or scheduled for removal for single computation """,476
397," ",476
0,.,0
397," ",476
313,self,476
402,::,476
313,objToStr,476
0,(,0
317,$entity,476
0,),0
0,),0
0,;,0
397,"
    ",476
0,},0
397,"

    ",477
317,$class,479
397," ",479
0,=,0
397," ",479
317,$this,479
390,->,479
313,em,479
390,->,479
313,getClassMetadata,479
0,(,0
313,get_class,479
0,(,0
317,$entity,479
0,),0
0,),0
0,;,0
397,"

    ",479
326,if,481
397," ",481
0,(,0
317,$state,481
397," ",481
291,===,481
397," ",481
313,self,481
402,::,481
313,STATE_MANAGED,481
397," ",481
286,&&,481
397," ",481
317,$class,481
390,->,481
313,isChangeTrackingDeferredImplicit,481
0,(,0
0,),0
0,),0
397," ",481
0,{,0
397,"
      ",481
317,$this,482
390,->,482
313,persist,482
0,(,0
317,$entity,482
0,),0
0,;,0
397,"
    ",482
0,},0
397,"

    ",483
392,"// Compute changes for INSERTed entities first. This must always happen even in this case.",485
397,"
    ",485
317,$this,486
390,->,486
313,computeScheduleInsertsChangeSets,486
0,(,0
0,),0
0,;,0
397,"

    ",486
326,if,488
397," ",488
0,(,0
317,$class,488
390,->,488
313,isReadOnly,488
0,),0
397," ",488
0,{,0
397,"
      ",488
350,return,489
0,;,0
397,"
    ",489
0,},0
397,"

    ",490
392,"// Ignore uninitialized proxy objects",492
397,"
    ",492
326,if,493
397," ",493
0,(,0
317,$entity,493
397," ",493
298,instanceof,493
397," ",493
313,Proxy,493
397," ",493
286,&&,493
397," ",493
0,!,0
397," ",493
317,$entity,493
390,->,493
313,__isInitialized__,493
0,),0
397," ",493
0,{,0
397,"
      ",493
350,return,494
0,;,0
397,"
    ",494
0,},0
397,"

    ",495
392,"// Only MANAGED entities that are NOT SCHEDULED FOR INSERTION OR DELETION are processed here.",497
397,"
    ",497
317,$oid,498
397," ",498
0,=,0
397," ",498
313,spl_object_hash,498
0,(,0
317,$entity,498
0,),0
0,;,0
397,"

    ",498
326,if,500
397," ",500
0,(,0
397," ",500
0,!,0
397," ",500
366,isset,500
0,(,0
317,$this,500
390,->,500
313,entityInsertions,500
0,[,0
317,$oid,500
0,],0
0,),0
397," ",500
286,&&,500
397," ",500
0,!,0
397," ",500
366,isset,500
0,(,0
317,$this,500
390,->,500
313,entityDeletions,500
0,[,0
317,$oid,500
0,],0
0,),0
397," ",500
286,&&,500
397," ",500
366,isset,500
0,(,0
317,$this,500
390,->,500
313,entityStates,500
0,[,0
317,$oid,500
0,],0
0,),0
0,),0
397," ",500
0,{,0
397,"
      ",500
317,$this,501
390,->,501
313,computeChangeSet,501
0,(,0
317,$class,501
0,",",0
397," ",501
317,$entity,501
0,),0
0,;,0
397,"
    ",501
0,},0
397,"
  ",502
0,},0
397,"

  ",503
393,"/**
   * Executes any extra updates that have been scheduled.
   */",505
397,"
  ",507
360,private,508
397," ",508
347,function,508
397," ",508
313,executeExtraUpdates,508
0,(,0
0,),0
397,"
  ",508
0,{,0
397,"
    ",509
334,foreach,510
397," ",510
0,(,0
317,$this,510
390,->,510
313,extraUpdates,510
397," ",510
338,as,510
397," ",510
317,$oid,510
397," ",510
269,=>,510
397," ",510
317,$update,510
0,),0
397," ",510
0,{,0
397,"
      ",510
376,list,511
397," ",511
0,(,0
317,$entity,511
0,",",0
397," ",511
317,$changeset,511
0,),0
397," ",511
0,=,0
397," ",511
317,$update,511
0,;,0
397,"

      ",511
317,$this,513
390,->,513
313,entityChangeSets,513
0,[,0
317,$oid,513
0,],0
397," ",513
0,=,0
397," ",513
317,$changeset,513
0,;,0
397,"
      ",513
317,$this,514
390,->,514
313,getEntityPersister,514
0,(,0
313,get_class,514
0,(,0
317,$entity,514
0,),0
0,),0
390,->,514
313,update,514
0,(,0
317,$entity,514
0,),0
0,;,0
397,"
    ",514
0,},0
397,"

    ",515
317,$this,517
390,->,517
313,extraUpdates,517
397," ",517
0,=,0
397," ",517
377,array,517
0,(,0
0,),0
0,;,0
397,"
  ",517
0,},0
397,"

  ",518
393,"/**
   * Gets the changeset for an entity.
   *
   * @param object $entity
   *
   * @return array
   */",520
397,"
  ",526
362,public,527
397," ",527
347,function,527
397," ",527
313,getEntityChangeSet,527
0,(,0
317,$entity,527
0,),0
397,"
  ",527
0,{,0
397,"
    ",528
317,$oid,529
397," ",529
0,=,0
397," ",529
313,spl_object_hash,529
0,(,0
317,$entity,529
0,),0
0,;,0
397,"

    ",529
326,if,531
397," ",531
0,(,0
366,isset,531
0,(,0
317,$this,531
390,->,531
313,entityChangeSets,531
0,[,0
317,$oid,531
0,],0
0,),0
0,),0
397," ",531
0,{,0
397,"
      ",531
350,return,532
397," ",532
317,$this,532
390,->,532
313,entityChangeSets,532
0,[,0
317,$oid,532
0,],0
0,;,0
397,"
    ",532
0,},0
397,"

    ",533
350,return,535
397," ",535
377,array,535
0,(,0
0,),0
0,;,0
397,"
  ",535
0,},0
397,"

  ",536
393,"/**
   * Computes the changes that happened to a single entity.
   *
   * Modifies/populates the following properties:
   *
   * {@link _originalEntityData}
   * If the entity is NEW or MANAGED but not yet fully persisted (only has an id)
   * then it was not fetched from the database and therefore we have no original
   * entity data yet. All of the current entity data is stored as the original entity data.
   *
   * {@link _entityChangeSets}
   * The changes detected on all properties of the entity are stored there.
   * A change is a tuple array where the first entry is the old value and the second
   * entry is the new value of the property. Changesets are used by persisters
   * to INSERT/UPDATE the persistent entity state.
   *
   * {@link _entityUpdates}
   * If the entity is already fully MANAGED (has been fetched from the database before)
   * and any changes to its properties are detected, then a reference to the entity is stored
   * there to mark it for an update.
   *
   * {@link _collectionDeletions}
   * If a PersistentCollection has been de-referenced in a fully MANAGED entity,
   * then this collection is marked for deletion.
   *
   * @ignore
   *
   * @internal Don't call from the outside.
   *
   * @param ClassMetadata $class The class descriptor of the entity.
   * @param object $entity The entity for which to compute the changes.
   *
   * @return void
   */",538
397,"
  ",571
362,public,572
397," ",572
347,function,572
397," ",572
313,computeChangeSet,572
0,(,0
313,ClassMetadata,572
397," ",572
317,$class,572
0,",",0
397," ",572
317,$entity,572
0,),0
397,"
  ",572
0,{,0
397,"
    ",573
317,$oid,574
397," ",574
0,=,0
397," ",574
313,spl_object_hash,574
0,(,0
317,$entity,574
0,),0
0,;,0
397,"

    ",574
326,if,576
397," ",576
0,(,0
366,isset,576
0,(,0
317,$this,576
390,->,576
313,readOnlyObjects,576
0,[,0
317,$oid,576
0,],0
0,),0
0,),0
397," ",576
0,{,0
397,"
      ",576
350,return,577
0,;,0
397,"
    ",577
0,},0
397,"

    ",578
326,if,580
397," ",580
0,(,0
397," ",580
0,!,0
397," ",580
317,$class,580
390,->,580
313,isInheritanceTypeNone,580
0,(,0
0,),0
0,),0
397," ",580
0,{,0
397,"
      ",580
317,$class,581
397," ",581
0,=,0
397," ",581
317,$this,581
390,->,581
313,em,581
390,->,581
313,getClassMetadata,581
0,(,0
313,get_class,581
0,(,0
317,$entity,581
0,),0
0,),0
0,;,0
397,"
    ",581
0,},0
397,"

    ",582
317,$invoke,584
397," ",584
0,=,0
397," ",584
317,$this,584
390,->,584
313,listenersInvoker,584
390,->,584
313,getSubscribedSystems,584
0,(,0
317,$class,584
0,",",0
397," ",584
313,Events,584
402,::,584
313,preFlush,584
0,),0
397," ",584
287,&,584
397," ",584
0,~,0
313,ListenersInvoker,584
402,::,584
313,INVOKE_MANAGER,584
0,;,0
397,"

    ",584
326,if,586
397," ",586
0,(,0
317,$invoke,586
397," ",586
292,!==,586
397," ",586
313,ListenersInvoker,586
402,::,586
313,INVOKE_NONE,586
0,),0
397," ",586
0,{,0
397,"
      ",586
317,$this,587
390,->,587
313,listenersInvoker,587
390,->,587
313,invoke,587
0,(,0
317,$class,587
0,",",0
397," ",587
313,Events,587
402,::,587
313,preFlush,587
0,",",0
397," ",587
317,$entity,587
0,",",0
397," ",587
324,new,587
397," ",587
313,PreFlushEventArgs,587
0,(,0
317,$this,587
390,->,587
313,em,587
0,),0
0,",",0
397," ",587
317,$invoke,587
0,),0
0,;,0
397,"
    ",587
0,},0
397,"

    ",588
317,$actualData,590
397," ",590
0,=,0
397," ",590
377,array,590
0,(,0
0,),0
0,;,0
397,"

    ",590
334,foreach,592
397," ",592
0,(,0
317,$class,592
390,->,592
313,reflFields,592
397," ",592
338,as,592
397," ",592
317,$name,592
397," ",592
269,=>,592
397," ",592
317,$refProp,592
0,),0
397," ",592
0,{,0
397,"
      ",592
317,$value,593
397," ",593
0,=,0
397," ",593
317,$refProp,593
390,->,593
313,getValue,593
0,(,0
317,$entity,593
0,),0
0,;,0
397,"

      ",593
326,if,595
397," ",595
0,(,0
317,$class,595
390,->,595
313,isCollectionValuedAssociation,595
0,(,0
317,$name,595
0,),0
397," ",595
286,&&,595
397," ",595
317,$value,595
397," ",595
292,!==,595
397," ",595
313,null,595
0,),0
397," ",595
0,{,0
397,"
        ",595
326,if,596
397," ",596
0,(,0
317,$value,596
397," ",596
298,instanceof,596
397," ",596
313,PersistentCollection,596
0,),0
397," ",596
0,{,0
397,"
          ",596
326,if,597
397," ",597
0,(,0
317,$value,597
390,->,597
313,getOwner,597
0,(,0
0,),0
397," ",597
291,===,597
397," ",597
317,$entity,597
0,),0
397," ",597
0,{,0
397,"
            ",597
345,continue,598
0,;,0
397,"
          ",598
0,},0
397,"

          ",599
317,$value,601
397," ",601
0,=,0
397," ",601
324,new,601
397," ",601
313,ArrayCollection,601
0,(,0
317,$value,601
390,->,601
313,getValues,601
0,(,0
0,),0
0,),0
0,;,0
397,"
        ",601
0,},0
397,"

        ",602
392,"// If $value is not a Collection then use an ArrayCollection.",604
397,"
        ",604
326,if,605
397," ",605
0,(,0
397," ",605
0,!,0
397," ",605
317,$value,605
397," ",605
298,instanceof,605
397," ",605
313,Collection,605
0,),0
397," ",605
0,{,0
397,"
          ",605
317,$value,606
397," ",606
0,=,0
397," ",606
324,new,606
397," ",606
313,ArrayCollection,606
0,(,0
317,$value,606
0,),0
0,;,0
397,"
        ",606
0,},0
397,"

        ",607
317,$assoc,609
397," ",609
0,=,0
397," ",609
317,$class,609
390,->,609
313,associationMappings,609
0,[,0
317,$name,609
0,],0
0,;,0
397,"

        ",609
392,"// Inject PersistentCollection",611
397,"
        ",611
317,$value,612
397," ",612
0,=,0
397," ",612
324,new,612
397," ",612
313,PersistentCollection,612
0,(,0
397,"
          ",612
317,$this,613
390,->,613
313,em,613
0,",",0
397," ",613
317,$this,613
390,->,613
313,em,613
390,->,613
313,getClassMetadata,613
0,(,0
317,$assoc,613
0,[,0
320,'targetEntity',613
0,],0
0,),0
0,",",0
397," ",613
317,$value,613
397,"
        ",613
0,),0
0,;,0
397,"
        ",614
317,$value,615
390,->,615
313,setOwner,615
0,(,0
317,$entity,615
0,",",0
397," ",615
317,$assoc,615
0,),0
0,;,0
397,"
        ",615
317,$value,616
390,->,616
313,setDirty,616
0,(,0
397," ",616
0,!,0
397," ",616
317,$value,616
390,->,616
313,isEmpty,616
0,(,0
0,),0
0,),0
0,;,0
397,"

        ",616
317,$class,618
390,->,618
313,reflFields,618
0,[,0
317,$name,618
0,],0
390,->,618
313,setValue,618
0,(,0
317,$entity,618
0,",",0
397," ",618
317,$value,618
0,),0
0,;,0
397,"

        ",618
317,$actualData,620
0,[,0
317,$name,620
0,],0
397," ",620
0,=,0
397," ",620
317,$value,620
0,;,0
397,"

        ",620
345,continue,622
0,;,0
397,"
      ",622
0,},0
397,"

      ",623
326,if,625
397," ",625
0,(,0
0,(,0
397," ",625
0,!,0
397," ",625
317,$class,625
390,->,625
313,isIdentifier,625
0,(,0
317,$name,625
0,),0
397," ",625
285,||,625
397," ",625
0,!,0
397," ",625
317,$class,625
390,->,625
313,isIdGeneratorIdentity,625
0,(,0
0,),0
0,),0
397," ",625
286,&&,625
397," ",625
0,(,0
317,$name,625
397," ",625
292,!==,625
397," ",625
317,$class,625
390,->,625
313,versionField,625
0,),0
0,),0
397," ",625
0,{,0
397,"
        ",625
317,$actualData,626
0,[,0
317,$name,626
0,],0
397," ",626
0,=,0
397," ",626
317,$value,626
0,;,0
397,"
      ",626
0,},0
397,"
    ",627
0,},0
397,"

    ",628
326,if,630
397," ",630
0,(,0
397," ",630
0,!,0
397," ",630
366,isset,630
0,(,0
317,$this,630
390,->,630
313,originalEntityData,630
0,[,0
317,$oid,630
0,],0
0,),0
0,),0
397," ",630
0,{,0
397,"
      ",630
392,"// Entity is either NEW or MANAGED but not yet fully persisted (only has an id).",631
397,"
      ",631
392,"// These result in an INSERT.",632
397,"
      ",632
317,$this,633
390,->,633
313,originalEntityData,633
0,[,0
317,$oid,633
0,],0
397," ",633
0,=,0
397," ",633
317,$actualData,633
0,;,0
397,"
      ",633
317,$changeSet,634
397," ",634
0,=,0
397," ",634
377,array,634
0,(,0
0,),0
0,;,0
397,"

      ",634
334,foreach,636
397," ",636
0,(,0
317,$actualData,636
397," ",636
338,as,636
397," ",636
317,$propName,636
397," ",636
269,=>,636
397," ",636
317,$actualValue,636
0,),0
397," ",636
0,{,0
397,"
        ",636
326,if,637
397," ",637
0,(,0
397," ",637
0,!,0
397," ",637
366,isset,637
0,(,0
317,$class,637
390,->,637
313,associationMappings,637
0,[,0
317,$propName,637
0,],0
0,),0
0,),0
397," ",637
0,{,0
397,"
          ",637
317,$changeSet,638
0,[,0
317,$propName,638
0,],0
397," ",638
0,=,0
397," ",638
377,array,638
0,(,0
313,null,638
0,",",0
397," ",638
317,$actualValue,638
0,),0
0,;,0
397,"

          ",638
345,continue,640
0,;,0
397,"
        ",640
0,},0
397,"

        ",641
317,$assoc,643
397," ",643
0,=,0
397," ",643
317,$class,643
390,->,643
313,associationMappings,643
0,[,0
317,$propName,643
0,],0
0,;,0
397,"

        ",643
326,if,645
397," ",645
0,(,0
317,$assoc,645
0,[,0
320,'isOwningSide',645
0,],0
397," ",645
286,&&,645
397," ",645
317,$assoc,645
0,[,0
320,'type',645
0,],0
397," ",645
287,&,645
397," ",645
313,ClassMetadata,645
402,::,645
313,TO_ONE,645
0,),0
397," ",645
0,{,0
397,"
          ",645
317,$changeSet,646
0,[,0
317,$propName,646
0,],0
397," ",646
0,=,0
397," ",646
377,array,646
0,(,0
313,null,646
0,",",0
397," ",646
317,$actualValue,646
0,),0
0,;,0
397,"
        ",646
0,},0
397,"
      ",647
0,},0
397,"

      ",648
317,$this,650
390,->,650
313,entityChangeSets,650
0,[,0
317,$oid,650
0,],0
397," ",650
0,=,0
397," ",650
317,$changeSet,650
0,;,0
397,"
    ",650
0,},0
397," ",651
310,else,651
397," ",651
0,{,0
397,"
      ",651
392,"// Entity is ""fully"" MANAGED: it was already fully persisted before",652
397,"
      ",652
392,"// and we have a copy of the original data",653
397,"
      ",653
317,$originalData,654
397,"           ",654
0,=,0
397," ",654
317,$this,654
390,->,654
313,originalEntityData,654
0,[,0
317,$oid,654
0,],0
0,;,0
397,"
      ",654
317,$isChangeTrackingNotify,655
397," ",655
0,=,0
397," ",655
317,$class,655
390,->,655
313,isChangeTrackingNotify,655
0,(,0
0,),0
0,;,0
397,"
      ",655
317,$changeSet,656
397,"              ",656
0,=,0
397," ",656
0,(,0
317,$isChangeTrackingNotify,656
397," ",656
286,&&,656
397," ",656
366,isset,656
0,(,0
317,$this,656
390,->,656
313,entityChangeSets,656
0,[,0
317,$oid,656
0,],0
0,),0
0,),0
397,"
        ",656
0,?,0
397," ",657
317,$this,657
390,->,657
313,entityChangeSets,657
0,[,0
317,$oid,657
0,],0
397,"
        ",657
0,:,0
397," ",658
377,array,658
0,(,0
0,),0
0,;,0
397,"

      ",658
334,foreach,660
397," ",660
0,(,0
317,$actualData,660
397," ",660
338,as,660
397," ",660
317,$propName,660
397," ",660
269,=>,660
397," ",660
317,$actualValue,660
0,),0
397," ",660
0,{,0
397,"
        ",660
392,"// skip field, its a partially omitted one!",661
397,"
        ",661
326,if,662
397," ",662
0,(,0
397," ",662
0,!,0
397," ",662
0,(,0
366,isset,662
0,(,0
317,$originalData,662
0,[,0
317,$propName,662
0,],0
0,),0
397," ",662
285,||,662
397," ",662
313,array_key_exists,662
0,(,0
317,$propName,662
0,",",0
397," ",662
317,$originalData,662
0,),0
0,),0
0,),0
397," ",662
0,{,0
397,"
          ",662
345,continue,663
0,;,0
397,"
        ",663
0,},0
397,"

        ",664
317,$orgValue,666
397," ",666
0,=,0
397," ",666
317,$originalData,666
0,[,0
317,$propName,666
0,],0
0,;,0
397,"

        ",666
392,"// skip if value haven't changed",668
397,"
        ",668
326,if,669
397," ",669
0,(,0
317,$orgValue,669
397," ",669
291,===,669
397," ",669
317,$actualValue,669
0,),0
397," ",669
0,{,0
397,"
          ",669
345,continue,670
0,;,0
397,"
        ",670
0,},0
397,"

        ",671
392,"// if regular field",673
397,"
        ",673
326,if,674
397," ",674
0,(,0
397," ",674
0,!,0
397," ",674
366,isset,674
0,(,0
317,$class,674
390,->,674
313,associationMappings,674
0,[,0
317,$propName,674
0,],0
0,),0
0,),0
397," ",674
0,{,0
397,"
          ",674
326,if,675
397," ",675
0,(,0
317,$isChangeTrackingNotify,675
0,),0
397," ",675
0,{,0
397,"
            ",675
345,continue,676
0,;,0
397,"
          ",676
0,},0
397,"

          ",677
317,$changeSet,679
0,[,0
317,$propName,679
0,],0
397," ",679
0,=,0
397," ",679
377,array,679
0,(,0
317,$orgValue,679
0,",",0
397," ",679
317,$actualValue,679
0,),0
0,;,0
397,"

          ",679
345,continue,681
0,;,0
397,"
        ",681
0,},0
397,"

        ",682
317,$assoc,684
397," ",684
0,=,0
397," ",684
317,$class,684
390,->,684
313,associationMappings,684
0,[,0
317,$propName,684
0,],0
0,;,0
397,"

        ",684
392,"// Persistent collection was exchanged with the ""originally""",686
397,"
        ",686
392,"// created one. This can only mean it was cloned and replaced",687
397,"
        ",687
392,"// on another entity.",688
397,"
        ",688
326,if,689
397," ",689
0,(,0
317,$actualValue,689
397," ",689
298,instanceof,689
397," ",689
313,PersistentCollection,689
0,),0
397," ",689
0,{,0
397,"
          ",689
317,$owner,690
397," ",690
0,=,0
397," ",690
317,$actualValue,690
390,->,690
313,getOwner,690
0,(,0
0,),0
0,;,0
397,"
          ",690
326,if,691
397," ",691
0,(,0
317,$owner,691
397," ",691
291,===,691
397," ",691
313,null,691
0,),0
397," ",691
0,{,0
397," ",691
392,"// cloned",691
397,"
            ",691
317,$actualValue,692
390,->,692
313,setOwner,692
0,(,0
317,$entity,692
0,",",0
397," ",692
317,$assoc,692
0,),0
0,;,0
397,"
          ",692
0,},0
397," ",693
310,else,693
397," ",693
326,if,693
397," ",693
0,(,0
317,$owner,693
397," ",693
292,!==,693
397," ",693
317,$entity,693
0,),0
397," ",693
0,{,0
397," ",693
392,"// no clone, we have to fix",693
397,"
            ",693
326,if,694
397," ",694
0,(,0
0,!,0
317,$actualValue,694
390,->,694
313,isInitialized,694
0,(,0
0,),0
0,),0
397," ",694
0,{,0
397,"
              ",694
317,$actualValue,695
390,->,695
313,initialize,695
0,(,0
0,),0
0,;,0
397," ",695
392,"// we have to do this otherwise the cols share state",695
397,"
            ",695
0,},0
397,"
            ",696
317,$newValue,697
397," ",697
0,=,0
397," ",697
307,clone,697
397," ",697
317,$actualValue,697
0,;,0
397,"
            ",697
317,$newValue,698
390,->,698
313,setOwner,698
0,(,0
317,$entity,698
0,",",0
397," ",698
317,$assoc,698
0,),0
0,;,0
397,"
            ",698
317,$class,699
390,->,699
313,reflFields,699
0,[,0
317,$propName,699
0,],0
390,->,699
313,setValue,699
0,(,0
317,$entity,699
0,",",0
397," ",699
317,$newValue,699
0,),0
0,;,0
397,"
          ",699
0,},0
397,"
        ",700
0,},0
397,"

        ",701
326,if,703
397," ",703
0,(,0
317,$orgValue,703
397," ",703
298,instanceof,703
397," ",703
313,PersistentCollection,703
0,),0
397," ",703
0,{,0
397,"
          ",703
392,"// A PersistentCollection was de-referenced, so delete it.",704
397,"
          ",704
317,$coid,705
397," ",705
0,=,0
397," ",705
313,spl_object_hash,705
0,(,0
317,$orgValue,705
0,),0
0,;,0
397,"

          ",705
326,if,707
397," ",707
0,(,0
366,isset,707
0,(,0
317,$this,707
390,->,707
313,collectionDeletions,707
0,[,0
317,$coid,707
0,],0
0,),0
0,),0
397," ",707
0,{,0
397,"
            ",707
345,continue,708
0,;,0
397,"
          ",708
0,},0
397,"

          ",709
317,$this,711
390,->,711
313,collectionDeletions,711
0,[,0
317,$coid,711
0,],0
397," ",711
0,=,0
397," ",711
317,$orgValue,711
0,;,0
397,"
          ",711
317,$changeSet,712
0,[,0
317,$propName,712
0,],0
397," ",712
0,=,0
397," ",712
317,$orgValue,712
0,;,0
397," ",712
392,"// Signal changeset, to-many assocs will be ignored.",712
397,"

          ",712
345,continue,714
0,;,0
397,"
        ",714
0,},0
397,"

        ",715
326,if,717
397," ",717
0,(,0
317,$assoc,717
0,[,0
320,'type',717
0,],0
397," ",717
287,&,717
397," ",717
313,ClassMetadata,717
402,::,717
313,TO_ONE,717
0,),0
397," ",717
0,{,0
397,"
          ",717
326,if,718
397," ",718
0,(,0
317,$assoc,718
0,[,0
320,'isOwningSide',718
0,],0
0,),0
397," ",718
0,{,0
397,"
            ",718
317,$changeSet,719
0,[,0
317,$propName,719
0,],0
397," ",719
0,=,0
397," ",719
377,array,719
0,(,0
317,$orgValue,719
0,",",0
397," ",719
317,$actualValue,719
0,),0
0,;,0
397,"
          ",719
0,},0
397,"

          ",720
326,if,722
397," ",722
0,(,0
317,$orgValue,722
397," ",722
292,!==,722
397," ",722
313,null,722
397," ",722
286,&&,722
397," ",722
317,$assoc,722
0,[,0
320,'orphanRemoval',722
0,],0
0,),0
397," ",722
0,{,0
397,"
            ",722
317,$this,723
390,->,723
313,scheduleOrphanRemoval,723
0,(,0
317,$orgValue,723
0,),0
0,;,0
397,"
          ",723
0,},0
397,"
        ",724
0,},0
397,"
      ",725
0,},0
397,"

      ",726
326,if,728
397," ",728
0,(,0
317,$changeSet,728
0,),0
397," ",728
0,{,0
397,"
        ",728
317,$this,729
390,->,729
313,entityChangeSets,729
0,[,0
317,$oid,729
0,],0
397,"   ",729
0,=,0
397," ",729
317,$changeSet,729
0,;,0
397,"
        ",729
317,$this,730
390,->,730
313,originalEntityData,730
0,[,0
317,$oid,730
0,],0
397," ",730
0,=,0
397," ",730
317,$actualData,730
0,;,0
397,"
        ",730
317,$this,731
390,->,731
313,entityUpdates,731
0,[,0
317,$oid,731
0,],0
397,"      ",731
0,=,0
397," ",731
317,$entity,731
0,;,0
397,"
      ",731
0,},0
397,"
    ",732
0,},0
397,"

    ",733
392,"// Look for changes in associations of the entity",735
397,"
    ",735
334,foreach,736
397," ",736
0,(,0
317,$class,736
390,->,736
313,associationMappings,736
397," ",736
338,as,736
397," ",736
317,$field,736
397," ",736
269,=>,736
397," ",736
317,$assoc,736
0,),0
397," ",736
0,{,0
397,"

      ",736
326,if,738
397," ",738
0,(,0
0,(,0
317,$val,738
397," ",738
0,=,0
397," ",738
317,$class,738
390,->,738
313,reflFields,738
0,[,0
317,$field,738
0,],0
390,->,738
313,getValue,738
0,(,0
317,$entity,738
0,),0
0,),0
397," ",738
291,===,738
397," ",738
313,null,738
0,),0
397," ",738
0,{,0
397,"
        ",738
345,continue,739
0,;,0
397,"
      ",739
0,},0
397,"

      ",740
317,$this,742
390,->,742
313,computeAssociationChanges,742
0,(,0
317,$assoc,742
0,",",0
397," ",742
317,$val,742
0,),0
0,;,0
397,"

      ",742
326,if,744
397," ",744
0,(,0
397," ",744
0,!,0
397," ",744
366,isset,744
0,(,0
317,$this,744
390,->,744
313,entityChangeSets,744
0,[,0
317,$oid,744
0,],0
0,),0
397," ",744
286,&&,744
397,"
        ",744
317,$assoc,745
0,[,0
320,'isOwningSide',745
0,],0
397," ",745
286,&&,745
397,"
        ",745
317,$assoc,746
0,[,0
320,'type',746
0,],0
397," ",746
289,==,746
397," ",746
313,ClassMetadata,746
402,::,746
313,MANY_TO_MANY,746
397," ",746
286,&&,746
397,"
        ",746
317,$val,747
397," ",747
298,instanceof,747
397," ",747
313,PersistentCollection,747
397," ",747
286,&&,747
397,"
        ",747
317,$val,748
390,->,748
313,isDirty,748
0,(,0
0,),0
0,),0
397," ",748
0,{,0
397,"

        ",748
317,$this,750
390,->,750
313,entityChangeSets,750
0,[,0
317,$oid,750
0,],0
397,"   ",750
0,=,0
397," ",750
377,array,750
0,(,0
0,),0
0,;,0
397,"
        ",750
317,$this,751
390,->,751
313,originalEntityData,751
0,[,0
317,$oid,751
0,],0
397," ",751
0,=,0
397," ",751
317,$actualData,751
0,;,0
397,"
        ",751
317,$this,752
390,->,752
313,entityUpdates,752
0,[,0
317,$oid,752
0,],0
397,"      ",752
0,=,0
397," ",752
317,$entity,752
0,;,0
397,"
      ",752
0,},0
397,"
    ",753
0,},0
397,"
  ",754
0,},0
397,"

  ",755
393,"/**
   * Computes all the changes that have been done to entities and collections
   * since the last commit and stores these changes in the _entityChangeSet map
   * temporarily for access by the persisters, until the UoW commit is finished.
   *
   * @return void
   */",757
397,"
  ",763
362,public,764
397," ",764
347,function,764
397," ",764
313,computeChangeSets,764
0,(,0
0,),0
397,"
  ",764
0,{,0
397,"
    ",765
392,"// Compute changes for INSERTed entities first. This must always happen.",766
397,"
    ",766
317,$this,767
390,->,767
313,computeScheduleInsertsChangeSets,767
0,(,0
0,),0
0,;,0
397,"

    ",767
392,"// Compute changes for other MANAGED entities. Change tracking policies take effect here.",769
397,"
    ",769
334,foreach,770
397," ",770
0,(,0
317,$this,770
390,->,770
313,identityMap,770
397," ",770
338,as,770
397," ",770
317,$className,770
397," ",770
269,=>,770
397," ",770
317,$entities,770
0,),0
397," ",770
0,{,0
397,"
      ",770
317,$class,771
397," ",771
0,=,0
397," ",771
317,$this,771
390,->,771
313,em,771
390,->,771
313,getClassMetadata,771
0,(,0
317,$className,771
0,),0
0,;,0
397,"

      ",771
392,"// Skip class if instances are read-only",773
397,"
      ",773
326,if,774
397," ",774
0,(,0
317,$class,774
390,->,774
313,isReadOnly,774
0,),0
397," ",774
0,{,0
397,"
        ",774
345,continue,775
0,;,0
397,"
      ",775
0,},0
397,"

      ",776
392,"// If change tracking is explicit or happens through notification, then only compute",778
397,"
      ",778
392,"// changes on entities of that type that are explicitly marked for synchronization.",779
397,"
      ",779
339,switch,780
397," ",780
0,(,0
313,true,780
0,),0
397," ",780
0,{,0
397,"
        ",780
341,case,781
397," ",781
0,(,0
317,$class,781
390,->,781
313,isChangeTrackingDeferredImplicit,781
0,(,0
0,),0
0,),0
0,:,0
397,"
          ",781
317,$entitiesToProcess,782
397," ",782
0,=,0
397," ",782
317,$entities,782
0,;,0
397,"
          ",782
344,break,783
0,;,0
397,"

        ",783
341,case,785
397," ",785
0,(,0
366,isset,785
0,(,0
317,$this,785
390,->,785
313,scheduledForSynchronization,785
0,[,0
317,$className,785
0,],0
0,),0
0,),0
0,:,0
397,"
          ",785
317,$entitiesToProcess,786
397," ",786
0,=,0
397," ",786
317,$this,786
390,->,786
313,scheduledForSynchronization,786
0,[,0
317,$className,786
0,],0
0,;,0
397,"
          ",786
344,break,787
0,;,0
397,"

        ",787
342,default,789
0,:,0
397,"
          ",789
317,$entitiesToProcess,790
397," ",790
0,=,0
397," ",790
377,array,790
0,(,0
0,),0
0,;,0
397,"

      ",790
0,},0
397,"

      ",792
334,foreach,794
397," ",794
0,(,0
317,$entitiesToProcess,794
397," ",794
338,as,794
397," ",794
317,$entity,794
0,),0
397," ",794
0,{,0
397,"
        ",794
392,"// Ignore uninitialized proxy objects",795
397,"
        ",795
326,if,796
397," ",796
0,(,0
317,$entity,796
397," ",796
298,instanceof,796
397," ",796
313,Proxy,796
397," ",796
286,&&,796
397," ",796
0,!,0
397," ",796
317,$entity,796
390,->,796
313,__isInitialized__,796
0,),0
397," ",796
0,{,0
397,"
          ",796
345,continue,797
0,;,0
397,"
        ",797
0,},0
397,"

        ",798
392,"// Only MANAGED entities that are NOT SCHEDULED FOR INSERTION OR DELETION are processed here.",800
397,"
        ",800
317,$oid,801
397," ",801
0,=,0
397," ",801
313,spl_object_hash,801
0,(,0
317,$entity,801
0,),0
0,;,0
397,"

        ",801
326,if,803
397," ",803
0,(,0
397," ",803
0,!,0
397," ",803
366,isset,803
0,(,0
317,$this,803
390,->,803
313,entityInsertions,803
0,[,0
317,$oid,803
0,],0
0,),0
397," ",803
286,&&,803
397,"  ",803
0,!,0
397," ",803
366,isset,803
0,(,0
317,$this,803
390,->,803
313,entityDeletions,803
0,[,0
317,$oid,803
0,],0
0,),0
397," ",803
286,&&,803
397," ",803
366,isset,803
0,(,0
317,$this,803
390,->,803
313,entityStates,803
0,[,0
317,$oid,803
0,],0
0,),0
0,),0
397," ",803
0,{,0
397,"
          ",803
317,$this,804
390,->,804
313,computeChangeSet,804
0,(,0
317,$class,804
0,",",0
397," ",804
317,$entity,804
0,),0
0,;,0
397,"
        ",804
0,},0
397,"
      ",805
0,},0
397,"
    ",806
0,},0
397,"
  ",807
0,},0
397,"

  ",808
393,"/**
   * Computes the changes of an association.
   *
   * @param array $assoc  The association mapping.
   * @param mixed $value  The value of the association.
   *
   * @throws ORMInvalidArgumentException
   * @throws ORMException
   *
   * @return void
   */",810
397,"
  ",820
360,private,821
397," ",821
347,function,821
397," ",821
313,computeAssociationChanges,821
0,(,0
317,$assoc,821
0,",",0
397," ",821
317,$value,821
0,),0
397,"
  ",821
0,{,0
397,"
    ",822
326,if,823
397," ",823
0,(,0
317,$value,823
397," ",823
298,instanceof,823
397," ",823
313,Proxy,823
397," ",823
286,&&,823
397," ",823
0,!,0
397," ",823
317,$value,823
390,->,823
313,__isInitialized__,823
0,),0
397," ",823
0,{,0
397,"
      ",823
350,return,824
0,;,0
397,"
    ",824
0,},0
397,"

    ",825
326,if,827
397," ",827
0,(,0
317,$value,827
397," ",827
298,instanceof,827
397," ",827
313,PersistentCollection,827
397," ",827
286,&&,827
397," ",827
317,$value,827
390,->,827
313,isDirty,827
0,(,0
0,),0
0,),0
397," ",827
0,{,0
397,"
      ",827
317,$coid,828
397," ",828
0,=,0
397," ",828
313,spl_object_hash,828
0,(,0
317,$value,828
0,),0
0,;,0
397,"

      ",828
326,if,830
397," ",830
0,(,0
317,$assoc,830
0,[,0
320,'isOwningSide',830
0,],0
0,),0
397," ",830
0,{,0
397,"
        ",830
317,$this,831
390,->,831
313,collectionUpdates,831
0,[,0
317,$coid,831
0,],0
397," ",831
0,=,0
397," ",831
317,$value,831
0,;,0
397,"
      ",831
0,},0
397,"

      ",832
317,$this,834
390,->,834
313,visitedCollections,834
0,[,0
317,$coid,834
0,],0
397," ",834
0,=,0
397," ",834
317,$value,834
0,;,0
397,"
    ",834
0,},0
397,"

    ",835
392,"// Look through the entities, and in any of their associations,",837
397,"
    ",837
392,"// for transient (new) entities, recursively. (""Persistence by reachability"")",838
397,"
    ",838
392,"// Unwrap. Uninitialized collections will simply be empty.",839
397,"
    ",839
317,$unwrappedValue,840
397," ",840
0,=,0
397," ",840
0,(,0
317,$assoc,840
0,[,0
320,'type',840
0,],0
397," ",840
287,&,840
397," ",840
313,ClassMetadata,840
402,::,840
313,TO_ONE,840
0,),0
397," ",840
0,?,0
397," ",840
377,array,840
0,(,0
317,$value,840
0,),0
397," ",840
0,:,0
397," ",840
317,$value,840
390,->,840
313,unwrap,840
0,(,0
0,),0
0,;,0
397,"
    ",840
317,$targetClass,841
397,"    ",841
0,=,0
397," ",841
317,$this,841
390,->,841
313,em,841
390,->,841
313,getClassMetadata,841
0,(,0
317,$assoc,841
0,[,0
320,'targetEntity',841
0,],0
0,),0
0,;,0
397,"

    ",841
334,foreach,843
397," ",843
0,(,0
317,$unwrappedValue,843
397," ",843
338,as,843
397," ",843
317,$key,843
397," ",843
269,=>,843
397," ",843
317,$entry,843
0,),0
397," ",843
0,{,0
397,"
      ",843
326,if,844
397," ",844
0,(,0
0,!,0
397," ",844
0,(,0
317,$entry,844
397," ",844
298,instanceof,844
397," ",844
317,$targetClass,844
390,->,844
313,name,844
0,),0
0,),0
397," ",844
0,{,0
397,"
        ",844
258,throw,845
397," ",845
313,ORMInvalidArgumentException,845
402,::,845
313,invalidAssociation,845
0,(,0
317,$targetClass,845
0,",",0
397," ",845
317,$assoc,845
0,",",0
397," ",845
317,$entry,845
0,),0
0,;,0
397,"
      ",845
0,},0
397,"

      ",846
317,$state,848
397," ",848
0,=,0
397," ",848
317,$this,848
390,->,848
313,getEntityState,848
0,(,0
317,$entry,848
0,",",0
397," ",848
313,self,848
402,::,848
313,STATE_NEW,848
0,),0
0,;,0
397,"

      ",848
326,if,850
397," ",850
0,(,0
397," ",850
0,!,0
397," ",850
0,(,0
317,$entry,850
397," ",850
298,instanceof,850
397," ",850
317,$assoc,850
0,[,0
320,'targetEntity',850
0,],0
0,),0
0,),0
397," ",850
0,{,0
397,"
        ",850
258,throw,851
397," ",851
313,ORMException,851
402,::,851
313,unexpectedAssociationValue,851
0,(,0
317,$assoc,851
0,[,0
320,'sourceEntity',851
0,],0
0,",",0
397," ",851
317,$assoc,851
0,[,0
320,'fieldName',851
0,],0
0,",",0
397," ",851
313,get_class,851
0,(,0
317,$entry,851
0,),0
0,",",0
397," ",851
317,$assoc,851
0,[,0
320,'targetEntity',851
0,],0
0,),0
0,;,0
397,"
      ",851
0,},0
397,"

      ",852
339,switch,854
397," ",854
0,(,0
317,$state,854
0,),0
397," ",854
0,{,0
397,"
        ",854
341,case,855
397," ",855
313,self,855
402,::,855
313,STATE_NEW,855
0,:,0
397,"
          ",855
326,if,856
397," ",856
0,(,0
397," ",856
0,!,0
397," ",856
317,$assoc,856
0,[,0
320,'isCascadePersist',856
0,],0
0,),0
397," ",856
0,{,0
397,"
            ",856
258,throw,857
397," ",857
313,ORMInvalidArgumentException,857
402,::,857
313,newEntityFoundThroughRelationship,857
0,(,0
317,$assoc,857
0,",",0
397," ",857
317,$entry,857
0,),0
0,;,0
397,"
          ",857
0,},0
397,"

          ",858
317,$this,860
390,->,860
313,persistNew,860
0,(,0
317,$targetClass,860
0,",",0
397," ",860
317,$entry,860
0,),0
0,;,0
397,"
          ",860
317,$this,861
390,->,861
313,computeChangeSet,861
0,(,0
317,$targetClass,861
0,",",0
397," ",861
317,$entry,861
0,),0
0,;,0
397,"
          ",861
344,break,862
0,;,0
397,"

        ",862
341,case,864
397," ",864
313,self,864
402,::,864
313,STATE_REMOVED,864
0,:,0
397,"
          ",864
392,"// Consume the $value as array (it's either an array or an ArrayAccess)",865
397,"
          ",865
392,"// and remove the element from Collection.",866
397,"
          ",866
326,if,867
397," ",867
0,(,0
317,$assoc,867
0,[,0
320,'type',867
0,],0
397," ",867
287,&,867
397," ",867
313,ClassMetadata,867
402,::,867
313,TO_MANY,867
0,),0
397," ",867
0,{,0
397,"
            ",867
365,unset,868
0,(,0
317,$value,868
0,[,0
317,$key,868
0,],0
0,),0
0,;,0
397,"
          ",868
0,},0
397,"
          ",869
344,break,870
0,;,0
397,"

        ",870
341,case,872
397," ",872
313,self,872
402,::,872
313,STATE_DETACHED,872
0,:,0
397,"
          ",872
392,"// Can actually not happen right now as we assume STATE_NEW,",873
397,"
          ",873
392,"// so the exception will be raised from the DBAL layer (constraint violation).",874
397,"
          ",874
258,throw,875
397," ",875
313,ORMInvalidArgumentException,875
402,::,875
313,detachedEntityFoundThroughRelationship,875
0,(,0
317,$assoc,875
0,",",0
397," ",875
317,$entry,875
0,),0
0,;,0
397,"
          ",875
344,break,876
0,;,0
397,"

        ",876
342,default,878
0,:,0
397,"
          ",878
392,"// MANAGED associated entities are already taken into account",879
397,"
          ",879
392,"// during changeset calculation anyway, since they are in the identity map.",880
397,"
      ",880
0,},0
397,"
    ",881
0,},0
397,"
  ",882
0,},0
397,"

  ",883
393,"/**
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   * @param object        $entity
   *
   * @return void
   */",885
397,"
  ",890
360,private,891
397," ",891
347,function,891
397," ",891
313,persistNew,891
0,(,0
317,$class,891
0,",",0
397," ",891
317,$entity,891
0,),0
397,"
  ",891
0,{,0
397,"
    ",892
317,$oid,893
397,"    ",893
0,=,0
397," ",893
313,spl_object_hash,893
0,(,0
317,$entity,893
0,),0
0,;,0
397,"
    ",893
317,$invoke,894
397," ",894
0,=,0
397," ",894
317,$this,894
390,->,894
313,listenersInvoker,894
390,->,894
313,getSubscribedSystems,894
0,(,0
317,$class,894
0,",",0
397," ",894
313,Events,894
402,::,894
313,prePersist,894
0,),0
0,;,0
397,"

    ",894
326,if,896
397," ",896
0,(,0
317,$invoke,896
397," ",896
292,!==,896
397," ",896
313,ListenersInvoker,896
402,::,896
313,INVOKE_NONE,896
0,),0
397," ",896
0,{,0
397,"
      ",896
317,$this,897
390,->,897
313,listenersInvoker,897
390,->,897
313,invoke,897
0,(,0
317,$class,897
0,",",0
397," ",897
313,Events,897
402,::,897
313,prePersist,897
0,",",0
397," ",897
317,$entity,897
0,",",0
397," ",897
324,new,897
397," ",897
313,LifecycleEventArgs,897
0,(,0
317,$entity,897
0,",",0
397," ",897
317,$this,897
390,->,897
313,em,897
0,),0
0,",",0
397," ",897
317,$invoke,897
0,),0
0,;,0
397,"
    ",897
0,},0
397,"

    ",898
317,$idGen,900
397," ",900
0,=,0
397," ",900
317,$class,900
390,->,900
313,idGenerator,900
0,;,0
397,"

    ",900
326,if,902
397," ",902
0,(,0
397," ",902
0,!,0
397," ",902
317,$idGen,902
390,->,902
313,isPostInsertGenerator,902
0,(,0
0,),0
0,),0
397," ",902
0,{,0
397,"
      ",902
317,$idValue,903
397," ",903
0,=,0
397," ",903
317,$idGen,903
390,->,903
313,generate,903
0,(,0
317,$this,903
390,->,903
313,em,903
0,",",0
397," ",903
317,$entity,903
0,),0
0,;,0
397,"

      ",903
326,if,905
397," ",905
0,(,0
397," ",905
0,!,0
397," ",905
317,$idGen,905
397," ",905
298,instanceof,905
397," ",905
314,"\Doctrine\ORM\Id\AssignedGenerator",905
0,),0
397," ",905
0,{,0
397,"
        ",905
317,$idValue,906
397," ",906
0,=,0
397," ",906
377,array,906
0,(,0
317,$class,906
390,->,906
313,identifier,906
0,[,0
311,0,906
0,],0
397," ",906
269,=>,906
397," ",906
317,$idValue,906
0,),0
0,;,0
397,"

        ",906
317,$class,908
390,->,908
313,setIdentifierValues,908
0,(,0
317,$entity,908
0,",",0
397," ",908
317,$idValue,908
0,),0
0,;,0
397,"
      ",908
0,},0
397,"

      ",909
317,$this,911
390,->,911
313,entityIdentifiers,911
0,[,0
317,$oid,911
0,],0
397," ",911
0,=,0
397," ",911
317,$idValue,911
0,;,0
397,"
    ",911
0,},0
397,"

    ",912
317,$this,914
390,->,914
313,entityStates,914
0,[,0
317,$oid,914
0,],0
397," ",914
0,=,0
397," ",914
313,self,914
402,::,914
313,STATE_MANAGED,914
0,;,0
397,"

    ",914
317,$this,916
390,->,916
313,scheduleForInsert,916
0,(,0
317,$entity,916
0,),0
0,;,0
397,"
  ",916
0,},0
397,"

  ",917
393,"/**
   * INTERNAL:
   * Computes the changeset of an individual entity, independently of the
   * computeChangeSets() routine that is used at the beginning of a UnitOfWork#commit().
   *
   * The passed entity must be a managed entity. If the entity already has a change set
   * because this method is invoked during a commit cycle then the change sets are added.
   * whereby changes detected in this method prevail.
   *
   * @ignore
   *
   * @param ClassMetadata $class  The class descriptor of the entity.
   * @param object        $entity The entity for which to (re)calculate the change set.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the passed entity is not MANAGED.
   */",919
397,"
  ",936
362,public,937
397," ",937
347,function,937
397," ",937
313,recomputeSingleEntityChangeSet,937
0,(,0
313,ClassMetadata,937
397," ",937
317,$class,937
0,",",0
397," ",937
317,$entity,937
0,),0
397,"
  ",937
0,{,0
397,"
    ",938
317,$oid,939
397," ",939
0,=,0
397," ",939
313,spl_object_hash,939
0,(,0
317,$entity,939
0,),0
0,;,0
397,"

    ",939
326,if,941
397," ",941
0,(,0
397," ",941
0,!,0
397," ",941
366,isset,941
0,(,0
317,$this,941
390,->,941
313,entityStates,941
0,[,0
317,$oid,941
0,],0
0,),0
397," ",941
285,||,941
397," ",941
317,$this,941
390,->,941
313,entityStates,941
0,[,0
317,$oid,941
0,],0
397," ",941
290,!=,941
397," ",941
313,self,941
402,::,941
313,STATE_MANAGED,941
0,),0
397," ",941
0,{,0
397,"
      ",941
258,throw,942
397," ",942
313,ORMInvalidArgumentException,942
402,::,942
313,entityNotManaged,942
0,(,0
317,$entity,942
0,),0
0,;,0
397,"
    ",942
0,},0
397,"

    ",943
392,"// skip if change tracking is ""NOTIFY""",945
397,"
    ",945
326,if,946
397," ",946
0,(,0
317,$class,946
390,->,946
313,isChangeTrackingNotify,946
0,(,0
0,),0
0,),0
397," ",946
0,{,0
397,"
      ",946
350,return,947
0,;,0
397,"
    ",947
0,},0
397,"

    ",948
326,if,950
397," ",950
0,(,0
397," ",950
0,!,0
397," ",950
317,$class,950
390,->,950
313,isInheritanceTypeNone,950
0,(,0
0,),0
0,),0
397," ",950
0,{,0
397,"
      ",950
317,$class,951
397," ",951
0,=,0
397," ",951
317,$this,951
390,->,951
313,em,951
390,->,951
313,getClassMetadata,951
0,(,0
313,get_class,951
0,(,0
317,$entity,951
0,),0
0,),0
0,;,0
397,"
    ",951
0,},0
397,"

    ",952
317,$actualData,954
397," ",954
0,=,0
397," ",954
377,array,954
0,(,0
0,),0
0,;,0
397,"

    ",954
334,foreach,956
397," ",956
0,(,0
317,$class,956
390,->,956
313,reflFields,956
397," ",956
338,as,956
397," ",956
317,$name,956
397," ",956
269,=>,956
397," ",956
317,$refProp,956
0,),0
397," ",956
0,{,0
397,"
      ",956
326,if,957
397," ",957
0,(,0
0,(,0
397," ",957
0,!,0
397," ",957
317,$class,957
390,->,957
313,isIdentifier,957
0,(,0
317,$name,957
0,),0
397," ",957
285,||,957
397," ",957
0,!,0
397," ",957
317,$class,957
390,->,957
313,isIdGeneratorIdentity,957
0,(,0
0,),0
0,),0
397,"
        ",957
286,&&,958
397," ",958
0,(,0
317,$name,958
397," ",958
292,!==,958
397," ",958
317,$class,958
390,->,958
313,versionField,958
0,),0
397,"
        ",958
286,&&,959
397," ",959
0,!,0
397," ",959
317,$class,959
390,->,959
313,isCollectionValuedAssociation,959
0,(,0
317,$name,959
0,),0
0,),0
397," ",959
0,{,0
397,"
        ",959
317,$actualData,960
0,[,0
317,$name,960
0,],0
397," ",960
0,=,0
397," ",960
317,$refProp,960
390,->,960
313,getValue,960
0,(,0
317,$entity,960
0,),0
0,;,0
397,"
      ",960
0,},0
397,"
    ",961
0,},0
397,"

    ",962
326,if,964
397," ",964
0,(,0
397," ",964
0,!,0
397," ",964
366,isset,964
0,(,0
317,$this,964
390,->,964
313,originalEntityData,964
0,[,0
317,$oid,964
0,],0
0,),0
0,),0
397," ",964
0,{,0
397,"
      ",964
258,throw,965
397," ",965
324,new,965
397," ",965
314,"\RuntimeException",965
0,(,0
320,"'Cannot call recomputeSingleEntityChangeSet before computeChangeSet on an entity.'",965
0,),0
0,;,0
397,"
    ",965
0,},0
397,"

    ",966
317,$originalData,968
397," ",968
0,=,0
397," ",968
317,$this,968
390,->,968
313,originalEntityData,968
0,[,0
317,$oid,968
0,],0
0,;,0
397,"
    ",968
317,$changeSet,969
397," ",969
0,=,0
397," ",969
377,array,969
0,(,0
0,),0
0,;,0
397,"

    ",969
334,foreach,971
397," ",971
0,(,0
317,$actualData,971
397," ",971
338,as,971
397," ",971
317,$propName,971
397," ",971
269,=>,971
397," ",971
317,$actualValue,971
0,),0
397," ",971
0,{,0
397,"
      ",971
317,$orgValue,972
397," ",972
0,=,0
397," ",972
366,isset,972
0,(,0
317,$originalData,972
0,[,0
317,$propName,972
0,],0
0,),0
397," ",972
0,?,0
397," ",972
317,$originalData,972
0,[,0
317,$propName,972
0,],0
397," ",972
0,:,0
397," ",972
313,null,972
0,;,0
397,"

      ",972
326,if,974
397," ",974
0,(,0
317,$orgValue,974
397," ",974
292,!==,974
397," ",974
317,$actualValue,974
0,),0
397," ",974
0,{,0
397,"
        ",974
317,$changeSet,975
0,[,0
317,$propName,975
0,],0
397," ",975
0,=,0
397," ",975
377,array,975
0,(,0
317,$orgValue,975
0,",",0
397," ",975
317,$actualValue,975
0,),0
0,;,0
397,"
      ",975
0,},0
397,"
    ",976
0,},0
397,"

    ",977
326,if,979
397," ",979
0,(,0
317,$changeSet,979
0,),0
397," ",979
0,{,0
397,"
      ",979
326,if,980
397," ",980
0,(,0
366,isset,980
0,(,0
317,$this,980
390,->,980
313,entityChangeSets,980
0,[,0
317,$oid,980
0,],0
0,),0
0,),0
397," ",980
0,{,0
397,"
        ",980
317,$this,981
390,->,981
313,entityChangeSets,981
0,[,0
317,$oid,981
0,],0
397," ",981
0,=,0
397," ",981
313,array_merge,981
0,(,0
317,$this,981
390,->,981
313,entityChangeSets,981
0,[,0
317,$oid,981
0,],0
0,",",0
397," ",981
317,$changeSet,981
0,),0
0,;,0
397,"
      ",981
0,},0
397," ",982
310,else,982
397," ",982
326,if,982
397," ",982
0,(,0
397," ",982
0,!,0
397," ",982
366,isset,982
0,(,0
317,$this,982
390,->,982
313,entityInsertions,982
0,[,0
317,$oid,982
0,],0
0,),0
0,),0
397," ",982
0,{,0
397,"
        ",982
317,$this,983
390,->,983
313,entityChangeSets,983
0,[,0
317,$oid,983
0,],0
397," ",983
0,=,0
397," ",983
317,$changeSet,983
0,;,0
397,"
        ",983
317,$this,984
390,->,984
313,entityUpdates,984
0,[,0
317,$oid,984
0,],0
397,"    ",984
0,=,0
397," ",984
317,$entity,984
0,;,0
397,"
      ",984
0,},0
397,"
      ",985
317,$this,986
390,->,986
313,originalEntityData,986
0,[,0
317,$oid,986
0,],0
397," ",986
0,=,0
397," ",986
317,$actualData,986
0,;,0
397,"
    ",986
0,},0
397,"
  ",987
0,},0
397,"

  ",988
393,"/**
   * Executes all entity insertions for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",990
397,"
  ",996
360,private,997
397," ",997
347,function,997
397," ",997
313,executeInserts,997
0,(,0
317,$class,997
0,),0
397,"
  ",997
0,{,0
397,"
    ",998
317,$entities,999
397,"   ",999
0,=,0
397," ",999
377,array,999
0,(,0
0,),0
0,;,0
397,"
    ",999
317,$className,1000
397,"  ",1000
0,=,0
397," ",1000
317,$class,1000
390,->,1000
313,name,1000
0,;,0
397,"
    ",1000
317,$persister,1001
397,"  ",1001
0,=,0
397," ",1001
317,$this,1001
390,->,1001
313,getEntityPersister,1001
0,(,0
317,$className,1001
0,),0
0,;,0
397,"
    ",1001
317,$invoke,1002
397,"     ",1002
0,=,0
397," ",1002
317,$this,1002
390,->,1002
313,listenersInvoker,1002
390,->,1002
313,getSubscribedSystems,1002
0,(,0
317,$class,1002
0,",",0
397," ",1002
313,Events,1002
402,::,1002
313,postPersist,1002
0,),0
0,;,0
397,"

    ",1002
334,foreach,1004
397," ",1004
0,(,0
317,$this,1004
390,->,1004
313,entityInsertions,1004
397," ",1004
338,as,1004
397," ",1004
317,$oid,1004
397," ",1004
269,=>,1004
397," ",1004
317,$entity,1004
0,),0
397," ",1004
0,{,0
397,"

      ",1004
326,if,1006
397," ",1006
0,(,0
317,$this,1006
390,->,1006
313,em,1006
390,->,1006
313,getClassMetadata,1006
0,(,0
313,get_class,1006
0,(,0
317,$entity,1006
0,),0
0,),0
390,->,1006
313,name,1006
397," ",1006
292,!==,1006
397," ",1006
317,$className,1006
0,),0
397," ",1006
0,{,0
397,"
        ",1006
345,continue,1007
0,;,0
397,"
      ",1007
0,},0
397,"

      ",1008
317,$persister,1010
390,->,1010
313,addInsert,1010
0,(,0
317,$entity,1010
0,),0
0,;,0
397,"

      ",1010
365,unset,1012
0,(,0
317,$this,1012
390,->,1012
313,entityInsertions,1012
0,[,0
317,$oid,1012
0,],0
0,),0
0,;,0
397,"

      ",1012
326,if,1014
397," ",1014
0,(,0
317,$invoke,1014
397," ",1014
292,!==,1014
397," ",1014
313,ListenersInvoker,1014
402,::,1014
313,INVOKE_NONE,1014
0,),0
397," ",1014
0,{,0
397,"
        ",1014
317,$entities,1015
0,[,0
0,],0
397," ",1015
0,=,0
397," ",1015
317,$entity,1015
0,;,0
397,"
      ",1015
0,},0
397,"
    ",1016
0,},0
397,"

    ",1017
317,$postInsertIds,1019
397," ",1019
0,=,0
397," ",1019
317,$persister,1019
390,->,1019
313,executeInserts,1019
0,(,0
0,),0
0,;,0
397,"

    ",1019
326,if,1021
397," ",1021
0,(,0
317,$postInsertIds,1021
0,),0
397," ",1021
0,{,0
397,"
      ",1021
392,"// Persister returned post-insert IDs",1022
397,"
      ",1022
334,foreach,1023
397," ",1023
0,(,0
317,$postInsertIds,1023
397," ",1023
338,as,1023
397," ",1023
317,$postInsertId,1023
0,),0
397," ",1023
0,{,0
397,"
        ",1023
317,$id,1024
397,"      ",1024
0,=,0
397," ",1024
317,$postInsertId,1024
0,[,0
320,'generatedId',1024
0,],0
0,;,0
397,"
        ",1024
317,$entity,1025
397,"  ",1025
0,=,0
397," ",1025
317,$postInsertId,1025
0,[,0
320,'entity',1025
0,],0
0,;,0
397,"
        ",1025
317,$oid,1026
397,"     ",1026
0,=,0
397," ",1026
313,spl_object_hash,1026
0,(,0
317,$entity,1026
0,),0
0,;,0
397,"
        ",1026
317,$idField,1027
397," ",1027
0,=,0
397," ",1027
317,$class,1027
390,->,1027
313,identifier,1027
0,[,0
311,0,1027
0,],0
0,;,0
397,"

        ",1027
317,$class,1029
390,->,1029
313,reflFields,1029
0,[,0
317,$idField,1029
0,],0
390,->,1029
313,setValue,1029
0,(,0
317,$entity,1029
0,",",0
397," ",1029
317,$id,1029
0,),0
0,;,0
397,"

        ",1029
317,$this,1031
390,->,1031
313,entityIdentifiers,1031
0,[,0
317,$oid,1031
0,],0
397," ",1031
0,=,0
397," ",1031
377,array,1031
0,(,0
317,$idField,1031
397," ",1031
269,=>,1031
397," ",1031
317,$id,1031
0,),0
0,;,0
397,"
        ",1031
317,$this,1032
390,->,1032
313,entityStates,1032
0,[,0
317,$oid,1032
0,],0
397," ",1032
0,=,0
397," ",1032
313,self,1032
402,::,1032
313,STATE_MANAGED,1032
0,;,0
397,"
        ",1032
317,$this,1033
390,->,1033
313,originalEntityData,1033
0,[,0
317,$oid,1033
0,],0
0,[,0
317,$idField,1033
0,],0
397," ",1033
0,=,0
397," ",1033
317,$id,1033
0,;,0
397,"

        ",1033
317,$this,1035
390,->,1035
313,addToIdentityMap,1035
0,(,0
317,$entity,1035
0,),0
0,;,0
397,"
      ",1035
0,},0
397,"
    ",1036
0,},0
397,"

    ",1037
334,foreach,1039
397," ",1039
0,(,0
317,$entities,1039
397," ",1039
338,as,1039
397," ",1039
317,$entity,1039
0,),0
397," ",1039
0,{,0
397,"
      ",1039
317,$this,1040
390,->,1040
313,listenersInvoker,1040
390,->,1040
313,invoke,1040
0,(,0
317,$class,1040
0,",",0
397," ",1040
313,Events,1040
402,::,1040
313,postPersist,1040
0,",",0
397," ",1040
317,$entity,1040
0,",",0
397," ",1040
324,new,1040
397," ",1040
313,LifecycleEventArgs,1040
0,(,0
317,$entity,1040
0,",",0
397," ",1040
317,$this,1040
390,->,1040
313,em,1040
0,),0
0,",",0
397," ",1040
317,$invoke,1040
0,),0
0,;,0
397,"
    ",1040
0,},0
397,"
  ",1041
0,},0
397,"

  ",1042
393,"/**
   * Executes all entity updates for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",1044
397,"
  ",1050
360,private,1051
397," ",1051
347,function,1051
397," ",1051
313,executeUpdates,1051
0,(,0
317,$class,1051
0,),0
397,"
  ",1051
0,{,0
397,"
    ",1052
317,$className,1053
397,"          ",1053
0,=,0
397," ",1053
317,$class,1053
390,->,1053
313,name,1053
0,;,0
397,"
    ",1053
317,$persister,1054
397,"          ",1054
0,=,0
397," ",1054
317,$this,1054
390,->,1054
313,getEntityPersister,1054
0,(,0
317,$className,1054
0,),0
0,;,0
397,"
    ",1054
317,$preUpdateInvoke,1055
397,"    ",1055
0,=,0
397," ",1055
317,$this,1055
390,->,1055
313,listenersInvoker,1055
390,->,1055
313,getSubscribedSystems,1055
0,(,0
317,$class,1055
0,",",0
397," ",1055
313,Events,1055
402,::,1055
313,preUpdate,1055
0,),0
0,;,0
397,"
    ",1055
317,$postUpdateInvoke,1056
397,"   ",1056
0,=,0
397," ",1056
317,$this,1056
390,->,1056
313,listenersInvoker,1056
390,->,1056
313,getSubscribedSystems,1056
0,(,0
317,$class,1056
0,",",0
397," ",1056
313,Events,1056
402,::,1056
313,postUpdate,1056
0,),0
0,;,0
397,"

    ",1056
334,foreach,1058
397," ",1058
0,(,0
317,$this,1058
390,->,1058
313,entityUpdates,1058
397," ",1058
338,as,1058
397," ",1058
317,$oid,1058
397," ",1058
269,=>,1058
397," ",1058
317,$entity,1058
0,),0
397," ",1058
0,{,0
397,"

      ",1058
326,if,1060
397," ",1060
0,(,0
317,$this,1060
390,->,1060
313,em,1060
390,->,1060
313,getClassMetadata,1060
0,(,0
313,get_class,1060
0,(,0
317,$entity,1060
0,),0
0,),0
390,->,1060
313,name,1060
397," ",1060
292,!==,1060
397," ",1060
317,$className,1060
0,),0
397," ",1060
0,{,0
397,"
        ",1060
345,continue,1061
0,;,0
397,"
      ",1061
0,},0
397,"

      ",1062
326,if,1064
397," ",1064
0,(,0
317,$preUpdateInvoke,1064
397," ",1064
290,!=,1064
397," ",1064
313,ListenersInvoker,1064
402,::,1064
313,INVOKE_NONE,1064
0,),0
397," ",1064
0,{,0
397,"
        ",1064
317,$this,1065
390,->,1065
313,listenersInvoker,1065
390,->,1065
313,invoke,1065
0,(,0
317,$class,1065
0,",",0
397," ",1065
313,Events,1065
402,::,1065
313,preUpdate,1065
0,",",0
397," ",1065
317,$entity,1065
0,",",0
397," ",1065
324,new,1065
397," ",1065
313,PreUpdateEventArgs,1065
0,(,0
317,$entity,1065
0,",",0
397," ",1065
317,$this,1065
390,->,1065
313,em,1065
0,",",0
397," ",1065
317,$this,1065
390,->,1065
313,entityChangeSets,1065
0,[,0
317,$oid,1065
0,],0
0,),0
0,",",0
397," ",1065
317,$preUpdateInvoke,1065
0,),0
0,;,0
397,"
        ",1065
317,$this,1066
390,->,1066
313,recomputeSingleEntityChangeSet,1066
0,(,0
317,$class,1066
0,",",0
397," ",1066
317,$entity,1066
0,),0
0,;,0
397,"
      ",1066
0,},0
397,"

      ",1067
326,if,1069
397," ",1069
0,(,0
397," ",1069
0,!,0
397," ",1069
367,empty,1069
0,(,0
317,$this,1069
390,->,1069
313,entityChangeSets,1069
0,[,0
317,$oid,1069
0,],0
0,),0
0,),0
397," ",1069
0,{,0
397,"
        ",1069
317,$persister,1070
390,->,1070
313,update,1070
0,(,0
317,$entity,1070
0,),0
0,;,0
397,"
      ",1070
0,},0
397,"

      ",1071
365,unset,1073
0,(,0
317,$this,1073
390,->,1073
313,entityUpdates,1073
0,[,0
317,$oid,1073
0,],0
0,),0
0,;,0
397,"

      ",1073
326,if,1075
397," ",1075
0,(,0
317,$postUpdateInvoke,1075
397," ",1075
290,!=,1075
397," ",1075
313,ListenersInvoker,1075
402,::,1075
313,INVOKE_NONE,1075
0,),0
397," ",1075
0,{,0
397,"
        ",1075
317,$this,1076
390,->,1076
313,listenersInvoker,1076
390,->,1076
313,invoke,1076
0,(,0
317,$class,1076
0,",",0
397," ",1076
313,Events,1076
402,::,1076
313,postUpdate,1076
0,",",0
397," ",1076
317,$entity,1076
0,",",0
397," ",1076
324,new,1076
397," ",1076
313,LifecycleEventArgs,1076
0,(,0
317,$entity,1076
0,",",0
397," ",1076
317,$this,1076
390,->,1076
313,em,1076
0,),0
0,",",0
397," ",1076
317,$postUpdateInvoke,1076
0,),0
0,;,0
397,"
      ",1076
0,},0
397,"
    ",1077
0,},0
397,"
  ",1078
0,},0
397,"

  ",1079
393,"/**
   * Executes all entity deletions for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",1081
397,"
  ",1087
360,private,1088
397," ",1088
347,function,1088
397," ",1088
313,executeDeletions,1088
0,(,0
317,$class,1088
0,),0
397,"
  ",1088
0,{,0
397,"
    ",1089
317,$className,1090
397,"  ",1090
0,=,0
397," ",1090
317,$class,1090
390,->,1090
313,name,1090
0,;,0
397,"
    ",1090
317,$persister,1091
397,"  ",1091
0,=,0
397," ",1091
317,$this,1091
390,->,1091
313,getEntityPersister,1091
0,(,0
317,$className,1091
0,),0
0,;,0
397,"
    ",1091
317,$invoke,1092
397,"     ",1092
0,=,0
397," ",1092
317,$this,1092
390,->,1092
313,listenersInvoker,1092
390,->,1092
313,getSubscribedSystems,1092
0,(,0
317,$class,1092
0,",",0
397," ",1092
313,Events,1092
402,::,1092
313,postRemove,1092
0,),0
0,;,0
397,"

    ",1092
334,foreach,1094
397," ",1094
0,(,0
317,$this,1094
390,->,1094
313,entityDeletions,1094
397," ",1094
338,as,1094
397," ",1094
317,$oid,1094
397," ",1094
269,=>,1094
397," ",1094
317,$entity,1094
0,),0
397," ",1094
0,{,0
397,"
      ",1094
326,if,1095
397," ",1095
0,(,0
317,$this,1095
390,->,1095
313,em,1095
390,->,1095
313,getClassMetadata,1095
0,(,0
313,get_class,1095
0,(,0
317,$entity,1095
0,),0
0,),0
390,->,1095
313,name,1095
397," ",1095
292,!==,1095
397," ",1095
317,$className,1095
0,),0
397," ",1095
0,{,0
397,"
        ",1095
345,continue,1096
0,;,0
397,"
      ",1096
0,},0
397,"

      ",1097
317,$persister,1099
390,->,1099
313,delete,1099
0,(,0
317,$entity,1099
0,),0
0,;,0
397,"

      ",1099
365,unset,1101
0,(,0
397,"
        ",1101
317,$this,1102
390,->,1102
313,entityDeletions,1102
0,[,0
317,$oid,1102
0,],0
0,",",0
397,"
        ",1102
317,$this,1103
390,->,1103
313,entityIdentifiers,1103
0,[,0
317,$oid,1103
0,],0
0,",",0
397,"
        ",1103
317,$this,1104
390,->,1104
313,originalEntityData,1104
0,[,0
317,$oid,1104
0,],0
0,",",0
397,"
        ",1104
317,$this,1105
390,->,1105
313,entityStates,1105
0,[,0
317,$oid,1105
0,],0
397,"
      ",1105
0,),0
0,;,0
397,"

      ",1106
392,"// Entity with this $oid after deletion treated as NEW, even if the $oid",1108
397,"
      ",1108
392,"// is obtained by a new entity because the old one went out of scope.",1109
397,"
      ",1109
392,"//$this->entityStates[$oid] = self::STATE_NEW;",1110
397,"
      ",1110
326,if,1111
397," ",1111
0,(,0
397," ",1111
0,!,0
397," ",1111
317,$class,1111
390,->,1111
313,isIdentifierNatural,1111
0,(,0
0,),0
0,),0
397," ",1111
0,{,0
397,"
        ",1111
317,$class,1112
390,->,1112
313,reflFields,1112
0,[,0
317,$class,1112
390,->,1112
313,identifier,1112
0,[,0
311,0,1112
0,],0
0,],0
390,->,1112
313,setValue,1112
0,(,0
317,$entity,1112
0,",",0
397," ",1112
313,null,1112
0,),0
0,;,0
397,"
      ",1112
0,},0
397,"

      ",1113
326,if,1115
397," ",1115
0,(,0
317,$invoke,1115
397," ",1115
292,!==,1115
397," ",1115
313,ListenersInvoker,1115
402,::,1115
313,INVOKE_NONE,1115
0,),0
397," ",1115
0,{,0
397,"
        ",1115
317,$this,1116
390,->,1116
313,listenersInvoker,1116
390,->,1116
313,invoke,1116
0,(,0
317,$class,1116
0,",",0
397," ",1116
313,Events,1116
402,::,1116
313,postRemove,1116
0,",",0
397," ",1116
317,$entity,1116
0,",",0
397," ",1116
324,new,1116
397," ",1116
313,LifecycleEventArgs,1116
0,(,0
317,$entity,1116
0,",",0
397," ",1116
317,$this,1116
390,->,1116
313,em,1116
0,),0
0,",",0
397," ",1116
317,$invoke,1116
0,),0
0,;,0
397,"
      ",1116
0,},0
397,"
    ",1117
0,},0
397,"
  ",1118
0,},0
397,"

  ",1119
393,"/**
   * Gets the commit order.
   *
   * @param array|null $entityChangeSet
   *
   * @return array
   */",1121
397,"
  ",1127
360,private,1128
397," ",1128
347,function,1128
397," ",1128
313,getCommitOrder,1128
0,(,0
377,array,1128
397," ",1128
317,$entityChangeSet,1128
397," ",1128
0,=,0
397," ",1128
313,null,1128
0,),0
397,"
  ",1128
0,{,0
397,"
    ",1129
326,if,1130
397," ",1130
0,(,0
317,$entityChangeSet,1130
397," ",1130
291,===,1130
397," ",1130
313,null,1130
0,),0
397," ",1130
0,{,0
397,"
      ",1130
317,$entityChangeSet,1131
397," ",1131
0,=,0
397," ",1131
313,array_merge,1131
0,(,0
317,$this,1131
390,->,1131
313,entityInsertions,1131
0,",",0
397," ",1131
317,$this,1131
390,->,1131
313,entityUpdates,1131
0,",",0
397," ",1131
317,$this,1131
390,->,1131
313,entityDeletions,1131
0,),0
0,;,0
397,"
    ",1131
0,},0
397,"

    ",1132
317,$calc,1134
397," ",1134
0,=,0
397," ",1134
317,$this,1134
390,->,1134
313,getCommitOrderCalculator,1134
0,(,0
0,),0
0,;,0
397,"

    ",1134
392,"// See if there are any new classes in the changeset, that are not in the",1136
397,"
    ",1136
392,"// commit order graph yet (don't have a node).",1137
397,"
    ",1137
392,"// We have to inspect changeSet to be able to correctly build dependencies.",1138
397,"
    ",1138
392,"// It is not possible to use IdentityMap here because post inserted ids",1139
397,"
    ",1139
392,"// are not yet available.",1140
397,"
    ",1140
317,$newNodes,1141
397," ",1141
0,=,0
397," ",1141
377,array,1141
0,(,0
0,),0
0,;,0
397,"

    ",1141
334,foreach,1143
397," ",1143
0,(,0
317,$entityChangeSet,1143
397," ",1143
338,as,1143
397," ",1143
317,$entity,1143
0,),0
397," ",1143
0,{,0
397,"
      ",1143
317,$class,1144
397," ",1144
0,=,0
397," ",1144
317,$this,1144
390,->,1144
313,em,1144
390,->,1144
313,getClassMetadata,1144
0,(,0
313,get_class,1144
0,(,0
317,$entity,1144
0,),0
0,),0
0,;,0
397,"

      ",1144
326,if,1146
397," ",1146
0,(,0
317,$calc,1146
390,->,1146
313,hasClass,1146
0,(,0
317,$class,1146
390,->,1146
313,name,1146
0,),0
0,),0
397," ",1146
0,{,0
397,"
        ",1146
345,continue,1147
0,;,0
397,"
      ",1147
0,},0
397,"

      ",1148
317,$calc,1150
390,->,1150
313,addClass,1150
0,(,0
317,$class,1150
0,),0
0,;,0
397,"

      ",1150
317,$newNodes,1152
0,[,0
0,],0
397," ",1152
0,=,0
397," ",1152
317,$class,1152
0,;,0
397,"
    ",1152
0,},0
397,"

    ",1153
392,"// Calculate dependencies for new nodes",1155
397,"
    ",1155
330,while,1156
397," ",1156
0,(,0
317,$class,1156
397," ",1156
0,=,0
397," ",1156
313,array_pop,1156
0,(,0
317,$newNodes,1156
0,),0
0,),0
397," ",1156
0,{,0
397,"
      ",1156
334,foreach,1157
397," ",1157
0,(,0
317,$class,1157
390,->,1157
313,associationMappings,1157
397," ",1157
338,as,1157
397," ",1157
317,$assoc,1157
0,),0
397," ",1157
0,{,0
397,"
        ",1157
326,if,1158
397," ",1158
0,(,0
397," ",1158
0,!,0
397," ",1158
0,(,0
317,$assoc,1158
0,[,0
320,'isOwningSide',1158
0,],0
397," ",1158
286,&&,1158
397," ",1158
317,$assoc,1158
0,[,0
320,'type',1158
0,],0
397," ",1158
287,&,1158
397," ",1158
313,ClassMetadata,1158
402,::,1158
313,TO_ONE,1158
0,),0
0,),0
397," ",1158
0,{,0
397,"
          ",1158
345,continue,1159
0,;,0
397,"
        ",1159
0,},0
397,"

        ",1160
317,$targetClass,1162
397," ",1162
0,=,0
397," ",1162
317,$this,1162
390,->,1162
313,em,1162
390,->,1162
313,getClassMetadata,1162
0,(,0
317,$assoc,1162
0,[,0
320,'targetEntity',1162
0,],0
0,),0
0,;,0
397,"

        ",1162
326,if,1164
397," ",1164
0,(,0
397," ",1164
0,!,0
397," ",1164
317,$calc,1164
390,->,1164
313,hasClass,1164
0,(,0
317,$targetClass,1164
390,->,1164
313,name,1164
0,),0
0,),0
397," ",1164
0,{,0
397,"
          ",1164
317,$calc,1165
390,->,1165
313,addClass,1165
0,(,0
317,$targetClass,1165
0,),0
0,;,0
397,"

          ",1165
317,$newNodes,1167
0,[,0
0,],0
397," ",1167
0,=,0
397," ",1167
317,$targetClass,1167
0,;,0
397,"
        ",1167
0,},0
397,"

        ",1168
317,$calc,1170
390,->,1170
313,addDependency,1170
0,(,0
317,$targetClass,1170
0,",",0
397," ",1170
317,$class,1170
0,),0
0,;,0
397,"

        ",1170
392,"// If the target class has mapped subclasses, these share the same dependency.",1172
397,"
        ",1172
326,if,1173
397," ",1173
0,(,0
397," ",1173
0,!,0
397," ",1173
317,$targetClass,1173
390,->,1173
313,subClasses,1173
0,),0
397," ",1173
0,{,0
397,"
          ",1173
345,continue,1174
0,;,0
397,"
        ",1174
0,},0
397,"

        ",1175
334,foreach,1177
397," ",1177
0,(,0
317,$targetClass,1177
390,->,1177
313,subClasses,1177
397," ",1177
338,as,1177
397," ",1177
317,$subClassName,1177
0,),0
397," ",1177
0,{,0
397,"
          ",1177
317,$targetSubClass,1178
397," ",1178
0,=,0
397," ",1178
317,$this,1178
390,->,1178
313,em,1178
390,->,1178
313,getClassMetadata,1178
0,(,0
317,$subClassName,1178
0,),0
0,;,0
397,"

          ",1178
326,if,1180
397," ",1180
0,(,0
397," ",1180
0,!,0
397," ",1180
317,$calc,1180
390,->,1180
313,hasClass,1180
0,(,0
317,$subClassName,1180
0,),0
0,),0
397," ",1180
0,{,0
397,"
            ",1180
317,$calc,1181
390,->,1181
313,addClass,1181
0,(,0
317,$targetSubClass,1181
0,),0
0,;,0
397,"

            ",1181
317,$newNodes,1183
0,[,0
0,],0
397," ",1183
0,=,0
397," ",1183
317,$targetSubClass,1183
0,;,0
397,"
          ",1183
0,},0
397,"

          ",1184
317,$calc,1186
390,->,1186
313,addDependency,1186
0,(,0
317,$targetSubClass,1186
0,",",0
397," ",1186
317,$class,1186
0,),0
0,;,0
397,"
        ",1186
0,},0
397,"
      ",1187
0,},0
397,"
    ",1188
0,},0
397,"

    ",1189
350,return,1191
397," ",1191
317,$calc,1191
390,->,1191
313,getCommitOrder,1191
0,(,0
0,),0
0,;,0
397,"
  ",1191
0,},0
397,"

  ",1192
393,"/**
   * Schedules an entity for insertion into the database.
   * If the entity already has an identifier, it will be added to the identity map.
   *
   * @param object $entity The entity to schedule for insertion.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws \InvalidArgumentException
   */",1194
397,"
  ",1204
362,public,1205
397," ",1205
347,function,1205
397," ",1205
313,scheduleForInsert,1205
0,(,0
317,$entity,1205
0,),0
397,"
  ",1205
0,{,0
397,"
    ",1206
317,$oid,1207
397," ",1207
0,=,0
397," ",1207
313,spl_object_hash,1207
0,(,0
317,$entity,1207
0,),0
0,;,0
397,"

    ",1207
326,if,1209
397," ",1209
0,(,0
366,isset,1209
0,(,0
317,$this,1209
390,->,1209
313,entityUpdates,1209
0,[,0
317,$oid,1209
0,],0
0,),0
0,),0
397," ",1209
0,{,0
397,"
      ",1209
258,throw,1210
397," ",1210
324,new,1210
397," ",1210
313,InvalidArgumentException,1210
0,(,0
320,"""Dirty entity can not be scheduled for insertion.""",1210
0,),0
0,;,0
397,"
    ",1210
0,},0
397,"

    ",1211
326,if,1213
397," ",1213
0,(,0
366,isset,1213
0,(,0
317,$this,1213
390,->,1213
313,entityDeletions,1213
0,[,0
317,$oid,1213
0,],0
0,),0
0,),0
397," ",1213
0,{,0
397,"
      ",1213
258,throw,1214
397," ",1214
313,ORMInvalidArgumentException,1214
402,::,1214
313,scheduleInsertForRemovedEntity,1214
0,(,0
317,$entity,1214
0,),0
0,;,0
397,"
    ",1214
0,},0
397,"
    ",1215
326,if,1216
397," ",1216
0,(,0
366,isset,1216
0,(,0
317,$this,1216
390,->,1216
313,originalEntityData,1216
0,[,0
317,$oid,1216
0,],0
0,),0
397," ",1216
286,&&,1216
397," ",1216
0,!,0
397," ",1216
366,isset,1216
0,(,0
317,$this,1216
390,->,1216
313,entityInsertions,1216
0,[,0
317,$oid,1216
0,],0
0,),0
0,),0
397," ",1216
0,{,0
397,"
      ",1216
258,throw,1217
397," ",1217
313,ORMInvalidArgumentException,1217
402,::,1217
313,scheduleInsertForManagedEntity,1217
0,(,0
317,$entity,1217
0,),0
0,;,0
397,"
    ",1217
0,},0
397,"

    ",1218
326,if,1220
397," ",1220
0,(,0
366,isset,1220
0,(,0
317,$this,1220
390,->,1220
313,entityInsertions,1220
0,[,0
317,$oid,1220
0,],0
0,),0
0,),0
397," ",1220
0,{,0
397,"
      ",1220
258,throw,1221
397," ",1221
313,ORMInvalidArgumentException,1221
402,::,1221
313,scheduleInsertTwice,1221
0,(,0
317,$entity,1221
0,),0
0,;,0
397,"
    ",1221
0,},0
397,"

    ",1222
317,$this,1224
390,->,1224
313,entityInsertions,1224
0,[,0
317,$oid,1224
0,],0
397," ",1224
0,=,0
397," ",1224
317,$entity,1224
0,;,0
397,"

    ",1224
326,if,1226
397," ",1226
0,(,0
366,isset,1226
0,(,0
317,$this,1226
390,->,1226
313,entityIdentifiers,1226
0,[,0
317,$oid,1226
0,],0
0,),0
0,),0
397," ",1226
0,{,0
397,"
      ",1226
317,$this,1227
390,->,1227
313,addToIdentityMap,1227
0,(,0
317,$entity,1227
0,),0
0,;,0
397,"
    ",1227
0,},0
397,"

    ",1228
326,if,1230
397," ",1230
0,(,0
317,$entity,1230
397," ",1230
298,instanceof,1230
397," ",1230
313,NotifyPropertyChanged,1230
0,),0
397," ",1230
0,{,0
397,"
      ",1230
317,$entity,1231
390,->,1231
313,addPropertyChangedListener,1231
0,(,0
317,$this,1231
0,),0
0,;,0
397,"
    ",1231
0,},0
397,"
  ",1232
0,},0
397,"

  ",1233
393,"/**
   * Checks whether an entity is scheduled for insertion.
   *
   * @param object $entity
   *
   * @return boolean
   */",1235
397,"
  ",1241
362,public,1242
397," ",1242
347,function,1242
397," ",1242
313,isScheduledForInsert,1242
0,(,0
317,$entity,1242
0,),0
397,"
  ",1242
0,{,0
397,"
    ",1243
350,return,1244
397," ",1244
366,isset,1244
0,(,0
317,$this,1244
390,->,1244
313,entityInsertions,1244
0,[,0
313,spl_object_hash,1244
0,(,0
317,$entity,1244
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1244
0,},0
397,"

  ",1245
393,"/**
   * Schedules an entity for being updated.
   *
   * @param object $entity The entity to schedule for being updated.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   */",1247
397,"
  ",1255
362,public,1256
397," ",1256
347,function,1256
397," ",1256
313,scheduleForUpdate,1256
0,(,0
317,$entity,1256
0,),0
397,"
  ",1256
0,{,0
397,"
    ",1257
317,$oid,1258
397," ",1258
0,=,0
397," ",1258
313,spl_object_hash,1258
0,(,0
317,$entity,1258
0,),0
0,;,0
397,"

    ",1258
326,if,1260
397," ",1260
0,(,0
397," ",1260
0,!,0
397," ",1260
366,isset,1260
0,(,0
317,$this,1260
390,->,1260
313,entityIdentifiers,1260
0,[,0
317,$oid,1260
0,],0
0,),0
0,),0
397," ",1260
0,{,0
397,"
      ",1260
258,throw,1261
397," ",1261
313,ORMInvalidArgumentException,1261
402,::,1261
313,entityHasNoIdentity,1261
0,(,0
317,$entity,1261
0,",",0
397," ",1261
320,"""scheduling for update""",1261
0,),0
0,;,0
397,"
    ",1261
0,},0
397,"

    ",1262
326,if,1264
397," ",1264
0,(,0
366,isset,1264
0,(,0
317,$this,1264
390,->,1264
313,entityDeletions,1264
0,[,0
317,$oid,1264
0,],0
0,),0
0,),0
397," ",1264
0,{,0
397,"
      ",1264
258,throw,1265
397," ",1265
313,ORMInvalidArgumentException,1265
402,::,1265
313,entityIsRemoved,1265
0,(,0
317,$entity,1265
0,",",0
397," ",1265
320,"""schedule for update""",1265
0,),0
0,;,0
397,"
    ",1265
0,},0
397,"

    ",1266
326,if,1268
397," ",1268
0,(,0
397," ",1268
0,!,0
397," ",1268
366,isset,1268
0,(,0
317,$this,1268
390,->,1268
313,entityUpdates,1268
0,[,0
317,$oid,1268
0,],0
0,),0
397," ",1268
286,&&,1268
397," ",1268
0,!,0
397," ",1268
366,isset,1268
0,(,0
317,$this,1268
390,->,1268
313,entityInsertions,1268
0,[,0
317,$oid,1268
0,],0
0,),0
0,),0
397," ",1268
0,{,0
397,"
      ",1268
317,$this,1269
390,->,1269
313,entityUpdates,1269
0,[,0
317,$oid,1269
0,],0
397," ",1269
0,=,0
397," ",1269
317,$entity,1269
0,;,0
397,"
    ",1269
0,},0
397,"
  ",1270
0,},0
397,"

  ",1271
393,"/**
   * INTERNAL:
   * Schedules an extra update that will be executed immediately after the
   * regular entity updates within the currently running commit cycle.
   *
   * Extra updates for entities are stored as (entity, changeset) tuples.
   *
   * @ignore
   *
   * @param object $entity    The entity for which to schedule an extra update.
   * @param array  $changeset The changeset of the entity (what to update).
   *
   * @return void
   */",1273
397,"
  ",1286
362,public,1287
397," ",1287
347,function,1287
397," ",1287
313,scheduleExtraUpdate,1287
0,(,0
317,$entity,1287
0,",",0
397," ",1287
377,array,1287
397," ",1287
317,$changeset,1287
0,),0
397,"
  ",1287
0,{,0
397,"
    ",1288
317,$oid,1289
397,"         ",1289
0,=,0
397," ",1289
313,spl_object_hash,1289
0,(,0
317,$entity,1289
0,),0
0,;,0
397,"
    ",1289
317,$extraUpdate,1290
397," ",1290
0,=,0
397," ",1290
377,array,1290
0,(,0
317,$entity,1290
0,",",0
397," ",1290
317,$changeset,1290
0,),0
0,;,0
397,"

    ",1290
326,if,1292
397," ",1292
0,(,0
366,isset,1292
0,(,0
317,$this,1292
390,->,1292
313,extraUpdates,1292
0,[,0
317,$oid,1292
0,],0
0,),0
0,),0
397," ",1292
0,{,0
397,"
      ",1292
376,list,1293
0,(,0
317,$ignored,1293
0,",",0
397," ",1293
317,$changeset2,1293
0,),0
397," ",1293
0,=,0
397," ",1293
317,$this,1293
390,->,1293
313,extraUpdates,1293
0,[,0
317,$oid,1293
0,],0
0,;,0
397,"

      ",1293
317,$extraUpdate,1295
397," ",1295
0,=,0
397," ",1295
377,array,1295
0,(,0
317,$entity,1295
0,",",0
397," ",1295
317,$changeset,1295
397," ",1295
0,+,0
397," ",1295
317,$changeset2,1295
0,),0
0,;,0
397,"
    ",1295
0,},0
397,"

    ",1296
317,$this,1298
390,->,1298
313,extraUpdates,1298
0,[,0
317,$oid,1298
0,],0
397," ",1298
0,=,0
397," ",1298
317,$extraUpdate,1298
0,;,0
397,"
  ",1298
0,},0
397,"

  ",1299
393,"/**
   * Checks whether an entity is registered as dirty in the unit of work.
   * Note: Is not very useful currently as dirty entities are only registered
   * at commit time.
   *
   * @param object $entity
   *
   * @return boolean
   */",1301
397,"
  ",1309
362,public,1310
397," ",1310
347,function,1310
397," ",1310
313,isScheduledForUpdate,1310
0,(,0
317,$entity,1310
0,),0
397,"
  ",1310
0,{,0
397,"
    ",1311
350,return,1312
397," ",1312
366,isset,1312
0,(,0
317,$this,1312
390,->,1312
313,entityUpdates,1312
0,[,0
313,spl_object_hash,1312
0,(,0
317,$entity,1312
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1312
0,},0
397,"

  ",1313
393,"/**
   * Checks whether an entity is registered to be checked in the unit of work.
   *
   * @param object $entity
   *
   * @return boolean
   */",1315
397,"
  ",1321
362,public,1322
397," ",1322
347,function,1322
397," ",1322
313,isScheduledForDirtyCheck,1322
0,(,0
317,$entity,1322
0,),0
397,"
  ",1322
0,{,0
397,"
    ",1323
317,$rootEntityName,1324
397," ",1324
0,=,0
397," ",1324
317,$this,1324
390,->,1324
313,em,1324
390,->,1324
313,getClassMetadata,1324
0,(,0
313,get_class,1324
0,(,0
317,$entity,1324
0,),0
0,),0
390,->,1324
313,rootEntityName,1324
0,;,0
397,"

    ",1324
350,return,1326
397," ",1326
366,isset,1326
0,(,0
317,$this,1326
390,->,1326
313,scheduledForSynchronization,1326
0,[,0
317,$rootEntityName,1326
0,],0
0,[,0
313,spl_object_hash,1326
0,(,0
317,$entity,1326
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1326
0,},0
397,"

  ",1327
393,"/**
   * INTERNAL:
   * Schedules an entity for deletion.
   *
   * @param object $entity
   *
   * @return void
   */",1329
397,"
  ",1336
362,public,1337
397," ",1337
347,function,1337
397," ",1337
313,scheduleForDelete,1337
0,(,0
317,$entity,1337
0,),0
397,"
  ",1337
0,{,0
397,"
    ",1338
317,$oid,1339
397," ",1339
0,=,0
397," ",1339
313,spl_object_hash,1339
0,(,0
317,$entity,1339
0,),0
0,;,0
397,"

    ",1339
326,if,1341
397," ",1341
0,(,0
366,isset,1341
0,(,0
317,$this,1341
390,->,1341
313,entityInsertions,1341
0,[,0
317,$oid,1341
0,],0
0,),0
0,),0
397," ",1341
0,{,0
397,"
      ",1341
326,if,1342
397," ",1342
0,(,0
317,$this,1342
390,->,1342
313,isInIdentityMap,1342
0,(,0
317,$entity,1342
0,),0
0,),0
397," ",1342
0,{,0
397,"
        ",1342
317,$this,1343
390,->,1343
313,removeFromIdentityMap,1343
0,(,0
317,$entity,1343
0,),0
0,;,0
397,"
      ",1343
0,},0
397,"

      ",1344
365,unset,1346
0,(,0
317,$this,1346
390,->,1346
313,entityInsertions,1346
0,[,0
317,$oid,1346
0,],0
0,",",0
397," ",1346
317,$this,1346
390,->,1346
313,entityStates,1346
0,[,0
317,$oid,1346
0,],0
0,),0
0,;,0
397,"

      ",1346
350,return,1348
0,;,0
397," ",1348
392,"// entity has not been persisted yet, so nothing more to do.",1348
397,"
    ",1348
0,},0
397,"

    ",1349
326,if,1351
397," ",1351
0,(,0
397," ",1351
0,!,0
397," ",1351
317,$this,1351
390,->,1351
313,isInIdentityMap,1351
0,(,0
317,$entity,1351
0,),0
0,),0
397," ",1351
0,{,0
397,"
      ",1351
350,return,1352
0,;,0
397,"
    ",1352
0,},0
397,"

    ",1353
317,$this,1355
390,->,1355
313,removeFromIdentityMap,1355
0,(,0
317,$entity,1355
0,),0
0,;,0
397,"

    ",1355
326,if,1357
397," ",1357
0,(,0
366,isset,1357
0,(,0
317,$this,1357
390,->,1357
313,entityUpdates,1357
0,[,0
317,$oid,1357
0,],0
0,),0
0,),0
397," ",1357
0,{,0
397,"
      ",1357
365,unset,1358
0,(,0
317,$this,1358
390,->,1358
313,entityUpdates,1358
0,[,0
317,$oid,1358
0,],0
0,),0
0,;,0
397,"
    ",1358
0,},0
397,"

    ",1359
326,if,1361
397," ",1361
0,(,0
397," ",1361
0,!,0
397," ",1361
366,isset,1361
0,(,0
317,$this,1361
390,->,1361
313,entityDeletions,1361
0,[,0
317,$oid,1361
0,],0
0,),0
0,),0
397," ",1361
0,{,0
397,"
      ",1361
317,$this,1362
390,->,1362
313,entityDeletions,1362
0,[,0
317,$oid,1362
0,],0
397," ",1362
0,=,0
397," ",1362
317,$entity,1362
0,;,0
397,"
      ",1362
317,$this,1363
390,->,1363
313,entityStates,1363
0,[,0
317,$oid,1363
0,],0
397,"    ",1363
0,=,0
397," ",1363
313,self,1363
402,::,1363
313,STATE_REMOVED,1363
0,;,0
397,"
    ",1363
0,},0
397,"
  ",1364
0,},0
397,"

  ",1365
393,"/**
   * Checks whether an entity is registered as removed/deleted with the unit
   * of work.
   *
   * @param object $entity
   *
   * @return boolean
   */",1367
397,"
  ",1374
362,public,1375
397," ",1375
347,function,1375
397," ",1375
313,isScheduledForDelete,1375
0,(,0
317,$entity,1375
0,),0
397,"
  ",1375
0,{,0
397,"
    ",1376
350,return,1377
397," ",1377
366,isset,1377
0,(,0
317,$this,1377
390,->,1377
313,entityDeletions,1377
0,[,0
313,spl_object_hash,1377
0,(,0
317,$entity,1377
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1377
0,},0
397,"

  ",1378
393,"/**
   * Checks whether an entity is scheduled for insertion, update or deletion.
   *
   * @param object $entity
   *
   * @return boolean
   */",1380
397,"
  ",1386
362,public,1387
397," ",1387
347,function,1387
397," ",1387
313,isEntityScheduled,1387
0,(,0
317,$entity,1387
0,),0
397,"
  ",1387
0,{,0
397,"
    ",1388
317,$oid,1389
397," ",1389
0,=,0
397," ",1389
313,spl_object_hash,1389
0,(,0
317,$entity,1389
0,),0
0,;,0
397,"

    ",1389
350,return,1391
397," ",1391
366,isset,1391
0,(,0
317,$this,1391
390,->,1391
313,entityInsertions,1391
0,[,0
317,$oid,1391
0,],0
0,),0
397,"
      ",1391
285,||,1392
397," ",1392
366,isset,1392
0,(,0
317,$this,1392
390,->,1392
313,entityUpdates,1392
0,[,0
317,$oid,1392
0,],0
0,),0
397,"
      ",1392
285,||,1393
397," ",1393
366,isset,1393
0,(,0
317,$this,1393
390,->,1393
313,entityDeletions,1393
0,[,0
317,$oid,1393
0,],0
0,),0
0,;,0
397,"
  ",1393
0,},0
397,"

  ",1394
393,"/**
   * INTERNAL:
   * Registers an entity in the identity map.
   * Note that entities in a hierarchy are registered with the class name of
   * the root entity.
   *
   * @ignore
   *
   * @param object $entity  The entity to register.
   *
   * @return boolean TRUE if the registration was successful, FALSE if the identity of
   *                 the entity in question is already managed.
   *
   * @throws ORMInvalidArgumentException
   */",1396
397,"
  ",1410
362,public,1411
397," ",1411
347,function,1411
397," ",1411
313,addToIdentityMap,1411
0,(,0
317,$entity,1411
0,),0
397,"
  ",1411
0,{,0
397,"
    ",1412
317,$classMetadata,1413
397," ",1413
0,=,0
397," ",1413
317,$this,1413
390,->,1413
313,em,1413
390,->,1413
313,getClassMetadata,1413
0,(,0
313,get_class,1413
0,(,0
317,$entity,1413
0,),0
0,),0
0,;,0
397,"
    ",1413
317,$idHash,1414
397,"        ",1414
0,=,0
397," ",1414
313,implode,1414
0,(,0
320,"' '",1414
0,",",0
397," ",1414
317,$this,1414
390,->,1414
313,entityIdentifiers,1414
0,[,0
313,spl_object_hash,1414
0,(,0
317,$entity,1414
0,),0
0,],0
0,),0
0,;,0
397,"

    ",1414
326,if,1416
397," ",1416
0,(,0
317,$idHash,1416
397," ",1416
291,===,1416
397," ",1416
320,'',1416
0,),0
397," ",1416
0,{,0
397,"
      ",1416
258,throw,1417
397," ",1417
313,ORMInvalidArgumentException,1417
402,::,1417
313,entityWithoutIdentity,1417
0,(,0
317,$classMetadata,1417
390,->,1417
313,name,1417
0,",",0
397," ",1417
317,$entity,1417
0,),0
0,;,0
397,"
    ",1417
0,},0
397,"

    ",1418
317,$className,1420
397," ",1420
0,=,0
397," ",1420
317,$classMetadata,1420
390,->,1420
313,rootEntityName,1420
0,;,0
397,"

    ",1420
326,if,1422
397," ",1422
0,(,0
366,isset,1422
0,(,0
317,$this,1422
390,->,1422
313,identityMap,1422
0,[,0
317,$className,1422
0,],0
0,[,0
317,$idHash,1422
0,],0
0,),0
0,),0
397," ",1422
0,{,0
397,"
      ",1422
350,return,1423
397," ",1423
313,false,1423
0,;,0
397,"
    ",1423
0,},0
397,"

    ",1424
317,$this,1426
390,->,1426
313,identityMap,1426
0,[,0
317,$className,1426
0,],0
0,[,0
317,$idHash,1426
0,],0
397," ",1426
0,=,0
397," ",1426
317,$entity,1426
0,;,0
397,"

    ",1426
350,return,1428
397," ",1428
313,true,1428
0,;,0
397,"
  ",1428
0,},0
397,"

  ",1429
393,"/**
   * Gets the state of an entity with regard to the current unit of work.
   *
   * @param object   $entity
   * @param int|null $assume The state to assume if the state is not yet known (not MANAGED or REMOVED).
   *                         This parameter can be set to improve performance of entity state detection
   *                         by potentially avoiding a database lookup if the distinction between NEW and DETACHED
   *                         is either known or does not matter for the caller of the method.
   *
   * @return int The entity state.
   */",1431
397,"
  ",1441
362,public,1442
397," ",1442
347,function,1442
397," ",1442
313,getEntityState,1442
0,(,0
317,$entity,1442
0,",",0
397," ",1442
317,$assume,1442
397," ",1442
0,=,0
397," ",1442
313,null,1442
0,),0
397,"
  ",1442
0,{,0
397,"
    ",1443
317,$oid,1444
397," ",1444
0,=,0
397," ",1444
313,spl_object_hash,1444
0,(,0
317,$entity,1444
0,),0
0,;,0
397,"

    ",1444
326,if,1446
397," ",1446
0,(,0
366,isset,1446
0,(,0
317,$this,1446
390,->,1446
313,entityStates,1446
0,[,0
317,$oid,1446
0,],0
0,),0
0,),0
397," ",1446
0,{,0
397,"
      ",1446
350,return,1447
397," ",1447
317,$this,1447
390,->,1447
313,entityStates,1447
0,[,0
317,$oid,1447
0,],0
0,;,0
397,"
    ",1447
0,},0
397,"

    ",1448
326,if,1450
397," ",1450
0,(,0
317,$assume,1450
397," ",1450
292,!==,1450
397," ",1450
313,null,1450
0,),0
397," ",1450
0,{,0
397,"
      ",1450
350,return,1451
397," ",1451
317,$assume,1451
0,;,0
397,"
    ",1451
0,},0
397,"

    ",1452
392,"// State can only be NEW or DETACHED, because MANAGED/REMOVED states are known.",1454
397,"
    ",1454
392,"// Note that you can not remember the NEW or DETACHED state in _entityStates since",1455
397,"
    ",1455
392,"// the UoW does not hold references to such objects and the object hash can be reused.",1456
397,"
    ",1456
392,"// More generally because the state may ""change"" between NEW/DETACHED without the UoW being aware of it.",1457
397,"
    ",1457
317,$class,1458
397," ",1458
0,=,0
397," ",1458
317,$this,1458
390,->,1458
313,em,1458
390,->,1458
313,getClassMetadata,1458
0,(,0
313,get_class,1458
0,(,0
317,$entity,1458
0,),0
0,),0
0,;,0
397,"
    ",1458
317,$id,1459
397,"    ",1459
0,=,0
397," ",1459
317,$class,1459
390,->,1459
313,getIdentifierValues,1459
0,(,0
317,$entity,1459
0,),0
0,;,0
397,"

    ",1459
326,if,1461
397," ",1461
0,(,0
397," ",1461
0,!,0
397," ",1461
317,$id,1461
0,),0
397," ",1461
0,{,0
397,"
      ",1461
350,return,1462
397," ",1462
313,self,1462
402,::,1462
313,STATE_NEW,1462
0,;,0
397,"
    ",1462
0,},0
397,"

    ",1463
326,if,1465
397," ",1465
0,(,0
317,$class,1465
390,->,1465
313,containsForeignIdentifier,1465
0,),0
397," ",1465
0,{,0
397,"
      ",1465
317,$id,1466
397," ",1466
0,=,0
397," ",1466
317,$this,1466
390,->,1466
313,identifierFlattener,1466
390,->,1466
313,flattenIdentifier,1466
0,(,0
317,$class,1466
0,",",0
397," ",1466
317,$id,1466
0,),0
0,;,0
397,"
    ",1466
0,},0
397,"

    ",1467
339,switch,1469
397," ",1469
0,(,0
313,true,1469
0,),0
397," ",1469
0,{,0
397,"
      ",1469
341,case,1470
397," ",1470
0,(,0
317,$class,1470
390,->,1470
313,isIdentifierNatural,1470
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",1470
392,"// Check for a version field, if available, to avoid a db lookup.",1471
397,"
        ",1471
326,if,1472
397," ",1472
0,(,0
317,$class,1472
390,->,1472
313,isVersioned,1472
0,),0
397," ",1472
0,{,0
397,"
          ",1472
350,return,1473
397," ",1473
0,(,0
317,$class,1473
390,->,1473
313,getFieldValue,1473
0,(,0
317,$entity,1473
0,",",0
397," ",1473
317,$class,1473
390,->,1473
313,versionField,1473
0,),0
0,),0
397,"
            ",1473
0,?,0
397," ",1474
313,self,1474
402,::,1474
313,STATE_DETACHED,1474
397,"
            ",1474
0,:,0
397," ",1475
313,self,1475
402,::,1475
313,STATE_NEW,1475
0,;,0
397,"
        ",1475
0,},0
397,"

        ",1476
392,"// Last try before db lookup: check the identity map.",1478
397,"
        ",1478
326,if,1479
397," ",1479
0,(,0
317,$this,1479
390,->,1479
313,tryGetById,1479
0,(,0
317,$id,1479
0,",",0
397," ",1479
317,$class,1479
390,->,1479
313,rootEntityName,1479
0,),0
0,),0
397," ",1479
0,{,0
397,"
          ",1479
350,return,1480
397," ",1480
313,self,1480
402,::,1480
313,STATE_DETACHED,1480
0,;,0
397,"
        ",1480
0,},0
397,"

        ",1481
392,"// db lookup",1483
397,"
        ",1483
326,if,1484
397," ",1484
0,(,0
317,$this,1484
390,->,1484
313,getEntityPersister,1484
0,(,0
317,$class,1484
390,->,1484
313,name,1484
0,),0
390,->,1484
313,exists,1484
0,(,0
317,$entity,1484
0,),0
0,),0
397," ",1484
0,{,0
397,"
          ",1484
350,return,1485
397," ",1485
313,self,1485
402,::,1485
313,STATE_DETACHED,1485
0,;,0
397,"
        ",1485
0,},0
397,"

        ",1486
350,return,1488
397," ",1488
313,self,1488
402,::,1488
313,STATE_NEW,1488
0,;,0
397,"

      ",1488
341,case,1490
397," ",1490
0,(,0
397," ",1490
0,!,0
397," ",1490
317,$class,1490
390,->,1490
313,idGenerator,1490
390,->,1490
313,isPostInsertGenerator,1490
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",1490
392,"// if we have a pre insert generator we can't be sure that having an id",1491
397,"
        ",1491
392,"// really means that the entity exists. We have to verify this through",1492
397,"
        ",1492
392,"// the last resort: a db lookup",1493
397,"

        ",1493
392,"// Last try before db lookup: check the identity map.",1495
397,"
        ",1495
326,if,1496
397," ",1496
0,(,0
317,$this,1496
390,->,1496
313,tryGetById,1496
0,(,0
317,$id,1496
0,",",0
397," ",1496
317,$class,1496
390,->,1496
313,rootEntityName,1496
0,),0
0,),0
397," ",1496
0,{,0
397,"
          ",1496
350,return,1497
397," ",1497
313,self,1497
402,::,1497
313,STATE_DETACHED,1497
0,;,0
397,"
        ",1497
0,},0
397,"

        ",1498
392,"// db lookup",1500
397,"
        ",1500
326,if,1501
397," ",1501
0,(,0
317,$this,1501
390,->,1501
313,getEntityPersister,1501
0,(,0
317,$class,1501
390,->,1501
313,name,1501
0,),0
390,->,1501
313,exists,1501
0,(,0
317,$entity,1501
0,),0
0,),0
397," ",1501
0,{,0
397,"
          ",1501
350,return,1502
397," ",1502
313,self,1502
402,::,1502
313,STATE_DETACHED,1502
0,;,0
397,"
        ",1502
0,},0
397,"

        ",1503
350,return,1505
397," ",1505
313,self,1505
402,::,1505
313,STATE_NEW,1505
0,;,0
397,"

      ",1505
342,default,1507
0,:,0
397,"
        ",1507
350,return,1508
397," ",1508
313,self,1508
402,::,1508
313,STATE_DETACHED,1508
0,;,0
397,"
    ",1508
0,},0
397,"
  ",1509
0,},0
397,"

  ",1510
393,"/**
   * INTERNAL:
   * Removes an entity from the identity map. This effectively detaches the
   * entity from the persistence management of Doctrine.
   *
   * @ignore
   *
   * @param object $entity
   *
   * @return boolean
   *
   * @throws ORMInvalidArgumentException
   */",1512
397,"
  ",1524
362,public,1525
397," ",1525
347,function,1525
397," ",1525
313,removeFromIdentityMap,1525
0,(,0
317,$entity,1525
0,),0
397,"
  ",1525
0,{,0
397,"
    ",1526
317,$oid,1527
397,"           ",1527
0,=,0
397," ",1527
313,spl_object_hash,1527
0,(,0
317,$entity,1527
0,),0
0,;,0
397,"
    ",1527
317,$classMetadata,1528
397," ",1528
0,=,0
397," ",1528
317,$this,1528
390,->,1528
313,em,1528
390,->,1528
313,getClassMetadata,1528
0,(,0
313,get_class,1528
0,(,0
317,$entity,1528
0,),0
0,),0
0,;,0
397,"
    ",1528
317,$idHash,1529
397,"        ",1529
0,=,0
397," ",1529
313,implode,1529
0,(,0
320,"' '",1529
0,",",0
397," ",1529
317,$this,1529
390,->,1529
313,entityIdentifiers,1529
0,[,0
317,$oid,1529
0,],0
0,),0
0,;,0
397,"

    ",1529
326,if,1531
397," ",1531
0,(,0
317,$idHash,1531
397," ",1531
291,===,1531
397," ",1531
320,'',1531
0,),0
397," ",1531
0,{,0
397,"
      ",1531
258,throw,1532
397," ",1532
313,ORMInvalidArgumentException,1532
402,::,1532
313,entityHasNoIdentity,1532
0,(,0
317,$entity,1532
0,",",0
397," ",1532
320,"""remove from identity map""",1532
0,),0
0,;,0
397,"
    ",1532
0,},0
397,"

    ",1533
317,$className,1535
397," ",1535
0,=,0
397," ",1535
317,$classMetadata,1535
390,->,1535
313,rootEntityName,1535
0,;,0
397,"

    ",1535
326,if,1537
397," ",1537
0,(,0
366,isset,1537
0,(,0
317,$this,1537
390,->,1537
313,identityMap,1537
0,[,0
317,$className,1537
0,],0
0,[,0
317,$idHash,1537
0,],0
0,),0
0,),0
397," ",1537
0,{,0
397,"
      ",1537
365,unset,1538
0,(,0
317,$this,1538
390,->,1538
313,identityMap,1538
0,[,0
317,$className,1538
0,],0
0,[,0
317,$idHash,1538
0,],0
0,),0
0,;,0
397,"
      ",1538
365,unset,1539
0,(,0
317,$this,1539
390,->,1539
313,readOnlyObjects,1539
0,[,0
317,$oid,1539
0,],0
0,),0
0,;,0
397,"

      ",1539
392,"//$this->entityStates[$oid] = self::STATE_DETACHED;",1541
397,"

      ",1541
350,return,1543
397," ",1543
313,true,1543
0,;,0
397,"
    ",1543
0,},0
397,"

    ",1544
350,return,1546
397," ",1546
313,false,1546
0,;,0
397,"
  ",1546
0,},0
397,"

  ",1547
393,"/**
   * INTERNAL:
   * Gets an entity in the identity map by its identifier hash.
   *
   * @ignore
   *
   * @param string $idHash
   * @param string $rootClassName
   *
   * @return object
   */",1549
397,"
  ",1559
362,public,1560
397," ",1560
347,function,1560
397," ",1560
313,getByIdHash,1560
0,(,0
317,$idHash,1560
0,",",0
397," ",1560
317,$rootClassName,1560
0,),0
397,"
  ",1560
0,{,0
397,"
    ",1561
350,return,1562
397," ",1562
317,$this,1562
390,->,1562
313,identityMap,1562
0,[,0
317,$rootClassName,1562
0,],0
0,[,0
317,$idHash,1562
0,],0
0,;,0
397,"
  ",1562
0,},0
397,"

  ",1563
393,"/**
   * INTERNAL:
   * Tries to get an entity by its identifier hash. If no entity is found for
   * the given hash, FALSE is returned.
   *
   * @ignore
   *
   * @param mixed  $idHash        (must be possible to cast it to string)
   * @param string $rootClassName
   *
   * @return object|bool The found entity or FALSE.
   */",1565
397,"
  ",1576
362,public,1577
397," ",1577
347,function,1577
397," ",1577
313,tryGetByIdHash,1577
0,(,0
317,$idHash,1577
0,",",0
397," ",1577
317,$rootClassName,1577
0,),0
397,"
  ",1577
0,{,0
397,"
    ",1578
317,$stringIdHash,1579
397," ",1579
0,=,0
397," ",1579
301,(string),1579
397," ",1579
317,$idHash,1579
0,;,0
397,"

    ",1579
326,if,1581
397," ",1581
0,(,0
366,isset,1581
0,(,0
317,$this,1581
390,->,1581
313,identityMap,1581
0,[,0
317,$rootClassName,1581
0,],0
0,[,0
317,$stringIdHash,1581
0,],0
0,),0
0,),0
397," ",1581
0,{,0
397,"
      ",1581
350,return,1582
397," ",1582
317,$this,1582
390,->,1582
313,identityMap,1582
0,[,0
317,$rootClassName,1582
0,],0
0,[,0
317,$stringIdHash,1582
0,],0
0,;,0
397,"
    ",1582
0,},0
397,"

    ",1583
350,return,1585
397," ",1585
313,false,1585
0,;,0
397,"
  ",1585
0,},0
397,"

  ",1586
393,"/**
   * Checks whether an entity is registered in the identity map of this UnitOfWork.
   *
   * @param object $entity
   *
   * @return boolean
   */",1588
397,"
  ",1594
362,public,1595
397," ",1595
347,function,1595
397," ",1595
313,isInIdentityMap,1595
0,(,0
317,$entity,1595
0,),0
397,"
  ",1595
0,{,0
397,"
    ",1596
317,$oid,1597
397," ",1597
0,=,0
397," ",1597
313,spl_object_hash,1597
0,(,0
317,$entity,1597
0,),0
0,;,0
397,"

    ",1597
326,if,1599
397," ",1599
0,(,0
397," ",1599
0,!,0
397," ",1599
366,isset,1599
0,(,0
317,$this,1599
390,->,1599
313,entityIdentifiers,1599
0,[,0
317,$oid,1599
0,],0
0,),0
0,),0
397," ",1599
0,{,0
397,"
      ",1599
350,return,1600
397," ",1600
313,false,1600
0,;,0
397,"
    ",1600
0,},0
397,"

    ",1601
317,$classMetadata,1603
397," ",1603
0,=,0
397," ",1603
317,$this,1603
390,->,1603
313,em,1603
390,->,1603
313,getClassMetadata,1603
0,(,0
313,get_class,1603
0,(,0
317,$entity,1603
0,),0
0,),0
0,;,0
397,"
    ",1603
317,$idHash,1604
397,"        ",1604
0,=,0
397," ",1604
313,implode,1604
0,(,0
320,"' '",1604
0,",",0
397," ",1604
317,$this,1604
390,->,1604
313,entityIdentifiers,1604
0,[,0
317,$oid,1604
0,],0
0,),0
0,;,0
397,"

    ",1604
326,if,1606
397," ",1606
0,(,0
317,$idHash,1606
397," ",1606
291,===,1606
397," ",1606
320,'',1606
0,),0
397," ",1606
0,{,0
397,"
      ",1606
350,return,1607
397," ",1607
313,false,1607
0,;,0
397,"
    ",1607
0,},0
397,"

    ",1608
350,return,1610
397," ",1610
366,isset,1610
0,(,0
317,$this,1610
390,->,1610
313,identityMap,1610
0,[,0
317,$classMetadata,1610
390,->,1610
313,rootEntityName,1610
0,],0
0,[,0
317,$idHash,1610
0,],0
0,),0
0,;,0
397,"
  ",1610
0,},0
397,"

  ",1611
393,"/**
   * INTERNAL:
   * Checks whether an identifier hash exists in the identity map.
   *
   * @ignore
   *
   * @param string $idHash
   * @param string $rootClassName
   *
   * @return boolean
   */",1613
397,"
  ",1623
362,public,1624
397," ",1624
347,function,1624
397," ",1624
313,containsIdHash,1624
0,(,0
317,$idHash,1624
0,",",0
397," ",1624
317,$rootClassName,1624
0,),0
397,"
  ",1624
0,{,0
397,"
    ",1625
350,return,1626
397," ",1626
366,isset,1626
0,(,0
317,$this,1626
390,->,1626
313,identityMap,1626
0,[,0
317,$rootClassName,1626
0,],0
0,[,0
317,$idHash,1626
0,],0
0,),0
0,;,0
397,"
  ",1626
0,},0
397,"

  ",1627
393,"/**
   * Persists an entity as part of the current unit of work.
   *
   * @param object $entity The entity to persist.
   *
   * @return void
   */",1629
397,"
  ",1635
362,public,1636
397," ",1636
347,function,1636
397," ",1636
313,persist,1636
0,(,0
317,$entity,1636
0,),0
397,"
  ",1636
0,{,0
397,"
    ",1637
317,$visited,1638
397," ",1638
0,=,0
397," ",1638
377,array,1638
0,(,0
0,),0
0,;,0
397,"

    ",1638
317,$this,1640
390,->,1640
313,doPersist,1640
0,(,0
317,$entity,1640
0,",",0
397," ",1640
317,$visited,1640
0,),0
0,;,0
397,"
  ",1640
0,},0
397,"

  ",1641
393,"/**
   * Persists an entity as part of the current unit of work.
   *
   * This method is internally called during persist() cascades as it tracks
   * the already visited entities to prevent infinite recursions.
   *
   * @param object $entity  The entity to persist.
   * @param array  $visited The already visited entities.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws UnexpectedValueException
   */",1643
397,"
  ",1656
360,private,1657
397," ",1657
347,function,1657
397," ",1657
313,doPersist,1657
0,(,0
317,$entity,1657
0,",",0
397," ",1657
377,array,1657
397," ",1657
288,&,1657
317,$visited,1657
0,),0
397,"
  ",1657
0,{,0
397,"
    ",1658
317,$oid,1659
397," ",1659
0,=,0
397," ",1659
313,spl_object_hash,1659
0,(,0
317,$entity,1659
0,),0
0,;,0
397,"

    ",1659
326,if,1661
397," ",1661
0,(,0
366,isset,1661
0,(,0
317,$visited,1661
0,[,0
317,$oid,1661
0,],0
0,),0
0,),0
397," ",1661
0,{,0
397,"
      ",1661
350,return,1662
0,;,0
397," ",1662
392,"// Prevent infinite recursion",1662
397,"
    ",1662
0,},0
397,"

    ",1663
317,$visited,1665
0,[,0
317,$oid,1665
0,],0
397," ",1665
0,=,0
397," ",1665
317,$entity,1665
0,;,0
397," ",1665
392,"// Mark visited",1665
397,"

    ",1665
317,$class,1667
397," ",1667
0,=,0
397," ",1667
317,$this,1667
390,->,1667
313,em,1667
390,->,1667
313,getClassMetadata,1667
0,(,0
313,get_class,1667
0,(,0
317,$entity,1667
0,),0
0,),0
0,;,0
397,"

    ",1667
392,"// We assume NEW, so DETACHED entities result in an exception on flush (constraint violation).",1669
397,"
    ",1669
392,"// If we would detect DETACHED here we would throw an exception anyway with the same",1670
397,"
    ",1670
392,"// consequences (not recoverable/programming error), so just assuming NEW here",1671
397,"
    ",1671
392,"// lets us avoid some database lookups for entities with natural identifiers.",1672
397,"
    ",1672
317,$entityState,1673
397," ",1673
0,=,0
397," ",1673
317,$this,1673
390,->,1673
313,getEntityState,1673
0,(,0
317,$entity,1673
0,",",0
397," ",1673
313,self,1673
402,::,1673
313,STATE_NEW,1673
0,),0
0,;,0
397,"

    ",1673
339,switch,1675
397," ",1675
0,(,0
317,$entityState,1675
0,),0
397," ",1675
0,{,0
397,"
      ",1675
341,case,1676
397," ",1676
313,self,1676
402,::,1676
313,STATE_MANAGED,1676
0,:,0
397,"
        ",1676
392,"// Nothing to do, except if policy is ""deferred explicit""",1677
397,"
        ",1677
326,if,1678
397," ",1678
0,(,0
317,$class,1678
390,->,1678
313,isChangeTrackingDeferredExplicit,1678
0,(,0
0,),0
0,),0
397," ",1678
0,{,0
397,"
          ",1678
317,$this,1679
390,->,1679
313,scheduleForDirtyCheck,1679
0,(,0
317,$entity,1679
0,),0
0,;,0
397,"
        ",1679
0,},0
397,"
        ",1680
344,break,1681
0,;,0
397,"

      ",1681
341,case,1683
397," ",1683
313,self,1683
402,::,1683
313,STATE_NEW,1683
0,:,0
397,"
        ",1683
317,$this,1684
390,->,1684
313,persistNew,1684
0,(,0
317,$class,1684
0,",",0
397," ",1684
317,$entity,1684
0,),0
0,;,0
397,"
        ",1684
344,break,1685
0,;,0
397,"

      ",1685
341,case,1687
397," ",1687
313,self,1687
402,::,1687
313,STATE_REMOVED,1687
0,:,0
397,"
        ",1687
392,"// Entity becomes managed again",1688
397,"
        ",1688
365,unset,1689
0,(,0
317,$this,1689
390,->,1689
313,entityDeletions,1689
0,[,0
317,$oid,1689
0,],0
0,),0
0,;,0
397,"
        ",1689
317,$this,1690
390,->,1690
313,addToIdentityMap,1690
0,(,0
317,$entity,1690
0,),0
0,;,0
397,"

        ",1690
317,$this,1692
390,->,1692
313,entityStates,1692
0,[,0
317,$oid,1692
0,],0
397," ",1692
0,=,0
397," ",1692
313,self,1692
402,::,1692
313,STATE_MANAGED,1692
0,;,0
397,"
        ",1692
344,break,1693
0,;,0
397,"

      ",1693
341,case,1695
397," ",1695
313,self,1695
402,::,1695
313,STATE_DETACHED,1695
0,:,0
397,"
        ",1695
392,"// Can actually not happen right now since we assume STATE_NEW.",1696
397,"
        ",1696
258,throw,1697
397," ",1697
313,ORMInvalidArgumentException,1697
402,::,1697
313,detachedEntityCannot,1697
0,(,0
317,$entity,1697
0,",",0
397," ",1697
320,"""persisted""",1697
0,),0
0,;,0
397,"

      ",1697
342,default,1699
0,:,0
397,"
        ",1699
258,throw,1700
397," ",1700
324,new,1700
397," ",1700
313,UnexpectedValueException,1700
0,(,0
0,"""",0
319,"Unexpected entity state: ",1700
317,$entityState,1700
319,.,1700
0,"""",0
397," ",1700
0,.,0
397," ",1700
313,self,1700
402,::,1700
313,objToStr,1700
0,(,0
317,$entity,1700
0,),0
0,),0
0,;,0
397,"
    ",1700
0,},0
397,"

    ",1701
317,$this,1703
390,->,1703
313,cascadePersist,1703
0,(,0
317,$entity,1703
0,",",0
397," ",1703
317,$visited,1703
0,),0
0,;,0
397,"
  ",1703
0,},0
397,"

  ",1704
393,"/**
   * Deletes an entity as part of the current unit of work.
   *
   * @param object $entity The entity to remove.
   *
   * @return void
   */",1706
397,"
  ",1712
362,public,1713
397," ",1713
347,function,1713
397," ",1713
313,remove,1713
0,(,0
317,$entity,1713
0,),0
397,"
  ",1713
0,{,0
397,"
    ",1714
317,$visited,1715
397," ",1715
0,=,0
397," ",1715
377,array,1715
0,(,0
0,),0
0,;,0
397,"

    ",1715
317,$this,1717
390,->,1717
313,doRemove,1717
0,(,0
317,$entity,1717
0,",",0
397," ",1717
317,$visited,1717
0,),0
0,;,0
397,"
  ",1717
0,},0
397,"

  ",1718
393,"/**
   * Deletes an entity as part of the current unit of work.
   *
   * This method is internally called during delete() cascades as it tracks
   * the already visited entities to prevent infinite recursions.
   *
   * @param object $entity  The entity to delete.
   * @param array  $visited The map of the already visited entities.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the instance is a detached entity.
   * @throws UnexpectedValueException
   */",1720
397,"
  ",1733
360,private,1734
397," ",1734
347,function,1734
397," ",1734
313,doRemove,1734
0,(,0
317,$entity,1734
0,",",0
397," ",1734
377,array,1734
397," ",1734
288,&,1734
317,$visited,1734
0,),0
397,"
  ",1734
0,{,0
397,"
    ",1735
317,$oid,1736
397," ",1736
0,=,0
397," ",1736
313,spl_object_hash,1736
0,(,0
317,$entity,1736
0,),0
0,;,0
397,"

    ",1736
326,if,1738
397," ",1738
0,(,0
366,isset,1738
0,(,0
317,$visited,1738
0,[,0
317,$oid,1738
0,],0
0,),0
0,),0
397," ",1738
0,{,0
397,"
      ",1738
350,return,1739
0,;,0
397," ",1739
392,"// Prevent infinite recursion",1739
397,"
    ",1739
0,},0
397,"

    ",1740
317,$visited,1742
0,[,0
317,$oid,1742
0,],0
397," ",1742
0,=,0
397," ",1742
317,$entity,1742
0,;,0
397," ",1742
392,"// mark visited",1742
397,"

    ",1742
392,"// Cascade first, because scheduleForDelete() removes the entity from the identity map, which",1744
397,"
    ",1744
392,"// can cause problems when a lazy proxy has to be initialized for the cascade operation.",1745
397,"
    ",1745
317,$this,1746
390,->,1746
313,cascadeRemove,1746
0,(,0
317,$entity,1746
0,",",0
397," ",1746
317,$visited,1746
0,),0
0,;,0
397,"

    ",1746
317,$class,1748
397,"       ",1748
0,=,0
397," ",1748
317,$this,1748
390,->,1748
313,em,1748
390,->,1748
313,getClassMetadata,1748
0,(,0
313,get_class,1748
0,(,0
317,$entity,1748
0,),0
0,),0
0,;,0
397,"
    ",1748
317,$entityState,1749
397," ",1749
0,=,0
397," ",1749
317,$this,1749
390,->,1749
313,getEntityState,1749
0,(,0
317,$entity,1749
0,),0
0,;,0
397,"

    ",1749
339,switch,1751
397," ",1751
0,(,0
317,$entityState,1751
0,),0
397," ",1751
0,{,0
397,"
      ",1751
341,case,1752
397," ",1752
313,self,1752
402,::,1752
313,STATE_NEW,1752
0,:,0
397,"
      ",1752
341,case,1753
397," ",1753
313,self,1753
402,::,1753
313,STATE_REMOVED,1753
0,:,0
397,"
        ",1753
392,"// nothing to do",1754
397,"
        ",1754
344,break,1755
0,;,0
397,"

      ",1755
341,case,1757
397," ",1757
313,self,1757
402,::,1757
313,STATE_MANAGED,1757
0,:,0
397,"
        ",1757
317,$invoke,1758
397," ",1758
0,=,0
397," ",1758
317,$this,1758
390,->,1758
313,listenersInvoker,1758
390,->,1758
313,getSubscribedSystems,1758
0,(,0
317,$class,1758
0,",",0
397," ",1758
313,Events,1758
402,::,1758
313,preRemove,1758
0,),0
0,;,0
397,"

        ",1758
326,if,1760
397," ",1760
0,(,0
317,$invoke,1760
397," ",1760
292,!==,1760
397," ",1760
313,ListenersInvoker,1760
402,::,1760
313,INVOKE_NONE,1760
0,),0
397," ",1760
0,{,0
397,"
          ",1760
317,$this,1761
390,->,1761
313,listenersInvoker,1761
390,->,1761
313,invoke,1761
0,(,0
317,$class,1761
0,",",0
397," ",1761
313,Events,1761
402,::,1761
313,preRemove,1761
0,",",0
397," ",1761
317,$entity,1761
0,",",0
397," ",1761
324,new,1761
397," ",1761
313,LifecycleEventArgs,1761
0,(,0
317,$entity,1761
0,",",0
397," ",1761
317,$this,1761
390,->,1761
313,em,1761
0,),0
0,",",0
397," ",1761
317,$invoke,1761
0,),0
0,;,0
397,"
        ",1761
0,},0
397,"

        ",1762
317,$this,1764
390,->,1764
313,scheduleForDelete,1764
0,(,0
317,$entity,1764
0,),0
0,;,0
397,"
        ",1764
344,break,1765
0,;,0
397,"

      ",1765
341,case,1767
397," ",1767
313,self,1767
402,::,1767
313,STATE_DETACHED,1767
0,:,0
397,"
        ",1767
258,throw,1768
397," ",1768
313,ORMInvalidArgumentException,1768
402,::,1768
313,detachedEntityCannot,1768
0,(,0
317,$entity,1768
0,",",0
397," ",1768
320,"""removed""",1768
0,),0
0,;,0
397,"
      ",1768
342,default,1769
0,:,0
397,"
        ",1769
258,throw,1770
397," ",1770
324,new,1770
397," ",1770
313,UnexpectedValueException,1770
0,(,0
0,"""",0
319,"Unexpected entity state: ",1770
317,$entityState,1770
319,.,1770
0,"""",0
397," ",1770
0,.,0
397," ",1770
313,self,1770
402,::,1770
313,objToStr,1770
0,(,0
317,$entity,1770
0,),0
0,),0
0,;,0
397,"
    ",1770
0,},0
397,"

  ",1771
0,},0
397,"

  ",1773
393,"/**
   * Merges the state of the given detached entity into this UnitOfWork.
   *
   * @param object $entity
   *
   * @return object The managed copy of the entity.
   *
   * @throws OptimisticLockException If the entity uses optimistic locking through a version
   *         attribute and the version check against the managed copy fails.
   *
   * @todo Require active transaction!? OptimisticLockException may result in undefined state!?
   */",1775
397,"
  ",1786
362,public,1787
397," ",1787
347,function,1787
397," ",1787
313,merge,1787
0,(,0
317,$entity,1787
0,),0
397,"
  ",1787
0,{,0
397,"
    ",1788
317,$visited,1789
397," ",1789
0,=,0
397," ",1789
377,array,1789
0,(,0
0,),0
0,;,0
397,"

    ",1789
350,return,1791
397," ",1791
317,$this,1791
390,->,1791
313,doMerge,1791
0,(,0
317,$entity,1791
0,",",0
397," ",1791
317,$visited,1791
0,),0
0,;,0
397,"
  ",1791
0,},0
397,"

  ",1792
393,"/**
   * Executes a merge operation on an entity.
   *
   * @param object      $entity
   * @param array       $visited
   * @param object|null $prevManagedCopy
   * @param array|null  $assoc
   *
   * @return object The managed copy of the entity.
   *
   * @throws OptimisticLockException If the entity uses optimistic locking through a version
   *         attribute and the version check against the managed copy fails.
   * @throws ORMInvalidArgumentException If the entity instance is NEW.
   * @throws EntityNotFoundException
   */",1794
397,"
  ",1808
360,private,1809
397," ",1809
347,function,1809
397," ",1809
313,doMerge,1809
0,(,0
317,$entity,1809
0,",",0
397," ",1809
377,array,1809
397," ",1809
288,&,1809
317,$visited,1809
0,",",0
397," ",1809
317,$prevManagedCopy,1809
397," ",1809
0,=,0
397," ",1809
313,null,1809
0,",",0
397," ",1809
317,$assoc,1809
397," ",1809
0,=,0
397," ",1809
313,null,1809
0,),0
397,"
  ",1809
0,{,0
397,"
    ",1810
317,$oid,1811
397," ",1811
0,=,0
397," ",1811
313,spl_object_hash,1811
0,(,0
317,$entity,1811
0,),0
0,;,0
397,"

    ",1811
326,if,1813
397," ",1813
0,(,0
366,isset,1813
0,(,0
317,$visited,1813
0,[,0
317,$oid,1813
0,],0
0,),0
0,),0
397," ",1813
0,{,0
397,"
      ",1813
317,$managedCopy,1814
397," ",1814
0,=,0
397," ",1814
317,$visited,1814
0,[,0
317,$oid,1814
0,],0
0,;,0
397,"

      ",1814
326,if,1816
397," ",1816
0,(,0
317,$prevManagedCopy,1816
397," ",1816
292,!==,1816
397," ",1816
313,null,1816
0,),0
397," ",1816
0,{,0
397,"
        ",1816
317,$this,1817
390,->,1817
313,updateAssociationWithMergedEntity,1817
0,(,0
317,$entity,1817
0,",",0
397," ",1817
317,$assoc,1817
0,",",0
397," ",1817
317,$prevManagedCopy,1817
0,",",0
397," ",1817
317,$managedCopy,1817
0,),0
0,;,0
397,"
      ",1817
0,},0
397,"

      ",1818
350,return,1820
397," ",1820
317,$managedCopy,1820
0,;,0
397,"
    ",1820
0,},0
397,"

    ",1821
317,$class,1823
397," ",1823
0,=,0
397," ",1823
317,$this,1823
390,->,1823
313,em,1823
390,->,1823
313,getClassMetadata,1823
0,(,0
313,get_class,1823
0,(,0
317,$entity,1823
0,),0
0,),0
0,;,0
397,"

    ",1823
392,"// First we assume DETACHED, although it can still be NEW but we can avoid",1825
397,"
    ",1825
392,"// an extra db-roundtrip this way. If it is not MANAGED but has an identity,",1826
397,"
    ",1826
392,"// we need to fetch it from the db anyway in order to merge.",1827
397,"
    ",1827
392,"// MANAGED entities are ignored by the merge operation.",1828
397,"
    ",1828
317,$managedCopy,1829
397," ",1829
0,=,0
397," ",1829
317,$entity,1829
0,;,0
397,"

    ",1829
326,if,1831
397," ",1831
0,(,0
317,$this,1831
390,->,1831
313,getEntityState,1831
0,(,0
317,$entity,1831
0,",",0
397," ",1831
313,self,1831
402,::,1831
313,STATE_DETACHED,1831
0,),0
397," ",1831
292,!==,1831
397," ",1831
313,self,1831
402,::,1831
313,STATE_MANAGED,1831
0,),0
397," ",1831
0,{,0
397,"
      ",1831
392,"// Try to look the entity up in the identity map.",1832
397,"
      ",1832
317,$id,1833
397," ",1833
0,=,0
397," ",1833
317,$class,1833
390,->,1833
313,getIdentifierValues,1833
0,(,0
317,$entity,1833
0,),0
0,;,0
397,"

      ",1833
392,"// If there is no ID, it is actually NEW.",1835
397,"
      ",1835
326,if,1836
397," ",1836
0,(,0
397," ",1836
0,!,0
397," ",1836
317,$id,1836
0,),0
397," ",1836
0,{,0
397,"
        ",1836
317,$managedCopy,1837
397," ",1837
0,=,0
397," ",1837
317,$this,1837
390,->,1837
313,newInstance,1837
0,(,0
317,$class,1837
0,),0
0,;,0
397,"

        ",1837
317,$this,1839
390,->,1839
313,persistNew,1839
0,(,0
317,$class,1839
0,",",0
397," ",1839
317,$managedCopy,1839
0,),0
0,;,0
397,"
      ",1839
0,},0
397," ",1840
310,else,1840
397," ",1840
0,{,0
397,"
        ",1840
317,$flatId,1841
397," ",1841
0,=,0
397," ",1841
0,(,0
317,$class,1841
390,->,1841
313,containsForeignIdentifier,1841
0,),0
397,"
          ",1841
0,?,0
397," ",1842
317,$this,1842
390,->,1842
313,identifierFlattener,1842
390,->,1842
313,flattenIdentifier,1842
0,(,0
317,$class,1842
0,",",0
397," ",1842
317,$id,1842
0,),0
397,"
          ",1842
0,:,0
397," ",1843
317,$id,1843
0,;,0
397,"

        ",1843
317,$managedCopy,1845
397," ",1845
0,=,0
397," ",1845
317,$this,1845
390,->,1845
313,tryGetById,1845
0,(,0
317,$flatId,1845
0,",",0
397," ",1845
317,$class,1845
390,->,1845
313,rootEntityName,1845
0,),0
0,;,0
397,"

        ",1845
326,if,1847
397," ",1847
0,(,0
317,$managedCopy,1847
0,),0
397," ",1847
0,{,0
397,"
          ",1847
392,"// We have the entity in-memory already, just make sure its not removed.",1848
397,"
          ",1848
326,if,1849
397," ",1849
0,(,0
317,$this,1849
390,->,1849
313,getEntityState,1849
0,(,0
317,$managedCopy,1849
0,),0
397," ",1849
289,==,1849
397," ",1849
313,self,1849
402,::,1849
313,STATE_REMOVED,1849
0,),0
397," ",1849
0,{,0
397,"
            ",1849
258,throw,1850
397," ",1850
313,ORMInvalidArgumentException,1850
402,::,1850
313,entityIsRemoved,1850
0,(,0
317,$managedCopy,1850
0,",",0
397," ",1850
320,"""merge""",1850
0,),0
0,;,0
397,"
          ",1850
0,},0
397,"
        ",1851
0,},0
397," ",1852
310,else,1852
397," ",1852
0,{,0
397,"
          ",1852
392,"// We need to fetch the managed copy in order to merge.",1853
397,"
          ",1853
317,$managedCopy,1854
397," ",1854
0,=,0
397," ",1854
317,$this,1854
390,->,1854
313,em,1854
390,->,1854
313,find,1854
0,(,0
317,$class,1854
390,->,1854
313,name,1854
0,",",0
397," ",1854
317,$flatId,1854
0,),0
0,;,0
397,"
        ",1854
0,},0
397,"

        ",1855
326,if,1857
397," ",1857
0,(,0
317,$managedCopy,1857
397," ",1857
291,===,1857
397," ",1857
313,null,1857
0,),0
397," ",1857
0,{,0
397,"
          ",1857
392,"// If the identifier is ASSIGNED, it is NEW, otherwise an error",1858
397,"
          ",1858
392,"// since the managed entity was not found.",1859
397,"
          ",1859
326,if,1860
397," ",1860
0,(,0
397," ",1860
0,!,0
397," ",1860
317,$class,1860
390,->,1860
313,isIdentifierNatural,1860
0,(,0
0,),0
0,),0
397," ",1860
0,{,0
397,"
            ",1860
258,throw,1861
397," ",1861
313,EntityNotFoundException,1861
402,::,1861
313,fromClassNameAndIdentifier,1861
0,(,0
397,"
              ",1861
317,$class,1862
390,->,1862
313,getName,1862
0,(,0
0,),0
0,",",0
397,"
              ",1862
317,$this,1863
390,->,1863
313,identifierFlattener,1863
390,->,1863
313,flattenIdentifier,1863
0,(,0
317,$class,1863
0,",",0
397," ",1863
317,$id,1863
0,),0
397,"
            ",1863
0,),0
0,;,0
397,"
          ",1864
0,},0
397,"

          ",1865
317,$managedCopy,1867
397," ",1867
0,=,0
397," ",1867
317,$this,1867
390,->,1867
313,newInstance,1867
0,(,0
317,$class,1867
0,),0
0,;,0
397,"
          ",1867
317,$class,1868
390,->,1868
313,setIdentifierValues,1868
0,(,0
317,$managedCopy,1868
0,",",0
397," ",1868
317,$id,1868
0,),0
0,;,0
397,"

          ",1868
317,$this,1870
390,->,1870
313,persistNew,1870
0,(,0
317,$class,1870
0,",",0
397," ",1870
317,$managedCopy,1870
0,),0
0,;,0
397,"
        ",1870
0,},0
397,"
      ",1871
0,},0
397,"

      ",1872
326,if,1874
397," ",1874
0,(,0
317,$class,1874
390,->,1874
313,isVersioned,1874
397," ",1874
286,&&,1874
397," ",1874
317,$this,1874
390,->,1874
313,isLoaded,1874
0,(,0
317,$managedCopy,1874
0,),0
397," ",1874
286,&&,1874
397," ",1874
317,$this,1874
390,->,1874
313,isLoaded,1874
0,(,0
317,$entity,1874
0,),0
0,),0
397," ",1874
0,{,0
397,"
        ",1874
317,$reflField,1875
397,"          ",1875
0,=,0
397," ",1875
317,$class,1875
390,->,1875
313,reflFields,1875
0,[,0
317,$class,1875
390,->,1875
313,versionField,1875
0,],0
0,;,0
397,"
        ",1875
317,$managedCopyVersion,1876
397," ",1876
0,=,0
397," ",1876
317,$reflField,1876
390,->,1876
313,getValue,1876
0,(,0
317,$managedCopy,1876
0,),0
0,;,0
397,"
        ",1876
317,$entityVersion,1877
397,"      ",1877
0,=,0
397," ",1877
317,$reflField,1877
390,->,1877
313,getValue,1877
0,(,0
317,$entity,1877
0,),0
0,;,0
397,"

        ",1877
392,"// Throw exception if versions don't match.",1879
397,"
        ",1879
326,if,1880
397," ",1880
0,(,0
317,$managedCopyVersion,1880
397," ",1880
290,!=,1880
397," ",1880
317,$entityVersion,1880
0,),0
397," ",1880
0,{,0
397,"
          ",1880
258,throw,1881
397," ",1881
313,OptimisticLockException,1881
402,::,1881
313,lockFailedVersionMismatch,1881
0,(,0
317,$entity,1881
0,",",0
397," ",1881
317,$entityVersion,1881
0,",",0
397," ",1881
317,$managedCopyVersion,1881
0,),0
0,;,0
397,"
        ",1881
0,},0
397,"
      ",1882
0,},0
397,"

      ",1883
317,$visited,1885
0,[,0
317,$oid,1885
0,],0
397," ",1885
0,=,0
397," ",1885
317,$managedCopy,1885
0,;,0
397," ",1885
392,"// mark visited",1885
397,"

      ",1885
326,if,1887
397," ",1887
0,(,0
317,$this,1887
390,->,1887
313,isLoaded,1887
0,(,0
317,$entity,1887
0,),0
0,),0
397," ",1887
0,{,0
397,"
        ",1887
326,if,1888
397," ",1888
0,(,0
317,$managedCopy,1888
397," ",1888
298,instanceof,1888
397," ",1888
313,Proxy,1888
397," ",1888
286,&&,1888
397," ",1888
0,!,0
397," ",1888
317,$managedCopy,1888
390,->,1888
313,__isInitialized,1888
0,(,0
0,),0
0,),0
397," ",1888
0,{,0
397,"
          ",1888
317,$managedCopy,1889
390,->,1889
313,__load,1889
0,(,0
0,),0
0,;,0
397,"
        ",1889
0,},0
397,"

        ",1890
317,$this,1892
390,->,1892
313,mergeEntityStateIntoManagedCopy,1892
0,(,0
317,$entity,1892
0,",",0
397," ",1892
317,$managedCopy,1892
0,),0
0,;,0
397,"
      ",1892
0,},0
397,"

      ",1893
326,if,1895
397," ",1895
0,(,0
317,$class,1895
390,->,1895
313,isChangeTrackingDeferredExplicit,1895
0,(,0
0,),0
0,),0
397," ",1895
0,{,0
397,"
        ",1895
317,$this,1896
390,->,1896
313,scheduleForDirtyCheck,1896
0,(,0
317,$entity,1896
0,),0
0,;,0
397,"
      ",1896
0,},0
397,"
    ",1897
0,},0
397,"

    ",1898
326,if,1900
397," ",1900
0,(,0
317,$prevManagedCopy,1900
397," ",1900
292,!==,1900
397," ",1900
313,null,1900
0,),0
397," ",1900
0,{,0
397,"
      ",1900
317,$this,1901
390,->,1901
313,updateAssociationWithMergedEntity,1901
0,(,0
317,$entity,1901
0,",",0
397," ",1901
317,$assoc,1901
0,",",0
397," ",1901
317,$prevManagedCopy,1901
0,",",0
397," ",1901
317,$managedCopy,1901
0,),0
0,;,0
397,"
    ",1901
0,},0
397,"

    ",1902
392,"// Mark the managed copy visited as well",1904
397,"
    ",1904
317,$visited,1905
0,[,0
313,spl_object_hash,1905
0,(,0
317,$managedCopy,1905
0,),0
0,],0
397," ",1905
0,=,0
397," ",1905
317,$managedCopy,1905
0,;,0
397,"

    ",1905
317,$this,1907
390,->,1907
313,cascadeMerge,1907
0,(,0
317,$entity,1907
0,",",0
397," ",1907
317,$managedCopy,1907
0,",",0
397," ",1907
317,$visited,1907
0,),0
0,;,0
397,"

    ",1907
350,return,1909
397," ",1909
317,$managedCopy,1909
0,;,0
397,"
  ",1909
0,},0
397,"

  ",1910
393,"/**
   * Tests if an entity is loaded - must either be a loaded proxy or not a proxy
   *
   * @param object $entity
   *
   * @return bool
   */",1912
397,"
  ",1918
360,private,1919
397," ",1919
347,function,1919
397," ",1919
313,isLoaded,1919
0,(,0
317,$entity,1919
0,),0
397,"
  ",1919
0,{,0
397,"
    ",1920
350,return,1921
397," ",1921
0,!,0
0,(,0
317,$entity,1921
397," ",1921
298,instanceof,1921
397," ",1921
313,Proxy,1921
0,),0
397," ",1921
285,||,1921
397," ",1921
317,$entity,1921
390,->,1921
313,__isInitialized,1921
0,(,0
0,),0
0,;,0
397,"
  ",1921
0,},0
397,"

  ",1922
393,"/**
   * Sets/adds associated managed copies into the previous entity's association field
   *
   * @param object $entity
   * @param array  $association
   * @param object $previousManagedCopy
   * @param object $managedCopy
   *
   * @return void
   */",1924
397,"
  ",1933
360,private,1934
397," ",1934
347,function,1934
397," ",1934
313,updateAssociationWithMergedEntity,1934
0,(,0
317,$entity,1934
0,",",0
397," ",1934
377,array,1934
397," ",1934
317,$association,1934
0,",",0
397," ",1934
317,$previousManagedCopy,1934
0,",",0
397," ",1934
317,$managedCopy,1934
0,),0
397,"
  ",1934
0,{,0
397,"
    ",1935
317,$assocField,1936
397," ",1936
0,=,0
397," ",1936
317,$association,1936
0,[,0
320,'fieldName',1936
0,],0
0,;,0
397,"
    ",1936
317,$prevClass,1937
397,"  ",1937
0,=,0
397," ",1937
317,$this,1937
390,->,1937
313,em,1937
390,->,1937
313,getClassMetadata,1937
0,(,0
313,get_class,1937
0,(,0
317,$previousManagedCopy,1937
0,),0
0,),0
0,;,0
397,"

    ",1937
326,if,1939
397," ",1939
0,(,0
317,$association,1939
0,[,0
320,'type',1939
0,],0
397," ",1939
287,&,1939
397," ",1939
313,ClassMetadata,1939
402,::,1939
313,TO_ONE,1939
0,),0
397," ",1939
0,{,0
397,"
      ",1939
317,$prevClass,1940
390,->,1940
313,reflFields,1940
0,[,0
317,$assocField,1940
0,],0
390,->,1940
313,setValue,1940
0,(,0
317,$previousManagedCopy,1940
0,",",0
397," ",1940
317,$managedCopy,1940
0,),0
0,;,0
397,"

      ",1940
350,return,1942
0,;,0
397,"
    ",1942
0,},0
397,"

    ",1943
317,$value,1945
397,"   ",1945
0,=,0
397," ",1945
317,$prevClass,1945
390,->,1945
313,reflFields,1945
0,[,0
317,$assocField,1945
0,],0
390,->,1945
313,getValue,1945
0,(,0
317,$previousManagedCopy,1945
0,),0
0,;,0
397,"
    ",1945
317,$value,1946
0,[,0
0,],0
397," ",1946
0,=,0
397," ",1946
317,$managedCopy,1946
0,;,0
397,"

    ",1946
326,if,1948
397," ",1948
0,(,0
317,$association,1948
0,[,0
320,'type',1948
0,],0
397," ",1948
289,==,1948
397," ",1948
313,ClassMetadata,1948
402,::,1948
313,ONE_TO_MANY,1948
0,),0
397," ",1948
0,{,0
397,"
      ",1948
317,$class,1949
397," ",1949
0,=,0
397," ",1949
317,$this,1949
390,->,1949
313,em,1949
390,->,1949
313,getClassMetadata,1949
0,(,0
313,get_class,1949
0,(,0
317,$entity,1949
0,),0
0,),0
0,;,0
397,"

      ",1949
317,$class,1951
390,->,1951
313,reflFields,1951
0,[,0
317,$association,1951
0,[,0
320,'mappedBy',1951
0,],0
0,],0
390,->,1951
313,setValue,1951
0,(,0
317,$managedCopy,1951
0,",",0
397," ",1951
317,$previousManagedCopy,1951
0,),0
0,;,0
397,"
    ",1951
0,},0
397,"
  ",1952
0,},0
397,"

  ",1953
393,"/**
   * Detaches an entity from the persistence management. It's persistence will
   * no longer be managed by Doctrine.
   *
   * @param object $entity The entity to detach.
   *
   * @return void
   */",1955
397,"
  ",1962
362,public,1963
397," ",1963
347,function,1963
397," ",1963
313,detach,1963
0,(,0
317,$entity,1963
0,),0
397,"
  ",1963
0,{,0
397,"
    ",1964
317,$visited,1965
397," ",1965
0,=,0
397," ",1965
377,array,1965
0,(,0
0,),0
0,;,0
397,"

    ",1965
317,$this,1967
390,->,1967
313,doDetach,1967
0,(,0
317,$entity,1967
0,",",0
397," ",1967
317,$visited,1967
0,),0
0,;,0
397,"
  ",1967
0,},0
397,"

  ",1968
393,"/**
   * Executes a detach operation on the given entity.
   *
   * @param object  $entity
   * @param array   $visited
   * @param boolean $noCascade if true, don't cascade detach operation.
   *
   * @return void
   */",1970
397,"
  ",1978
360,private,1979
397," ",1979
347,function,1979
397," ",1979
313,doDetach,1979
0,(,0
317,$entity,1979
0,",",0
397," ",1979
377,array,1979
397," ",1979
288,&,1979
317,$visited,1979
0,",",0
397," ",1979
317,$noCascade,1979
397," ",1979
0,=,0
397," ",1979
313,false,1979
0,),0
397,"
  ",1979
0,{,0
397,"
    ",1980
317,$oid,1981
397," ",1981
0,=,0
397," ",1981
313,spl_object_hash,1981
0,(,0
317,$entity,1981
0,),0
0,;,0
397,"

    ",1981
326,if,1983
397," ",1983
0,(,0
366,isset,1983
0,(,0
317,$visited,1983
0,[,0
317,$oid,1983
0,],0
0,),0
0,),0
397," ",1983
0,{,0
397,"
      ",1983
350,return,1984
0,;,0
397," ",1984
392,"// Prevent infinite recursion",1984
397,"
    ",1984
0,},0
397,"

    ",1985
317,$visited,1987
0,[,0
317,$oid,1987
0,],0
397," ",1987
0,=,0
397," ",1987
317,$entity,1987
0,;,0
397," ",1987
392,"// mark visited",1987
397,"

    ",1987
339,switch,1989
397," ",1989
0,(,0
317,$this,1989
390,->,1989
313,getEntityState,1989
0,(,0
317,$entity,1989
0,",",0
397," ",1989
313,self,1989
402,::,1989
313,STATE_DETACHED,1989
0,),0
0,),0
397," ",1989
0,{,0
397,"
      ",1989
341,case,1990
397," ",1990
313,self,1990
402,::,1990
313,STATE_MANAGED,1990
0,:,0
397,"
        ",1990
326,if,1991
397," ",1991
0,(,0
317,$this,1991
390,->,1991
313,isInIdentityMap,1991
0,(,0
317,$entity,1991
0,),0
0,),0
397," ",1991
0,{,0
397,"
          ",1991
317,$this,1992
390,->,1992
313,removeFromIdentityMap,1992
0,(,0
317,$entity,1992
0,),0
0,;,0
397,"
        ",1992
0,},0
397,"

        ",1993
365,unset,1995
0,(,0
397,"
          ",1995
317,$this,1996
390,->,1996
313,entityInsertions,1996
0,[,0
317,$oid,1996
0,],0
0,",",0
397,"
          ",1996
317,$this,1997
390,->,1997
313,entityUpdates,1997
0,[,0
317,$oid,1997
0,],0
0,",",0
397,"
          ",1997
317,$this,1998
390,->,1998
313,entityDeletions,1998
0,[,0
317,$oid,1998
0,],0
0,",",0
397,"
          ",1998
317,$this,1999
390,->,1999
313,entityIdentifiers,1999
0,[,0
317,$oid,1999
0,],0
0,",",0
397,"
          ",1999
317,$this,2000
390,->,2000
313,entityStates,2000
0,[,0
317,$oid,2000
0,],0
0,",",0
397,"
          ",2000
317,$this,2001
390,->,2001
313,originalEntityData,2001
0,[,0
317,$oid,2001
0,],0
397,"
        ",2001
0,),0
0,;,0
397,"
        ",2002
344,break,2003
0,;,0
397,"
      ",2003
341,case,2004
397," ",2004
313,self,2004
402,::,2004
313,STATE_NEW,2004
0,:,0
397,"
      ",2004
341,case,2005
397," ",2005
313,self,2005
402,::,2005
313,STATE_DETACHED,2005
0,:,0
397,"
        ",2005
350,return,2006
0,;,0
397,"
    ",2006
0,},0
397,"

    ",2007
326,if,2009
397," ",2009
0,(,0
397," ",2009
0,!,0
397," ",2009
317,$noCascade,2009
0,),0
397," ",2009
0,{,0
397,"
      ",2009
317,$this,2010
390,->,2010
313,cascadeDetach,2010
0,(,0
317,$entity,2010
0,",",0
397," ",2010
317,$visited,2010
0,),0
0,;,0
397,"
    ",2010
0,},0
397,"
  ",2011
0,},0
397,"

  ",2012
393,"/**
   * Refreshes the state of the given entity from the database, overwriting
   * any local, unpersisted changes.
   *
   * @param object $entity The entity to refresh.
   *
   * @return void
   *
   * @throws InvalidArgumentException If the entity is not MANAGED.
   */",2014
397,"
  ",2023
362,public,2024
397," ",2024
347,function,2024
397," ",2024
313,refresh,2024
0,(,0
317,$entity,2024
0,),0
397,"
  ",2024
0,{,0
397,"
    ",2025
317,$visited,2026
397," ",2026
0,=,0
397," ",2026
377,array,2026
0,(,0
0,),0
0,;,0
397,"

    ",2026
317,$this,2028
390,->,2028
313,doRefresh,2028
0,(,0
317,$entity,2028
0,",",0
397," ",2028
317,$visited,2028
0,),0
0,;,0
397,"
  ",2028
0,},0
397,"

  ",2029
393,"/**
   * Executes a refresh operation on an entity.
   *
   * @param object $entity  The entity to refresh.
   * @param array  $visited The already visited entities during cascades.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the entity is not MANAGED.
   */",2031
397,"
  ",2040
360,private,2041
397," ",2041
347,function,2041
397," ",2041
313,doRefresh,2041
0,(,0
317,$entity,2041
0,",",0
397," ",2041
377,array,2041
397," ",2041
288,&,2041
317,$visited,2041
0,),0
397,"
  ",2041
0,{,0
397,"
    ",2042
317,$oid,2043
397," ",2043
0,=,0
397," ",2043
313,spl_object_hash,2043
0,(,0
317,$entity,2043
0,),0
0,;,0
397,"

    ",2043
326,if,2045
397," ",2045
0,(,0
366,isset,2045
0,(,0
317,$visited,2045
0,[,0
317,$oid,2045
0,],0
0,),0
0,),0
397," ",2045
0,{,0
397,"
      ",2045
350,return,2046
0,;,0
397," ",2046
392,"// Prevent infinite recursion",2046
397,"
    ",2046
0,},0
397,"

    ",2047
317,$visited,2049
0,[,0
317,$oid,2049
0,],0
397," ",2049
0,=,0
397," ",2049
317,$entity,2049
0,;,0
397," ",2049
392,"// mark visited",2049
397,"

    ",2049
317,$class,2051
397," ",2051
0,=,0
397," ",2051
317,$this,2051
390,->,2051
313,em,2051
390,->,2051
313,getClassMetadata,2051
0,(,0
313,get_class,2051
0,(,0
317,$entity,2051
0,),0
0,),0
0,;,0
397,"

    ",2051
326,if,2053
397," ",2053
0,(,0
317,$this,2053
390,->,2053
313,getEntityState,2053
0,(,0
317,$entity,2053
0,),0
397," ",2053
292,!==,2053
397," ",2053
313,self,2053
402,::,2053
313,STATE_MANAGED,2053
0,),0
397," ",2053
0,{,0
397,"
      ",2053
258,throw,2054
397," ",2054
313,ORMInvalidArgumentException,2054
402,::,2054
313,entityNotManaged,2054
0,(,0
317,$entity,2054
0,),0
0,;,0
397,"
    ",2054
0,},0
397,"

    ",2055
317,$this,2057
390,->,2057
313,getEntityPersister,2057
0,(,0
317,$class,2057
390,->,2057
313,name,2057
0,),0
390,->,2057
313,refresh,2057
0,(,0
397,"
      ",2057
313,array_combine,2058
0,(,0
317,$class,2058
390,->,2058
313,getIdentifierFieldNames,2058
0,(,0
0,),0
0,",",0
397," ",2058
317,$this,2058
390,->,2058
313,entityIdentifiers,2058
0,[,0
317,$oid,2058
0,],0
0,),0
0,",",0
397,"
      ",2058
317,$entity,2059
397,"
    ",2059
0,),0
0,;,0
397,"

    ",2060
317,$this,2062
390,->,2062
313,cascadeRefresh,2062
0,(,0
317,$entity,2062
0,",",0
397," ",2062
317,$visited,2062
0,),0
0,;,0
397,"
  ",2062
0,},0
397,"

  ",2063
393,"/**
   * Cascades a refresh operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2065
397,"
  ",2072
360,private,2073
397," ",2073
347,function,2073
397," ",2073
313,cascadeRefresh,2073
0,(,0
317,$entity,2073
0,",",0
397," ",2073
377,array,2073
397," ",2073
288,&,2073
317,$visited,2073
0,),0
397,"
  ",2073
0,{,0
397,"
    ",2074
317,$class,2075
397," ",2075
0,=,0
397," ",2075
317,$this,2075
390,->,2075
313,em,2075
390,->,2075
313,getClassMetadata,2075
0,(,0
313,get_class,2075
0,(,0
317,$entity,2075
0,),0
0,),0
0,;,0
397,"

    ",2075
317,$associationMappings,2077
397," ",2077
0,=,0
397," ",2077
313,array_filter,2077
0,(,0
397,"
      ",2077
317,$class,2078
390,->,2078
313,associationMappings,2078
0,",",0
397,"
      ",2078
347,function,2079
397," ",2079
0,(,0
317,$assoc,2079
0,),0
397," ",2079
0,{,0
397," ",2079
350,return,2079
397," ",2079
317,$assoc,2079
0,[,0
320,'isCascadeRefresh',2079
0,],0
0,;,0
397," ",2079
0,},0
397,"
    ",2079
0,),0
0,;,0
397,"

    ",2080
334,foreach,2082
397," ",2082
0,(,0
317,$associationMappings,2082
397," ",2082
338,as,2082
397," ",2082
317,$assoc,2082
0,),0
397," ",2082
0,{,0
397,"
      ",2082
317,$relatedEntities,2083
397," ",2083
0,=,0
397," ",2083
317,$class,2083
390,->,2083
313,reflFields,2083
0,[,0
317,$assoc,2083
0,[,0
320,'fieldName',2083
0,],0
0,],0
390,->,2083
313,getValue,2083
0,(,0
317,$entity,2083
0,),0
0,;,0
397,"

      ",2083
339,switch,2085
397," ",2085
0,(,0
313,true,2085
0,),0
397," ",2085
0,{,0
397,"
        ",2085
341,case,2086
397," ",2086
0,(,0
317,$relatedEntities,2086
397," ",2086
298,instanceof,2086
397," ",2086
313,PersistentCollection,2086
0,),0
0,:,0
397,"
          ",2086
392,"// Unwrap so that foreach() does not initialize",2087
397,"
          ",2087
317,$relatedEntities,2088
397," ",2088
0,=,0
397," ",2088
317,$relatedEntities,2088
390,->,2088
313,unwrap,2088
0,(,0
0,),0
0,;,0
397,"
        ",2088
392,"// break; is commented intentionally!",2089
397,"

        ",2089
341,case,2091
397," ",2091
0,(,0
317,$relatedEntities,2091
397," ",2091
298,instanceof,2091
397," ",2091
313,Collection,2091
0,),0
0,:,0
397,"
        ",2091
341,case,2092
397," ",2092
0,(,0
313,is_array,2092
0,(,0
317,$relatedEntities,2092
0,),0
0,),0
0,:,0
397,"
          ",2092
334,foreach,2093
397," ",2093
0,(,0
317,$relatedEntities,2093
397," ",2093
338,as,2093
397," ",2093
317,$relatedEntity,2093
0,),0
397," ",2093
0,{,0
397,"
            ",2093
317,$this,2094
390,->,2094
313,doRefresh,2094
0,(,0
317,$relatedEntity,2094
0,",",0
397," ",2094
317,$visited,2094
0,),0
0,;,0
397,"
          ",2094
0,},0
397,"
          ",2095
344,break,2096
0,;,0
397,"

        ",2096
341,case,2098
397," ",2098
0,(,0
317,$relatedEntities,2098
397," ",2098
292,!==,2098
397," ",2098
313,null,2098
0,),0
0,:,0
397,"
          ",2098
317,$this,2099
390,->,2099
313,doRefresh,2099
0,(,0
317,$relatedEntities,2099
0,",",0
397," ",2099
317,$visited,2099
0,),0
0,;,0
397,"
          ",2099
344,break,2100
0,;,0
397,"

        ",2100
342,default,2102
0,:,0
397,"
          ",2102
392,"// Do nothing",2103
397,"
      ",2103
0,},0
397,"
    ",2104
0,},0
397,"
  ",2105
0,},0
397,"

  ",2106
393,"/**
   * Cascades a detach operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2108
397,"
  ",2115
360,private,2116
397," ",2116
347,function,2116
397," ",2116
313,cascadeDetach,2116
0,(,0
317,$entity,2116
0,",",0
397," ",2116
377,array,2116
397," ",2116
288,&,2116
317,$visited,2116
0,),0
397,"
  ",2116
0,{,0
397,"
    ",2117
317,$class,2118
397," ",2118
0,=,0
397," ",2118
317,$this,2118
390,->,2118
313,em,2118
390,->,2118
313,getClassMetadata,2118
0,(,0
313,get_class,2118
0,(,0
317,$entity,2118
0,),0
0,),0
0,;,0
397,"

    ",2118
317,$associationMappings,2120
397," ",2120
0,=,0
397," ",2120
313,array_filter,2120
0,(,0
397,"
      ",2120
317,$class,2121
390,->,2121
313,associationMappings,2121
0,",",0
397,"
      ",2121
347,function,2122
397," ",2122
0,(,0
317,$assoc,2122
0,),0
397," ",2122
0,{,0
397," ",2122
350,return,2122
397," ",2122
317,$assoc,2122
0,[,0
320,'isCascadeDetach',2122
0,],0
0,;,0
397," ",2122
0,},0
397,"
    ",2122
0,),0
0,;,0
397,"

    ",2123
334,foreach,2125
397," ",2125
0,(,0
317,$associationMappings,2125
397," ",2125
338,as,2125
397," ",2125
317,$assoc,2125
0,),0
397," ",2125
0,{,0
397,"
      ",2125
317,$relatedEntities,2126
397," ",2126
0,=,0
397," ",2126
317,$class,2126
390,->,2126
313,reflFields,2126
0,[,0
317,$assoc,2126
0,[,0
320,'fieldName',2126
0,],0
0,],0
390,->,2126
313,getValue,2126
0,(,0
317,$entity,2126
0,),0
0,;,0
397,"

      ",2126
339,switch,2128
397," ",2128
0,(,0
313,true,2128
0,),0
397," ",2128
0,{,0
397,"
        ",2128
341,case,2129
397," ",2129
0,(,0
317,$relatedEntities,2129
397," ",2129
298,instanceof,2129
397," ",2129
313,PersistentCollection,2129
0,),0
0,:,0
397,"
          ",2129
392,"// Unwrap so that foreach() does not initialize",2130
397,"
          ",2130
317,$relatedEntities,2131
397," ",2131
0,=,0
397," ",2131
317,$relatedEntities,2131
390,->,2131
313,unwrap,2131
0,(,0
0,),0
0,;,0
397,"
        ",2131
392,"// break; is commented intentionally!",2132
397,"

        ",2132
341,case,2134
397," ",2134
0,(,0
317,$relatedEntities,2134
397," ",2134
298,instanceof,2134
397," ",2134
313,Collection,2134
0,),0
0,:,0
397,"
        ",2134
341,case,2135
397," ",2135
0,(,0
313,is_array,2135
0,(,0
317,$relatedEntities,2135
0,),0
0,),0
0,:,0
397,"
          ",2135
334,foreach,2136
397," ",2136
0,(,0
317,$relatedEntities,2136
397," ",2136
338,as,2136
397," ",2136
317,$relatedEntity,2136
0,),0
397," ",2136
0,{,0
397,"
            ",2136
317,$this,2137
390,->,2137
313,doDetach,2137
0,(,0
317,$relatedEntity,2137
0,",",0
397," ",2137
317,$visited,2137
0,),0
0,;,0
397,"
          ",2137
0,},0
397,"
          ",2138
344,break,2139
0,;,0
397,"

        ",2139
341,case,2141
397," ",2141
0,(,0
317,$relatedEntities,2141
397," ",2141
292,!==,2141
397," ",2141
313,null,2141
0,),0
0,:,0
397,"
          ",2141
317,$this,2142
390,->,2142
313,doDetach,2142
0,(,0
317,$relatedEntities,2142
0,",",0
397," ",2142
317,$visited,2142
0,),0
0,;,0
397,"
          ",2142
344,break,2143
0,;,0
397,"

        ",2143
342,default,2145
0,:,0
397,"
          ",2145
392,"// Do nothing",2146
397,"
      ",2146
0,},0
397,"
    ",2147
0,},0
397,"
  ",2148
0,},0
397,"

  ",2149
393,"/**
   * Cascades a merge operation to associated entities.
   *
   * @param object $entity
   * @param object $managedCopy
   * @param array  $visited
   *
   * @return void
   */",2151
397,"
  ",2159
360,private,2160
397," ",2160
347,function,2160
397," ",2160
313,cascadeMerge,2160
0,(,0
317,$entity,2160
0,",",0
397," ",2160
317,$managedCopy,2160
0,",",0
397," ",2160
377,array,2160
397," ",2160
288,&,2160
317,$visited,2160
0,),0
397,"
  ",2160
0,{,0
397,"
    ",2161
317,$class,2162
397," ",2162
0,=,0
397," ",2162
317,$this,2162
390,->,2162
313,em,2162
390,->,2162
313,getClassMetadata,2162
0,(,0
313,get_class,2162
0,(,0
317,$entity,2162
0,),0
0,),0
0,;,0
397,"

    ",2162
317,$associationMappings,2164
397," ",2164
0,=,0
397," ",2164
313,array_filter,2164
0,(,0
397,"
      ",2164
317,$class,2165
390,->,2165
313,associationMappings,2165
0,",",0
397,"
      ",2165
347,function,2166
397," ",2166
0,(,0
317,$assoc,2166
0,),0
397," ",2166
0,{,0
397," ",2166
350,return,2166
397," ",2166
317,$assoc,2166
0,[,0
320,'isCascadeMerge',2166
0,],0
0,;,0
397," ",2166
0,},0
397,"
    ",2166
0,),0
0,;,0
397,"

    ",2167
334,foreach,2169
397," ",2169
0,(,0
317,$associationMappings,2169
397," ",2169
338,as,2169
397," ",2169
317,$assoc,2169
0,),0
397," ",2169
0,{,0
397,"
      ",2169
317,$relatedEntities,2170
397," ",2170
0,=,0
397," ",2170
317,$class,2170
390,->,2170
313,reflFields,2170
0,[,0
317,$assoc,2170
0,[,0
320,'fieldName',2170
0,],0
0,],0
390,->,2170
313,getValue,2170
0,(,0
317,$entity,2170
0,),0
0,;,0
397,"

      ",2170
326,if,2172
397," ",2172
0,(,0
317,$relatedEntities,2172
397," ",2172
298,instanceof,2172
397," ",2172
313,Collection,2172
0,),0
397," ",2172
0,{,0
397,"
        ",2172
326,if,2173
397," ",2173
0,(,0
317,$relatedEntities,2173
397," ",2173
291,===,2173
397," ",2173
317,$class,2173
390,->,2173
313,reflFields,2173
0,[,0
317,$assoc,2173
0,[,0
320,'fieldName',2173
0,],0
0,],0
390,->,2173
313,getValue,2173
0,(,0
317,$managedCopy,2173
0,),0
0,),0
397," ",2173
0,{,0
397,"
          ",2173
345,continue,2174
0,;,0
397,"
        ",2174
0,},0
397,"

        ",2175
326,if,2177
397," ",2177
0,(,0
317,$relatedEntities,2177
397," ",2177
298,instanceof,2177
397," ",2177
313,PersistentCollection,2177
0,),0
397," ",2177
0,{,0
397,"
          ",2177
392,"// Unwrap so that foreach() does not initialize",2178
397,"
          ",2178
317,$relatedEntities,2179
397," ",2179
0,=,0
397," ",2179
317,$relatedEntities,2179
390,->,2179
313,unwrap,2179
0,(,0
0,),0
0,;,0
397,"
        ",2179
0,},0
397,"

        ",2180
334,foreach,2182
397," ",2182
0,(,0
317,$relatedEntities,2182
397," ",2182
338,as,2182
397," ",2182
317,$relatedEntity,2182
0,),0
397," ",2182
0,{,0
397,"
          ",2182
317,$this,2183
390,->,2183
313,doMerge,2183
0,(,0
317,$relatedEntity,2183
0,",",0
397," ",2183
317,$visited,2183
0,",",0
397," ",2183
317,$managedCopy,2183
0,",",0
397," ",2183
317,$assoc,2183
0,),0
0,;,0
397,"
        ",2183
0,},0
397,"
      ",2184
0,},0
397," ",2185
310,else,2185
397," ",2185
326,if,2185
397," ",2185
0,(,0
317,$relatedEntities,2185
397," ",2185
292,!==,2185
397," ",2185
313,null,2185
0,),0
397," ",2185
0,{,0
397,"
        ",2185
317,$this,2186
390,->,2186
313,doMerge,2186
0,(,0
317,$relatedEntities,2186
0,",",0
397," ",2186
317,$visited,2186
0,",",0
397," ",2186
317,$managedCopy,2186
0,",",0
397," ",2186
317,$assoc,2186
0,),0
0,;,0
397,"
      ",2186
0,},0
397,"
    ",2187
0,},0
397,"
  ",2188
0,},0
397,"

  ",2189
393,"/**
   * Cascades the save operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2191
397,"
  ",2198
360,private,2199
397," ",2199
347,function,2199
397," ",2199
313,cascadePersist,2199
0,(,0
317,$entity,2199
0,",",0
397," ",2199
377,array,2199
397," ",2199
288,&,2199
317,$visited,2199
0,),0
397,"
  ",2199
0,{,0
397,"
    ",2200
317,$class,2201
397," ",2201
0,=,0
397," ",2201
317,$this,2201
390,->,2201
313,em,2201
390,->,2201
313,getClassMetadata,2201
0,(,0
313,get_class,2201
0,(,0
317,$entity,2201
0,),0
0,),0
0,;,0
397,"

    ",2201
317,$associationMappings,2203
397," ",2203
0,=,0
397," ",2203
313,array_filter,2203
0,(,0
397,"
      ",2203
317,$class,2204
390,->,2204
313,associationMappings,2204
0,",",0
397,"
      ",2204
347,function,2205
397," ",2205
0,(,0
317,$assoc,2205
0,),0
397," ",2205
0,{,0
397," ",2205
350,return,2205
397," ",2205
317,$assoc,2205
0,[,0
320,'isCascadePersist',2205
0,],0
0,;,0
397," ",2205
0,},0
397,"
    ",2205
0,),0
0,;,0
397,"

    ",2206
334,foreach,2208
397," ",2208
0,(,0
317,$associationMappings,2208
397," ",2208
338,as,2208
397," ",2208
317,$assoc,2208
0,),0
397," ",2208
0,{,0
397,"
      ",2208
317,$relatedEntities,2209
397," ",2209
0,=,0
397," ",2209
317,$class,2209
390,->,2209
313,reflFields,2209
0,[,0
317,$assoc,2209
0,[,0
320,'fieldName',2209
0,],0
0,],0
390,->,2209
313,getValue,2209
0,(,0
317,$entity,2209
0,),0
0,;,0
397,"

      ",2209
339,switch,2211
397," ",2211
0,(,0
313,true,2211
0,),0
397," ",2211
0,{,0
397,"
        ",2211
341,case,2212
397," ",2212
0,(,0
317,$relatedEntities,2212
397," ",2212
298,instanceof,2212
397," ",2212
313,PersistentCollection,2212
0,),0
0,:,0
397,"
          ",2212
392,"// Unwrap so that foreach() does not initialize",2213
397,"
          ",2213
317,$relatedEntities,2214
397," ",2214
0,=,0
397," ",2214
317,$relatedEntities,2214
390,->,2214
313,unwrap,2214
0,(,0
0,),0
0,;,0
397,"
        ",2214
392,"// break; is commented intentionally!",2215
397,"

        ",2215
341,case,2217
397," ",2217
0,(,0
317,$relatedEntities,2217
397," ",2217
298,instanceof,2217
397," ",2217
313,Collection,2217
0,),0
0,:,0
397,"
        ",2217
341,case,2218
397," ",2218
0,(,0
313,is_array,2218
0,(,0
317,$relatedEntities,2218
0,),0
0,),0
0,:,0
397,"
          ",2218
326,if,2219
397," ",2219
0,(,0
0,(,0
317,$assoc,2219
0,[,0
320,'type',2219
0,],0
397," ",2219
287,&,2219
397," ",2219
313,ClassMetadata,2219
402,::,2219
313,TO_MANY,2219
0,),0
397," ",2219
294,<=,2219
397," ",2219
311,0,2219
0,),0
397," ",2219
0,{,0
397,"
            ",2219
258,throw,2220
397," ",2220
313,ORMInvalidArgumentException,2220
402,::,2220
313,invalidAssociation,2220
0,(,0
397,"
              ",2220
317,$this,2221
390,->,2221
313,em,2221
390,->,2221
313,getClassMetadata,2221
0,(,0
317,$assoc,2221
0,[,0
320,'targetEntity',2221
0,],0
0,),0
0,",",0
397,"
              ",2221
317,$assoc,2222
0,",",0
397,"
              ",2222
317,$relatedEntities,2223
397,"
            ",2223
0,),0
0,;,0
397,"
          ",2224
0,},0
397,"

          ",2225
334,foreach,2227
397," ",2227
0,(,0
317,$relatedEntities,2227
397," ",2227
338,as,2227
397," ",2227
317,$relatedEntity,2227
0,),0
397," ",2227
0,{,0
397,"
            ",2227
317,$this,2228
390,->,2228
313,doPersist,2228
0,(,0
317,$relatedEntity,2228
0,",",0
397," ",2228
317,$visited,2228
0,),0
0,;,0
397,"
          ",2228
0,},0
397,"

          ",2229
344,break,2231
0,;,0
397,"

        ",2231
341,case,2233
397," ",2233
0,(,0
317,$relatedEntities,2233
397," ",2233
292,!==,2233
397," ",2233
313,null,2233
0,),0
0,:,0
397,"
          ",2233
326,if,2234
397," ",2234
0,(,0
0,!,0
397," ",2234
317,$relatedEntities,2234
397," ",2234
298,instanceof,2234
397," ",2234
317,$assoc,2234
0,[,0
320,'targetEntity',2234
0,],0
0,),0
397," ",2234
0,{,0
397,"
            ",2234
258,throw,2235
397," ",2235
313,ORMInvalidArgumentException,2235
402,::,2235
313,invalidAssociation,2235
0,(,0
397,"
              ",2235
317,$this,2236
390,->,2236
313,em,2236
390,->,2236
313,getClassMetadata,2236
0,(,0
317,$assoc,2236
0,[,0
320,'targetEntity',2236
0,],0
0,),0
0,",",0
397,"
              ",2236
317,$assoc,2237
0,",",0
397,"
              ",2237
317,$relatedEntities,2238
397,"
            ",2238
0,),0
0,;,0
397,"
          ",2239
0,},0
397,"

          ",2240
317,$this,2242
390,->,2242
313,doPersist,2242
0,(,0
317,$relatedEntities,2242
0,",",0
397," ",2242
317,$visited,2242
0,),0
0,;,0
397,"
          ",2242
344,break,2243
0,;,0
397,"

        ",2243
342,default,2245
0,:,0
397,"
          ",2245
392,"// Do nothing",2246
397,"
      ",2246
0,},0
397,"
    ",2247
0,},0
397,"
  ",2248
0,},0
397,"

  ",2249
393,"/**
   * Cascades the delete operation to associated entities.
   *
   * @param object $entity
   * @param array  $visited
   *
   * @return void
   */",2251
397,"
  ",2258
360,private,2259
397," ",2259
347,function,2259
397," ",2259
313,cascadeRemove,2259
0,(,0
317,$entity,2259
0,",",0
397," ",2259
377,array,2259
397," ",2259
288,&,2259
317,$visited,2259
0,),0
397,"
  ",2259
0,{,0
397,"
    ",2260
317,$class,2261
397," ",2261
0,=,0
397," ",2261
317,$this,2261
390,->,2261
313,em,2261
390,->,2261
313,getClassMetadata,2261
0,(,0
313,get_class,2261
0,(,0
317,$entity,2261
0,),0
0,),0
0,;,0
397,"

    ",2261
317,$associationMappings,2263
397," ",2263
0,=,0
397," ",2263
313,array_filter,2263
0,(,0
397,"
      ",2263
317,$class,2264
390,->,2264
313,associationMappings,2264
0,",",0
397,"
      ",2264
347,function,2265
397," ",2265
0,(,0
317,$assoc,2265
0,),0
397," ",2265
0,{,0
397," ",2265
350,return,2265
397," ",2265
317,$assoc,2265
0,[,0
320,'isCascadeRemove',2265
0,],0
0,;,0
397," ",2265
0,},0
397,"
    ",2265
0,),0
0,;,0
397,"

    ",2266
317,$entitiesToCascade,2268
397," ",2268
0,=,0
397," ",2268
377,array,2268
0,(,0
0,),0
0,;,0
397,"

    ",2268
334,foreach,2270
397," ",2270
0,(,0
317,$associationMappings,2270
397," ",2270
338,as,2270
397," ",2270
317,$assoc,2270
0,),0
397," ",2270
0,{,0
397,"
      ",2270
326,if,2271
397," ",2271
0,(,0
317,$entity,2271
397," ",2271
298,instanceof,2271
397," ",2271
313,Proxy,2271
397," ",2271
286,&&,2271
397," ",2271
0,!,0
317,$entity,2271
390,->,2271
313,__isInitialized__,2271
0,),0
397," ",2271
0,{,0
397,"
        ",2271
317,$entity,2272
390,->,2272
313,__load,2272
0,(,0
0,),0
0,;,0
397,"
      ",2272
0,},0
397,"

      ",2273
317,$relatedEntities,2275
397," ",2275
0,=,0
397," ",2275
317,$class,2275
390,->,2275
313,reflFields,2275
0,[,0
317,$assoc,2275
0,[,0
320,'fieldName',2275
0,],0
0,],0
390,->,2275
313,getValue,2275
0,(,0
317,$entity,2275
0,),0
0,;,0
397,"

      ",2275
339,switch,2277
397," ",2277
0,(,0
313,true,2277
0,),0
397," ",2277
0,{,0
397,"
        ",2277
341,case,2278
397," ",2278
0,(,0
317,$relatedEntities,2278
397," ",2278
298,instanceof,2278
397," ",2278
313,Collection,2278
0,),0
0,:,0
397,"
        ",2278
341,case,2279
397," ",2279
0,(,0
313,is_array,2279
0,(,0
317,$relatedEntities,2279
0,),0
0,),0
0,:,0
397,"
          ",2279
392,"// If its a PersistentCollection initialization is intended! No unwrap!",2280
397,"
          ",2280
334,foreach,2281
397," ",2281
0,(,0
317,$relatedEntities,2281
397," ",2281
338,as,2281
397," ",2281
317,$relatedEntity,2281
0,),0
397," ",2281
0,{,0
397,"
            ",2281
317,$entitiesToCascade,2282
0,[,0
0,],0
397," ",2282
0,=,0
397," ",2282
317,$relatedEntity,2282
0,;,0
397,"
          ",2282
0,},0
397,"
          ",2283
344,break,2284
0,;,0
397,"

        ",2284
341,case,2286
397," ",2286
0,(,0
317,$relatedEntities,2286
397," ",2286
292,!==,2286
397," ",2286
313,null,2286
0,),0
0,:,0
397,"
          ",2286
317,$entitiesToCascade,2287
0,[,0
0,],0
397," ",2287
0,=,0
397," ",2287
317,$relatedEntities,2287
0,;,0
397,"
          ",2287
344,break,2288
0,;,0
397,"

        ",2288
342,default,2290
0,:,0
397,"
          ",2290
392,"// Do nothing",2291
397,"
      ",2291
0,},0
397,"
    ",2292
0,},0
397,"

    ",2293
334,foreach,2295
397," ",2295
0,(,0
317,$entitiesToCascade,2295
397," ",2295
338,as,2295
397," ",2295
317,$relatedEntity,2295
0,),0
397," ",2295
0,{,0
397,"
      ",2295
317,$this,2296
390,->,2296
313,doRemove,2296
0,(,0
317,$relatedEntity,2296
0,",",0
397," ",2296
317,$visited,2296
0,),0
0,;,0
397,"
    ",2296
0,},0
397,"
  ",2297
0,},0
397,"

  ",2298
393,"/**
   * Acquire a lock on the given entity.
   *
   * @param object $entity
   * @param int    $lockMode
   * @param int    $lockVersion
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws TransactionRequiredException
   * @throws OptimisticLockException
   */",2300
397,"
  ",2312
362,public,2313
397," ",2313
347,function,2313
397," ",2313
313,lock,2313
0,(,0
317,$entity,2313
0,",",0
397," ",2313
317,$lockMode,2313
0,",",0
397," ",2313
317,$lockVersion,2313
397," ",2313
0,=,0
397," ",2313
313,null,2313
0,),0
397,"
  ",2313
0,{,0
397,"
    ",2314
326,if,2315
397," ",2315
0,(,0
317,$entity,2315
397," ",2315
291,===,2315
397," ",2315
313,null,2315
0,),0
397," ",2315
0,{,0
397,"
      ",2315
258,throw,2316
397," ",2316
324,new,2316
397," ",2316
314,"\InvalidArgumentException",2316
0,(,0
320,"""No entity passed to UnitOfWork#lock().""",2316
0,),0
0,;,0
397,"
    ",2316
0,},0
397,"

    ",2317
326,if,2319
397," ",2319
0,(,0
317,$this,2319
390,->,2319
313,getEntityState,2319
0,(,0
317,$entity,2319
0,",",0
397," ",2319
313,self,2319
402,::,2319
313,STATE_DETACHED,2319
0,),0
397," ",2319
290,!=,2319
397," ",2319
313,self,2319
402,::,2319
313,STATE_MANAGED,2319
0,),0
397," ",2319
0,{,0
397,"
      ",2319
258,throw,2320
397," ",2320
313,ORMInvalidArgumentException,2320
402,::,2320
313,entityNotManaged,2320
0,(,0
317,$entity,2320
0,),0
0,;,0
397,"
    ",2320
0,},0
397,"

    ",2321
317,$class,2323
397," ",2323
0,=,0
397," ",2323
317,$this,2323
390,->,2323
313,em,2323
390,->,2323
313,getClassMetadata,2323
0,(,0
313,get_class,2323
0,(,0
317,$entity,2323
0,),0
0,),0
0,;,0
397,"

    ",2323
339,switch,2325
397," ",2325
0,(,0
313,true,2325
0,),0
397," ",2325
0,{,0
397,"
      ",2325
341,case,2326
397," ",2326
313,LockMode,2326
402,::,2326
313,OPTIMISTIC,2326
397," ",2326
291,===,2326
397," ",2326
317,$lockMode,2326
0,:,0
397,"
        ",2326
326,if,2327
397," ",2327
0,(,0
397," ",2327
0,!,0
397," ",2327
317,$class,2327
390,->,2327
313,isVersioned,2327
0,),0
397," ",2327
0,{,0
397,"
          ",2327
258,throw,2328
397," ",2328
313,OptimisticLockException,2328
402,::,2328
313,notVersioned,2328
0,(,0
317,$class,2328
390,->,2328
313,name,2328
0,),0
0,;,0
397,"
        ",2328
0,},0
397,"

        ",2329
326,if,2331
397," ",2331
0,(,0
317,$lockVersion,2331
397," ",2331
291,===,2331
397," ",2331
313,null,2331
0,),0
397," ",2331
0,{,0
397,"
          ",2331
350,return,2332
0,;,0
397,"
        ",2332
0,},0
397,"

        ",2333
326,if,2335
397," ",2335
0,(,0
317,$entity,2335
397," ",2335
298,instanceof,2335
397," ",2335
313,Proxy,2335
397," ",2335
286,&&,2335
397," ",2335
0,!,0
317,$entity,2335
390,->,2335
313,__isInitialized__,2335
0,),0
397," ",2335
0,{,0
397,"
          ",2335
317,$entity,2336
390,->,2336
313,__load,2336
0,(,0
0,),0
0,;,0
397,"
        ",2336
0,},0
397,"

        ",2337
317,$entityVersion,2339
397," ",2339
0,=,0
397," ",2339
317,$class,2339
390,->,2339
313,reflFields,2339
0,[,0
317,$class,2339
390,->,2339
313,versionField,2339
0,],0
390,->,2339
313,getValue,2339
0,(,0
317,$entity,2339
0,),0
0,;,0
397,"

        ",2339
326,if,2341
397," ",2341
0,(,0
317,$entityVersion,2341
397," ",2341
290,!=,2341
397," ",2341
317,$lockVersion,2341
0,),0
397," ",2341
0,{,0
397,"
          ",2341
258,throw,2342
397," ",2342
313,OptimisticLockException,2342
402,::,2342
313,lockFailedVersionMismatch,2342
0,(,0
317,$entity,2342
0,",",0
397," ",2342
317,$lockVersion,2342
0,",",0
397," ",2342
317,$entityVersion,2342
0,),0
0,;,0
397,"
        ",2342
0,},0
397,"

        ",2343
344,break,2345
0,;,0
397,"

      ",2345
341,case,2347
397," ",2347
313,LockMode,2347
402,::,2347
313,NONE,2347
397," ",2347
291,===,2347
397," ",2347
317,$lockMode,2347
0,:,0
397,"
      ",2347
341,case,2348
397," ",2348
313,LockMode,2348
402,::,2348
313,PESSIMISTIC_READ,2348
397," ",2348
291,===,2348
397," ",2348
317,$lockMode,2348
0,:,0
397,"
      ",2348
341,case,2349
397," ",2349
313,LockMode,2349
402,::,2349
313,PESSIMISTIC_WRITE,2349
397," ",2349
291,===,2349
397," ",2349
317,$lockMode,2349
0,:,0
397,"
        ",2349
326,if,2350
397," ",2350
0,(,0
0,!,0
317,$this,2350
390,->,2350
313,em,2350
390,->,2350
313,getConnection,2350
0,(,0
0,),0
390,->,2350
313,isTransactionActive,2350
0,(,0
0,),0
0,),0
397," ",2350
0,{,0
397,"
          ",2350
258,throw,2351
397," ",2351
313,TransactionRequiredException,2351
402,::,2351
313,transactionRequired,2351
0,(,0
0,),0
0,;,0
397,"
        ",2351
0,},0
397,"

        ",2352
317,$oid,2354
397," ",2354
0,=,0
397," ",2354
313,spl_object_hash,2354
0,(,0
317,$entity,2354
0,),0
0,;,0
397,"

        ",2354
317,$this,2356
390,->,2356
313,getEntityPersister,2356
0,(,0
317,$class,2356
390,->,2356
313,name,2356
0,),0
390,->,2356
313,lock,2356
0,(,0
397,"
          ",2356
313,array_combine,2357
0,(,0
317,$class,2357
390,->,2357
313,getIdentifierFieldNames,2357
0,(,0
0,),0
0,",",0
397," ",2357
317,$this,2357
390,->,2357
313,entityIdentifiers,2357
0,[,0
317,$oid,2357
0,],0
0,),0
0,",",0
397,"
          ",2357
317,$lockMode,2358
397,"
        ",2358
0,),0
0,;,0
397,"
        ",2359
344,break,2360
0,;,0
397,"

      ",2360
342,default,2362
0,:,0
397,"
        ",2362
392,"// Do nothing",2363
397,"
    ",2363
0,},0
397,"
  ",2364
0,},0
397,"

  ",2365
393,"/**
   * Gets the CommitOrderCalculator used by the UnitOfWork to order commits.
   *
   * @return \Doctrine\ORM\Internal\CommitOrderCalculator
   */",2367
397,"
  ",2371
362,public,2372
397," ",2372
347,function,2372
397," ",2372
313,getCommitOrderCalculator,2372
0,(,0
0,),0
397,"
  ",2372
0,{,0
397,"
    ",2373
326,if,2374
397," ",2374
0,(,0
317,$this,2374
390,->,2374
313,commitOrderCalculator,2374
397," ",2374
291,===,2374
397," ",2374
313,null,2374
0,),0
397," ",2374
0,{,0
397,"
      ",2374
317,$this,2375
390,->,2375
313,commitOrderCalculator,2375
397," ",2375
0,=,0
397," ",2375
324,new,2375
397," ",2375
316,"Internal\CommitOrderCalculator",2375
0,;,0
397,"
    ",2375
0,},0
397,"

    ",2376
350,return,2378
397," ",2378
317,$this,2378
390,->,2378
313,commitOrderCalculator,2378
0,;,0
397,"
  ",2378
0,},0
397,"

  ",2379
393,"/**
   * Clears the UnitOfWork.
   *
   * @param string|null $entityName if given, only entities of this type will get detached.
   *
   * @return void
   */",2381
397,"
  ",2387
362,public,2388
397," ",2388
347,function,2388
397," ",2388
313,clear,2388
0,(,0
317,$entityName,2388
397," ",2388
0,=,0
397," ",2388
313,null,2388
0,),0
397,"
  ",2388
0,{,0
397,"
    ",2389
326,if,2390
397," ",2390
0,(,0
317,$entityName,2390
397," ",2390
291,===,2390
397," ",2390
313,null,2390
0,),0
397," ",2390
0,{,0
397,"
      ",2390
317,$this,2391
390,->,2391
313,identityMap,2391
397," ",2391
0,=,0
397,"
      ",2391
317,$this,2392
390,->,2392
313,entityIdentifiers,2392
397," ",2392
0,=,0
397,"
      ",2392
317,$this,2393
390,->,2393
313,originalEntityData,2393
397," ",2393
0,=,0
397,"
      ",2393
317,$this,2394
390,->,2394
313,entityChangeSets,2394
397," ",2394
0,=,0
397,"
      ",2394
317,$this,2395
390,->,2395
313,entityStates,2395
397," ",2395
0,=,0
397,"
      ",2395
317,$this,2396
390,->,2396
313,scheduledForSynchronization,2396
397," ",2396
0,=,0
397,"
      ",2396
317,$this,2397
390,->,2397
313,entityInsertions,2397
397," ",2397
0,=,0
397,"
      ",2397
317,$this,2398
390,->,2398
313,entityUpdates,2398
397," ",2398
0,=,0
397,"
      ",2398
317,$this,2399
390,->,2399
313,entityDeletions,2399
397," ",2399
0,=,0
397,"
      ",2399
317,$this,2400
390,->,2400
313,collectionDeletions,2400
397," ",2400
0,=,0
397,"
      ",2400
317,$this,2401
390,->,2401
313,collectionUpdates,2401
397," ",2401
0,=,0
397,"
      ",2401
317,$this,2402
390,->,2402
313,extraUpdates,2402
397," ",2402
0,=,0
397,"
      ",2402
317,$this,2403
390,->,2403
313,readOnlyObjects,2403
397," ",2403
0,=,0
397,"
      ",2403
317,$this,2404
390,->,2404
313,visitedCollections,2404
397," ",2404
0,=,0
397,"
      ",2404
317,$this,2405
390,->,2405
313,orphanRemovals,2405
397," ",2405
0,=,0
397," ",2405
377,array,2405
0,(,0
0,),0
0,;,0
397,"

      ",2405
326,if,2407
397," ",2407
0,(,0
317,$this,2407
390,->,2407
313,commitOrderCalculator,2407
397," ",2407
292,!==,2407
397," ",2407
313,null,2407
0,),0
397," ",2407
0,{,0
397,"
        ",2407
317,$this,2408
390,->,2408
313,commitOrderCalculator,2408
390,->,2408
313,clear,2408
0,(,0
0,),0
0,;,0
397,"
      ",2408
0,},0
397,"
    ",2409
0,},0
397," ",2410
310,else,2410
397," ",2410
0,{,0
397,"
      ",2410
317,$visited,2411
397," ",2411
0,=,0
397," ",2411
377,array,2411
0,(,0
0,),0
0,;,0
397,"

      ",2411
334,foreach,2413
397," ",2413
0,(,0
317,$this,2413
390,->,2413
313,identityMap,2413
397," ",2413
338,as,2413
397," ",2413
317,$className,2413
397," ",2413
269,=>,2413
397," ",2413
317,$entities,2413
0,),0
397," ",2413
0,{,0
397,"
        ",2413
326,if,2414
397," ",2414
0,(,0
317,$className,2414
397," ",2414
292,!==,2414
397," ",2414
317,$entityName,2414
0,),0
397," ",2414
0,{,0
397,"
          ",2414
345,continue,2415
0,;,0
397,"
        ",2415
0,},0
397,"

        ",2416
334,foreach,2418
397," ",2418
0,(,0
317,$entities,2418
397," ",2418
338,as,2418
397," ",2418
317,$entity,2418
0,),0
397," ",2418
0,{,0
397,"
          ",2418
317,$this,2419
390,->,2419
313,doDetach,2419
0,(,0
317,$entity,2419
0,",",0
397," ",2419
317,$visited,2419
0,",",0
397," ",2419
313,false,2419
0,),0
0,;,0
397,"
        ",2419
0,},0
397,"
      ",2420
0,},0
397,"
    ",2421
0,},0
397,"

    ",2422
326,if,2424
397," ",2424
0,(,0
317,$this,2424
390,->,2424
313,evm,2424
390,->,2424
313,hasListeners,2424
0,(,0
313,Events,2424
402,::,2424
313,onClear,2424
0,),0
0,),0
397," ",2424
0,{,0
397,"
      ",2424
317,$this,2425
390,->,2425
313,evm,2425
390,->,2425
313,dispatchEvent,2425
0,(,0
313,Events,2425
402,::,2425
313,onClear,2425
0,",",0
397," ",2425
324,new,2425
397," ",2425
316,"Event\OnClearEventArgs",2425
0,(,0
317,$this,2425
390,->,2425
313,em,2425
0,",",0
397," ",2425
317,$entityName,2425
0,),0
0,),0
0,;,0
397,"
    ",2425
0,},0
397,"
  ",2426
0,},0
397,"

  ",2427
393,"/**
   * INTERNAL:
   * Schedules an orphaned entity for removal. The remove() operation will be
   * invoked on that entity at the beginning of the next commit of this
   * UnitOfWork.
   *
   * @ignore
   *
   * @param object $entity
   *
   * @return void
   */",2429
397,"
  ",2440
362,public,2441
397," ",2441
347,function,2441
397," ",2441
313,scheduleOrphanRemoval,2441
0,(,0
317,$entity,2441
0,),0
397,"
  ",2441
0,{,0
397,"
    ",2442
317,$this,2443
390,->,2443
313,orphanRemovals,2443
0,[,0
313,spl_object_hash,2443
0,(,0
317,$entity,2443
0,),0
0,],0
397," ",2443
0,=,0
397," ",2443
317,$entity,2443
0,;,0
397,"
  ",2443
0,},0
397,"

  ",2444
393,"/**
   * INTERNAL:
   * Schedules a complete collection for removal when this UnitOfWork commits.
   *
   * @param PersistentCollection $coll
   *
   * @return void
   */",2446
397,"
  ",2453
362,public,2454
397," ",2454
347,function,2454
397," ",2454
313,scheduleCollectionDeletion,2454
0,(,0
313,PersistentCollection,2454
397," ",2454
317,$coll,2454
0,),0
397,"
  ",2454
0,{,0
397,"
    ",2455
317,$coid,2456
397," ",2456
0,=,0
397," ",2456
313,spl_object_hash,2456
0,(,0
317,$coll,2456
0,),0
0,;,0
397,"

    ",2456
392,"// TODO: if $coll is already scheduled for recreation ... what to do?",2458
397,"
    ",2458
392,"// Just remove $coll from the scheduled recreations?",2459
397,"
    ",2459
326,if,2460
397," ",2460
0,(,0
366,isset,2460
0,(,0
317,$this,2460
390,->,2460
313,collectionUpdates,2460
0,[,0
317,$coid,2460
0,],0
0,),0
0,),0
397," ",2460
0,{,0
397,"
      ",2460
365,unset,2461
0,(,0
317,$this,2461
390,->,2461
313,collectionUpdates,2461
0,[,0
317,$coid,2461
0,],0
0,),0
0,;,0
397,"
    ",2461
0,},0
397,"

    ",2462
317,$this,2464
390,->,2464
313,collectionDeletions,2464
0,[,0
317,$coid,2464
0,],0
397," ",2464
0,=,0
397," ",2464
317,$coll,2464
0,;,0
397,"
  ",2464
0,},0
397,"

  ",2465
393,"/**
   * @param PersistentCollection $coll
   *
   * @return bool
   */",2467
397,"
  ",2471
362,public,2472
397," ",2472
347,function,2472
397," ",2472
313,isCollectionScheduledForDeletion,2472
0,(,0
313,PersistentCollection,2472
397," ",2472
317,$coll,2472
0,),0
397,"
  ",2472
0,{,0
397,"
    ",2473
350,return,2474
397," ",2474
366,isset,2474
0,(,0
317,$this,2474
390,->,2474
313,collectionDeletions,2474
0,[,0
313,spl_object_hash,2474
0,(,0
317,$coll,2474
0,),0
0,],0
0,),0
0,;,0
397,"
  ",2474
0,},0
397,"

  ",2475
393,"/**
   * @param ClassMetadata $class
   *
   * @return \Doctrine\Common\Persistence\ObjectManagerAware|object
   */",2477
397,"
  ",2481
360,private,2482
397," ",2482
347,function,2482
397," ",2482
313,newInstance,2482
0,(,0
317,$class,2482
0,),0
397,"
  ",2482
0,{,0
397,"
    ",2483
317,$entity,2484
397," ",2484
0,=,0
397," ",2484
317,$class,2484
390,->,2484
313,newInstance,2484
0,(,0
0,),0
0,;,0
397,"

    ",2484
326,if,2486
397," ",2486
0,(,0
317,$entity,2486
397," ",2486
298,instanceof,2486
397," ",2486
314,"\Doctrine\Common\Persistence\ObjectManagerAware",2486
0,),0
397," ",2486
0,{,0
397,"
      ",2486
317,$entity,2487
390,->,2487
313,injectObjectManager,2487
0,(,0
317,$this,2487
390,->,2487
313,em,2487
0,",",0
397," ",2487
317,$class,2487
0,),0
0,;,0
397,"
    ",2487
0,},0
397,"

    ",2488
350,return,2490
397," ",2490
317,$entity,2490
0,;,0
397,"
  ",2490
0,},0
397,"

  ",2491
393,"/**
   * INTERNAL:
   * Creates an entity. Used for reconstitution of persistent entities.
   *
   * Internal note: Highly performance-sensitive method.
   *
   * @ignore
   *
   * @param string $className The name of the entity class.
   * @param array  $data      The data for the entity.
   * @param array  $hints     Any hints to account for during reconstitution/lookup of the entity.
   *
   * @return object The managed entity instance.
   *
   * @todo Rename: getOrCreateEntity
   */",2493
397,"
  ",2508
362,public,2509
397," ",2509
347,function,2509
397," ",2509
313,createEntity,2509
0,(,0
317,$className,2509
0,",",0
397," ",2509
377,array,2509
397," ",2509
317,$data,2509
0,",",0
397," ",2509
288,&,2509
317,$hints,2509
397," ",2509
0,=,0
397," ",2509
377,array,2509
0,(,0
0,),0
0,),0
397,"
  ",2509
0,{,0
397,"
    ",2510
317,$class,2511
397," ",2511
0,=,0
397," ",2511
317,$this,2511
390,->,2511
313,em,2511
390,->,2511
313,getClassMetadata,2511
0,(,0
317,$className,2511
0,),0
0,;,0
397,"
    ",2511
392,"//$isReadOnly = isset($hints[Query::HINT_READ_ONLY]);",2512
397,"

    ",2512
317,$id,2514
397," ",2514
0,=,0
397," ",2514
317,$this,2514
390,->,2514
313,identifierFlattener,2514
390,->,2514
313,flattenIdentifier,2514
0,(,0
317,$class,2514
0,",",0
397," ",2514
317,$data,2514
0,),0
0,;,0
397,"
    ",2514
317,$idHash,2515
397," ",2515
0,=,0
397," ",2515
313,implode,2515
0,(,0
320,"' '",2515
0,",",0
397," ",2515
317,$id,2515
0,),0
0,;,0
397,"

    ",2515
326,if,2517
397," ",2517
0,(,0
366,isset,2517
0,(,0
317,$this,2517
390,->,2517
313,identityMap,2517
0,[,0
317,$class,2517
390,->,2517
313,rootEntityName,2517
0,],0
0,[,0
317,$idHash,2517
0,],0
0,),0
0,),0
397," ",2517
0,{,0
397,"
      ",2517
317,$entity,2518
397," ",2518
0,=,0
397," ",2518
317,$this,2518
390,->,2518
313,identityMap,2518
0,[,0
317,$class,2518
390,->,2518
313,rootEntityName,2518
0,],0
0,[,0
317,$idHash,2518
0,],0
0,;,0
397,"
      ",2518
317,$oid,2519
397," ",2519
0,=,0
397," ",2519
313,spl_object_hash,2519
0,(,0
317,$entity,2519
0,),0
0,;,0
397,"

      ",2519
326,if,2521
397," ",2521
0,(,0
397,"
        ",2521
366,isset,2522
0,(,0
317,$hints,2522
0,[,0
313,Query,2522
402,::,2522
313,HINT_REFRESH,2522
0,],0
0,),0
397,"
        ",2522
286,&&,2523
397," ",2523
366,isset,2523
0,(,0
317,$hints,2523
0,[,0
313,Query,2523
402,::,2523
313,HINT_REFRESH_ENTITY,2523
0,],0
0,),0
397,"
        ",2523
286,&&,2524
397," ",2524
0,(,0
317,$unmanagedProxy,2524
397," ",2524
0,=,0
397," ",2524
317,$hints,2524
0,[,0
313,Query,2524
402,::,2524
313,HINT_REFRESH_ENTITY,2524
0,],0
0,),0
397," ",2524
292,!==,2524
397," ",2524
317,$entity,2524
397,"
        ",2524
286,&&,2525
397," ",2525
317,$unmanagedProxy,2525
397," ",2525
298,instanceof,2525
397," ",2525
313,Proxy,2525
397,"
        ",2525
286,&&,2526
397," ",2526
317,$this,2526
390,->,2526
313,isIdentifierEquals,2526
0,(,0
317,$unmanagedProxy,2526
0,",",0
397," ",2526
317,$entity,2526
0,),0
397,"
      ",2526
0,),0
397," ",2527
0,{,0
397,"
        ",2527
392,"// DDC-1238 - we have a managed instance, but it isn't the provided one.",2528
397,"
        ",2528
392,"// Therefore we clear its identifier. Also, we must re-fetch metadata since the",2529
397,"
        ",2529
392,"// refreshed object may be anything",2530
397,"

        ",2530
334,foreach,2532
397," ",2532
0,(,0
317,$class,2532
390,->,2532
313,identifier,2532
397," ",2532
338,as,2532
397," ",2532
317,$fieldName,2532
0,),0
397," ",2532
0,{,0
397,"
          ",2532
317,$class,2533
390,->,2533
313,reflFields,2533
0,[,0
317,$fieldName,2533
0,],0
390,->,2533
313,setValue,2533
0,(,0
317,$unmanagedProxy,2533
0,",",0
397," ",2533
313,null,2533
0,),0
0,;,0
397,"
        ",2533
0,},0
397,"

        ",2534
350,return,2536
397," ",2536
317,$unmanagedProxy,2536
0,;,0
397,"
      ",2536
0,},0
397,"

      ",2537
326,if,2539
397," ",2539
0,(,0
317,$entity,2539
397," ",2539
298,instanceof,2539
397," ",2539
313,Proxy,2539
397," ",2539
286,&&,2539
397," ",2539
0,!,0
397," ",2539
317,$entity,2539
390,->,2539
313,__isInitialized,2539
0,(,0
0,),0
0,),0
397," ",2539
0,{,0
397,"
        ",2539
317,$entity,2540
390,->,2540
313,__setInitialized,2540
0,(,0
313,true,2540
0,),0
0,;,0
397,"

        ",2540
317,$overrideLocalValues,2542
397," ",2542
0,=,0
397," ",2542
313,true,2542
0,;,0
397,"

        ",2542
326,if,2544
397," ",2544
0,(,0
317,$entity,2544
397," ",2544
298,instanceof,2544
397," ",2544
313,NotifyPropertyChanged,2544
0,),0
397," ",2544
0,{,0
397,"
          ",2544
317,$entity,2545
390,->,2545
313,addPropertyChangedListener,2545
0,(,0
317,$this,2545
0,),0
0,;,0
397,"
        ",2545
0,},0
397,"
      ",2546
0,},0
397," ",2547
310,else,2547
397," ",2547
0,{,0
397,"
        ",2547
317,$overrideLocalValues,2548
397," ",2548
0,=,0
397," ",2548
366,isset,2548
0,(,0
317,$hints,2548
0,[,0
313,Query,2548
402,::,2548
313,HINT_REFRESH,2548
0,],0
0,),0
0,;,0
397,"

        ",2548
392,"// If only a specific entity is set to refresh, check that it's the one",2550
397,"
        ",2550
326,if,2551
397," ",2551
0,(,0
366,isset,2551
0,(,0
317,$hints,2551
0,[,0
313,Query,2551
402,::,2551
313,HINT_REFRESH_ENTITY,2551
0,],0
0,),0
0,),0
397," ",2551
0,{,0
397,"
          ",2551
317,$overrideLocalValues,2552
397," ",2552
0,=,0
397," ",2552
317,$hints,2552
0,[,0
313,Query,2552
402,::,2552
313,HINT_REFRESH_ENTITY,2552
0,],0
397," ",2552
291,===,2552
397," ",2552
317,$entity,2552
0,;,0
397,"
        ",2552
0,},0
397,"
      ",2553
0,},0
397,"

      ",2554
326,if,2556
397," ",2556
0,(,0
317,$overrideLocalValues,2556
0,),0
397," ",2556
0,{,0
397,"
        ",2556
392,"// inject ObjectManager upon refresh.",2557
397,"
        ",2557
326,if,2558
397," ",2558
0,(,0
317,$entity,2558
397," ",2558
298,instanceof,2558
397," ",2558
313,ObjectManagerAware,2558
0,),0
397," ",2558
0,{,0
397,"
          ",2558
317,$entity,2559
390,->,2559
313,injectObjectManager,2559
0,(,0
317,$this,2559
390,->,2559
313,em,2559
0,",",0
397," ",2559
317,$class,2559
0,),0
0,;,0
397,"
        ",2559
0,},0
397,"

        ",2560
317,$this,2562
390,->,2562
313,originalEntityData,2562
0,[,0
317,$oid,2562
0,],0
397," ",2562
0,=,0
397," ",2562
317,$data,2562
0,;,0
397,"
      ",2562
0,},0
397,"
    ",2563
0,},0
397," ",2564
310,else,2564
397," ",2564
0,{,0
397,"
      ",2564
317,$entity,2565
397," ",2565
0,=,0
397," ",2565
317,$this,2565
390,->,2565
313,newInstance,2565
0,(,0
317,$class,2565
0,),0
0,;,0
397,"
      ",2565
317,$oid,2566
397,"    ",2566
0,=,0
397," ",2566
313,spl_object_hash,2566
0,(,0
317,$entity,2566
0,),0
0,;,0
397,"

      ",2566
317,$this,2568
390,->,2568
313,entityIdentifiers,2568
0,[,0
317,$oid,2568
0,],0
397,"  ",2568
0,=,0
397," ",2568
317,$id,2568
0,;,0
397,"
      ",2568
317,$this,2569
390,->,2569
313,entityStates,2569
0,[,0
317,$oid,2569
0,],0
397,"       ",2569
0,=,0
397," ",2569
313,self,2569
402,::,2569
313,STATE_MANAGED,2569
0,;,0
397,"
      ",2569
317,$this,2570
390,->,2570
313,originalEntityData,2570
0,[,0
317,$oid,2570
0,],0
397," ",2570
0,=,0
397," ",2570
317,$data,2570
0,;,0
397,"

      ",2570
317,$this,2572
390,->,2572
313,identityMap,2572
0,[,0
317,$class,2572
390,->,2572
313,rootEntityName,2572
0,],0
0,[,0
317,$idHash,2572
0,],0
397," ",2572
0,=,0
397," ",2572
317,$entity,2572
0,;,0
397,"

      ",2572
326,if,2574
397," ",2574
0,(,0
317,$entity,2574
397," ",2574
298,instanceof,2574
397," ",2574
313,NotifyPropertyChanged,2574
0,),0
397," ",2574
0,{,0
397,"
        ",2574
317,$entity,2575
390,->,2575
313,addPropertyChangedListener,2575
0,(,0
317,$this,2575
0,),0
0,;,0
397,"
      ",2575
0,},0
397,"

      ",2576
317,$overrideLocalValues,2578
397," ",2578
0,=,0
397," ",2578
313,true,2578
0,;,0
397,"
    ",2578
0,},0
397,"

    ",2579
326,if,2581
397," ",2581
0,(,0
397," ",2581
0,!,0
397," ",2581
317,$overrideLocalValues,2581
0,),0
397," ",2581
0,{,0
397,"
      ",2581
350,return,2582
397," ",2582
317,$entity,2582
0,;,0
397,"
    ",2582
0,},0
397,"

    ",2583
334,foreach,2585
397," ",2585
0,(,0
317,$data,2585
397," ",2585
338,as,2585
397," ",2585
317,$field,2585
397," ",2585
269,=>,2585
397," ",2585
317,$value,2585
0,),0
397," ",2585
0,{,0
397,"
      ",2585
326,if,2586
397," ",2586
0,(,0
366,isset,2586
0,(,0
317,$class,2586
390,->,2586
313,fieldMappings,2586
0,[,0
317,$field,2586
0,],0
0,),0
0,),0
397," ",2586
0,{,0
397,"
        ",2586
317,$class,2587
390,->,2587
313,reflFields,2587
0,[,0
317,$field,2587
0,],0
390,->,2587
313,setValue,2587
0,(,0
317,$entity,2587
0,",",0
397," ",2587
317,$value,2587
0,),0
0,;,0
397,"
      ",2587
0,},0
397,"
    ",2588
0,},0
397,"

    ",2589
392,"// Loading the entity right here, if its in the eager loading map get rid of it there.",2591
397,"
    ",2591
365,unset,2592
0,(,0
317,$this,2592
390,->,2592
313,eagerLoadingEntities,2592
0,[,0
317,$class,2592
390,->,2592
313,rootEntityName,2592
0,],0
0,[,0
317,$idHash,2592
0,],0
0,),0
0,;,0
397,"

    ",2592
326,if,2594
397," ",2594
0,(,0
366,isset,2594
0,(,0
317,$this,2594
390,->,2594
313,eagerLoadingEntities,2594
0,[,0
317,$class,2594
390,->,2594
313,rootEntityName,2594
0,],0
0,),0
397," ",2594
286,&&,2594
397," ",2594
0,!,0
397," ",2594
317,$this,2594
390,->,2594
313,eagerLoadingEntities,2594
0,[,0
317,$class,2594
390,->,2594
313,rootEntityName,2594
0,],0
0,),0
397," ",2594
0,{,0
397,"
      ",2594
365,unset,2595
0,(,0
317,$this,2595
390,->,2595
313,eagerLoadingEntities,2595
0,[,0
317,$class,2595
390,->,2595
313,rootEntityName,2595
0,],0
0,),0
0,;,0
397,"
    ",2595
0,},0
397,"

    ",2596
392,"// Properly initialize any unfetched associations, if partial objects are not allowed.",2598
397,"
    ",2598
326,if,2599
397," ",2599
0,(,0
366,isset,2599
0,(,0
317,$hints,2599
0,[,0
313,Query,2599
402,::,2599
313,HINT_FORCE_PARTIAL_LOAD,2599
0,],0
0,),0
0,),0
397," ",2599
0,{,0
397,"
      ",2599
350,return,2600
397," ",2600
317,$entity,2600
0,;,0
397,"
    ",2600
0,},0
397,"

    ",2601
334,foreach,2603
397," ",2603
0,(,0
317,$class,2603
390,->,2603
313,associationMappings,2603
397," ",2603
338,as,2603
397," ",2603
317,$field,2603
397," ",2603
269,=>,2603
397," ",2603
317,$assoc,2603
0,),0
397," ",2603
0,{,0
397,"
      ",2603
392,"// Check if the association is not among the fetch-joined associations already.",2604
397,"
      ",2604
326,if,2605
397," ",2605
0,(,0
366,isset,2605
0,(,0
317,$hints,2605
0,[,0
320,'fetchAlias',2605
0,],0
0,),0
397," ",2605
286,&&,2605
397," ",2605
366,isset,2605
0,(,0
317,$hints,2605
0,[,0
320,'fetched',2605
0,],0
0,[,0
317,$hints,2605
0,[,0
320,'fetchAlias',2605
0,],0
0,],0
0,[,0
317,$field,2605
0,],0
0,),0
0,),0
397," ",2605
0,{,0
397,"
        ",2605
345,continue,2606
0,;,0
397,"
      ",2606
0,},0
397,"

      ",2607
317,$targetClass,2609
397," ",2609
0,=,0
397," ",2609
317,$this,2609
390,->,2609
313,em,2609
390,->,2609
313,getClassMetadata,2609
0,(,0
317,$assoc,2609
0,[,0
320,'targetEntity',2609
0,],0
0,),0
0,;,0
397,"

      ",2609
339,switch,2611
397," ",2611
0,(,0
313,true,2611
0,),0
397," ",2611
0,{,0
397,"
        ",2611
341,case,2612
397," ",2612
0,(,0
317,$assoc,2612
0,[,0
320,'type',2612
0,],0
397," ",2612
287,&,2612
397," ",2612
313,ClassMetadata,2612
402,::,2612
313,TO_ONE,2612
0,),0
0,:,0
397,"
          ",2612
326,if,2613
397," ",2613
0,(,0
397," ",2613
0,!,0
397," ",2613
317,$assoc,2613
0,[,0
320,'isOwningSide',2613
0,],0
0,),0
397," ",2613
0,{,0
397,"

            ",2613
392,"// use the given entity association",2615
397,"
            ",2615
326,if,2616
397," ",2616
0,(,0
366,isset,2616
0,(,0
317,$data,2616
0,[,0
317,$field,2616
0,],0
0,),0
397," ",2616
286,&&,2616
397," ",2616
313,is_object,2616
0,(,0
317,$data,2616
0,[,0
317,$field,2616
0,],0
0,),0
397," ",2616
286,&&,2616
397," ",2616
366,isset,2616
0,(,0
317,$this,2616
390,->,2616
313,entityStates,2616
0,[,0
313,spl_object_hash,2616
0,(,0
317,$data,2616
0,[,0
317,$field,2616
0,],0
0,),0
0,],0
0,),0
0,),0
397," ",2616
0,{,0
397,"

              ",2616
317,$this,2618
390,->,2618
313,originalEntityData,2618
0,[,0
317,$oid,2618
0,],0
0,[,0
317,$field,2618
0,],0
397," ",2618
0,=,0
397," ",2618
317,$data,2618
0,[,0
317,$field,2618
0,],0
0,;,0
397,"

              ",2618
317,$class,2620
390,->,2620
313,reflFields,2620
0,[,0
317,$field,2620
0,],0
390,->,2620
313,setValue,2620
0,(,0
317,$entity,2620
0,",",0
397," ",2620
317,$data,2620
0,[,0
317,$field,2620
0,],0
0,),0
0,;,0
397,"
              ",2620
317,$targetClass,2621
390,->,2621
313,reflFields,2621
0,[,0
317,$assoc,2621
0,[,0
320,'mappedBy',2621
0,],0
0,],0
390,->,2621
313,setValue,2621
0,(,0
317,$data,2621
0,[,0
317,$field,2621
0,],0
0,",",0
397," ",2621
317,$entity,2621
0,),0
0,;,0
397,"

              ",2621
345,continue,2623
397," ",2623
311,2,2623
0,;,0
397,"
            ",2623
0,},0
397,"

            ",2624
392,"// Inverse side of x-to-one can never be lazy",2626
397,"
            ",2626
317,$class,2627
390,->,2627
313,reflFields,2627
0,[,0
317,$field,2627
0,],0
390,->,2627
313,setValue,2627
0,(,0
317,$entity,2627
0,",",0
397," ",2627
317,$this,2627
390,->,2627
313,getEntityPersister,2627
0,(,0
317,$assoc,2627
0,[,0
320,'targetEntity',2627
0,],0
0,),0
390,->,2627
313,loadOneToOneEntity,2627
0,(,0
317,$assoc,2627
0,",",0
397," ",2627
317,$entity,2627
0,),0
0,),0
0,;,0
397,"

            ",2627
345,continue,2629
397," ",2629
311,2,2629
0,;,0
397,"
          ",2629
0,},0
397,"

          ",2630
392,"// use the entity association",2632
397,"
          ",2632
326,if,2633
397," ",2633
0,(,0
366,isset,2633
0,(,0
317,$data,2633
0,[,0
317,$field,2633
0,],0
0,),0
397," ",2633
286,&&,2633
397," ",2633
313,is_object,2633
0,(,0
317,$data,2633
0,[,0
317,$field,2633
0,],0
0,),0
397," ",2633
286,&&,2633
397," ",2633
366,isset,2633
0,(,0
317,$this,2633
390,->,2633
313,entityStates,2633
0,[,0
313,spl_object_hash,2633
0,(,0
317,$data,2633
0,[,0
317,$field,2633
0,],0
0,),0
0,],0
0,),0
0,),0
397," ",2633
0,{,0
397,"
            ",2633
317,$class,2634
390,->,2634
313,reflFields,2634
0,[,0
317,$field,2634
0,],0
390,->,2634
313,setValue,2634
0,(,0
317,$entity,2634
0,",",0
397," ",2634
317,$data,2634
0,[,0
317,$field,2634
0,],0
0,),0
0,;,0
397,"
            ",2634
317,$this,2635
390,->,2635
313,originalEntityData,2635
0,[,0
317,$oid,2635
0,],0
0,[,0
317,$field,2635
0,],0
397," ",2635
0,=,0
397," ",2635
317,$data,2635
0,[,0
317,$field,2635
0,],0
0,;,0
397,"

            ",2635
345,continue,2637
0,;,0
397,"
          ",2637
0,},0
397,"

          ",2638
317,$associatedId,2640
397," ",2640
0,=,0
397," ",2640
377,array,2640
0,(,0
0,),0
0,;,0
397,"

          ",2640
392,"// TODO: Is this even computed right in all cases of composite keys?",2642
397,"
          ",2642
334,foreach,2643
397," ",2643
0,(,0
317,$assoc,2643
0,[,0
320,'targetToSourceKeyColumns',2643
0,],0
397," ",2643
338,as,2643
397," ",2643
317,$targetColumn,2643
397," ",2643
269,=>,2643
397," ",2643
317,$srcColumn,2643
0,),0
397," ",2643
0,{,0
397,"
            ",2643
317,$joinColumnValue,2644
397," ",2644
0,=,0
397," ",2644
366,isset,2644
0,(,0
317,$data,2644
0,[,0
317,$srcColumn,2644
0,],0
0,),0
397," ",2644
0,?,0
397," ",2644
317,$data,2644
0,[,0
317,$srcColumn,2644
0,],0
397," ",2644
0,:,0
397," ",2644
313,null,2644
0,;,0
397,"

            ",2644
326,if,2646
397," ",2646
0,(,0
317,$joinColumnValue,2646
397," ",2646
292,!==,2646
397," ",2646
313,null,2646
0,),0
397," ",2646
0,{,0
397,"
              ",2646
326,if,2647
397," ",2647
0,(,0
317,$targetClass,2647
390,->,2647
313,containsForeignIdentifier,2647
0,),0
397," ",2647
0,{,0
397,"
                ",2647
317,$associatedId,2648
0,[,0
317,$targetClass,2648
390,->,2648
313,getFieldForColumn,2648
0,(,0
317,$targetColumn,2648
0,),0
0,],0
397," ",2648
0,=,0
397," ",2648
317,$joinColumnValue,2648
0,;,0
397,"
              ",2648
0,},0
397," ",2649
310,else,2649
397," ",2649
0,{,0
397,"
                ",2649
317,$associatedId,2650
0,[,0
317,$targetClass,2650
390,->,2650
313,fieldNames,2650
0,[,0
317,$targetColumn,2650
0,],0
0,],0
397," ",2650
0,=,0
397," ",2650
317,$joinColumnValue,2650
0,;,0
397,"
              ",2650
0,},0
397,"
            ",2651
0,},0
397," ",2652
309,elseif,2652
397," ",2652
0,(,0
317,$targetClass,2652
390,->,2652
313,containsForeignIdentifier,2652
397,"
              ",2652
286,&&,2653
397," ",2653
313,in_array,2653
0,(,0
317,$targetClass,2653
390,->,2653
313,getFieldForColumn,2653
0,(,0
317,$targetColumn,2653
0,),0
0,",",0
397," ",2653
317,$targetClass,2653
390,->,2653
313,identifier,2653
0,",",0
397," ",2653
313,true,2653
0,),0
397,"
            ",2653
0,),0
397," ",2654
0,{,0
397,"
              ",2654
392,"// the missing key is part of target's entity primary key",2655
397,"
              ",2655
317,$associatedId,2656
397," ",2656
0,=,0
397," ",2656
377,array,2656
0,(,0
0,),0
0,;,0
397,"
              ",2656
344,break,2657
0,;,0
397,"
            ",2657
0,},0
397,"
          ",2658
0,},0
397,"

          ",2659
326,if,2661
397," ",2661
0,(,0
397," ",2661
0,!,0
397," ",2661
317,$associatedId,2661
0,),0
397," ",2661
0,{,0
397,"
            ",2661
392,"// Foreign key is NULL",2662
397,"
            ",2662
317,$class,2663
390,->,2663
313,reflFields,2663
0,[,0
317,$field,2663
0,],0
390,->,2663
313,setValue,2663
0,(,0
317,$entity,2663
0,",",0
397," ",2663
313,null,2663
0,),0
0,;,0
397,"
            ",2663
317,$this,2664
390,->,2664
313,originalEntityData,2664
0,[,0
317,$oid,2664
0,],0
0,[,0
317,$field,2664
0,],0
397," ",2664
0,=,0
397," ",2664
313,null,2664
0,;,0
397,"

            ",2664
345,continue,2666
0,;,0
397,"
          ",2666
0,},0
397,"

          ",2667
326,if,2669
397," ",2669
0,(,0
397," ",2669
0,!,0
397," ",2669
366,isset,2669
0,(,0
317,$hints,2669
0,[,0
320,'fetchMode',2669
0,],0
0,[,0
317,$class,2669
390,->,2669
313,name,2669
0,],0
0,[,0
317,$field,2669
0,],0
0,),0
0,),0
397," ",2669
0,{,0
397,"
            ",2669
317,$hints,2670
0,[,0
320,'fetchMode',2670
0,],0
0,[,0
317,$class,2670
390,->,2670
313,name,2670
0,],0
0,[,0
317,$field,2670
0,],0
397," ",2670
0,=,0
397," ",2670
317,$assoc,2670
0,[,0
320,'fetch',2670
0,],0
0,;,0
397,"
          ",2670
0,},0
397,"

          ",2671
392,"// Foreign key is set",2673
397,"
          ",2673
392,"// Check identity map first",2674
397,"
          ",2674
392,"// FIXME: Can break easily with composite keys if join column values are in",2675
397,"
          ",2675
392,"//        wrong order. The correct order is the one in ClassMetadata#identifier.",2676
397,"
          ",2676
317,$relatedIdHash,2677
397," ",2677
0,=,0
397," ",2677
313,implode,2677
0,(,0
320,"' '",2677
0,",",0
397," ",2677
317,$associatedId,2677
0,),0
0,;,0
397,"

          ",2677
339,switch,2679
397," ",2679
0,(,0
313,true,2679
0,),0
397," ",2679
0,{,0
397,"
            ",2679
341,case,2680
397," ",2680
0,(,0
366,isset,2680
0,(,0
317,$this,2680
390,->,2680
313,identityMap,2680
0,[,0
317,$targetClass,2680
390,->,2680
313,rootEntityName,2680
0,],0
0,[,0
317,$relatedIdHash,2680
0,],0
0,),0
0,),0
0,:,0
397,"
              ",2680
317,$newValue,2681
397," ",2681
0,=,0
397," ",2681
317,$this,2681
390,->,2681
313,identityMap,2681
0,[,0
317,$targetClass,2681
390,->,2681
313,rootEntityName,2681
0,],0
0,[,0
317,$relatedIdHash,2681
0,],0
0,;,0
397,"

              ",2681
392,"// If this is an uninitialized proxy, we are deferring eager loads,",2683
397,"
              ",2683
392,"// this association is marked as eager fetch, and its an uninitialized proxy (wtf!)",2684
397,"
              ",2684
392,"// then we can append this entity for eager loading!",2685
397,"
              ",2685
326,if,2686
397," ",2686
0,(,0
317,$hints,2686
0,[,0
320,'fetchMode',2686
0,],0
0,[,0
317,$class,2686
390,->,2686
313,name,2686
0,],0
0,[,0
317,$field,2686
0,],0
397," ",2686
289,==,2686
397," ",2686
313,ClassMetadata,2686
402,::,2686
313,FETCH_EAGER,2686
397," ",2686
286,&&,2686
397,"
                ",2686
366,isset,2687
0,(,0
317,$hints,2687
0,[,0
313,self,2687
402,::,2687
313,HINT_DEFEREAGERLOAD,2687
0,],0
0,),0
397," ",2687
286,&&,2687
397,"
                ",2687
0,!,0
317,$targetClass,2688
390,->,2688
313,isIdentifierComposite,2688
397," ",2688
286,&&,2688
397,"
                ",2688
317,$newValue,2689
397," ",2689
298,instanceof,2689
397," ",2689
313,Proxy,2689
397," ",2689
286,&&,2689
397,"
                ",2689
317,$newValue,2690
390,->,2690
313,__isInitialized__,2690
397," ",2690
291,===,2690
397," ",2690
313,false,2690
0,),0
397," ",2690
0,{,0
397,"

                ",2690
317,$this,2692
390,->,2692
313,eagerLoadingEntities,2692
0,[,0
317,$targetClass,2692
390,->,2692
313,rootEntityName,2692
0,],0
0,[,0
317,$relatedIdHash,2692
0,],0
397," ",2692
0,=,0
397," ",2692
313,current,2692
0,(,0
317,$associatedId,2692
0,),0
0,;,0
397,"
              ",2692
0,},0
397,"

              ",2693
344,break,2695
0,;,0
397,"

            ",2695
341,case,2697
397," ",2697
0,(,0
317,$targetClass,2697
390,->,2697
313,subClasses,2697
0,),0
0,:,0
397,"
              ",2697
392,"// If it might be a subtype, it can not be lazy. There isn't even",2698
397,"
              ",2698
392,"// a way to solve this with deferred eager loading, which means putting",2699
397,"
              ",2699
392,"// an entity with subclasses at a *-to-one location is really bad! (performance-wise)",2700
397,"
              ",2700
317,$newValue,2701
397," ",2701
0,=,0
397," ",2701
317,$this,2701
390,->,2701
313,getEntityPersister,2701
0,(,0
317,$assoc,2701
0,[,0
320,'targetEntity',2701
0,],0
0,),0
390,->,2701
313,loadOneToOneEntity,2701
0,(,0
317,$assoc,2701
0,",",0
397," ",2701
317,$entity,2701
0,",",0
397," ",2701
317,$associatedId,2701
0,),0
0,;,0
397,"
              ",2701
344,break,2702
0,;,0
397,"

            ",2702
342,default,2704
0,:,0
397,"
              ",2704
339,switch,2705
397," ",2705
0,(,0
313,true,2705
0,),0
397," ",2705
0,{,0
397,"
                ",2705
392,"// We are negating the condition here. Other cases will assume it is valid!",2706
397,"
                ",2706
341,case,2707
397," ",2707
0,(,0
317,$hints,2707
0,[,0
320,'fetchMode',2707
0,],0
0,[,0
317,$class,2707
390,->,2707
313,name,2707
0,],0
0,[,0
317,$field,2707
0,],0
397," ",2707
292,!==,2707
397," ",2707
313,ClassMetadata,2707
402,::,2707
313,FETCH_EAGER,2707
0,),0
0,:,0
397,"
                  ",2707
317,$newValue,2708
397," ",2708
0,=,0
397," ",2708
317,$this,2708
390,->,2708
313,em,2708
390,->,2708
313,getProxyFactory,2708
0,(,0
0,),0
390,->,2708
313,getProxy,2708
0,(,0
317,$assoc,2708
0,[,0
320,'targetEntity',2708
0,],0
0,",",0
397," ",2708
317,$associatedId,2708
0,),0
0,;,0
397,"
                  ",2708
344,break,2709
0,;,0
397,"

                ",2709
392,"// Deferred eager load only works for single identifier classes",2711
397,"
                ",2711
341,case,2712
397," ",2712
0,(,0
366,isset,2712
0,(,0
317,$hints,2712
0,[,0
313,self,2712
402,::,2712
313,HINT_DEFEREAGERLOAD,2712
0,],0
0,),0
397," ",2712
286,&&,2712
397," ",2712
0,!,0
397," ",2712
317,$targetClass,2712
390,->,2712
313,isIdentifierComposite,2712
0,),0
0,:,0
397,"
                  ",2712
392,"// TODO: Is there a faster approach?",2713
397,"
                  ",2713
317,$this,2714
390,->,2714
313,eagerLoadingEntities,2714
0,[,0
317,$targetClass,2714
390,->,2714
313,rootEntityName,2714
0,],0
0,[,0
317,$relatedIdHash,2714
0,],0
397," ",2714
0,=,0
397," ",2714
313,current,2714
0,(,0
317,$associatedId,2714
0,),0
0,;,0
397,"

                  ",2714
317,$newValue,2716
397," ",2716
0,=,0
397," ",2716
317,$this,2716
390,->,2716
313,em,2716
390,->,2716
313,getProxyFactory,2716
0,(,0
0,),0
390,->,2716
313,getProxy,2716
0,(,0
317,$assoc,2716
0,[,0
320,'targetEntity',2716
0,],0
0,",",0
397," ",2716
317,$associatedId,2716
0,),0
0,;,0
397,"
                  ",2716
344,break,2717
0,;,0
397,"

                ",2717
342,default,2719
0,:,0
397,"
                  ",2719
392,"// TODO: This is very imperformant, ignore it?",2720
397,"
                  ",2720
317,$newValue,2721
397," ",2721
0,=,0
397," ",2721
317,$this,2721
390,->,2721
313,em,2721
390,->,2721
313,find,2721
0,(,0
317,$assoc,2721
0,[,0
320,'targetEntity',2721
0,],0
0,",",0
397," ",2721
317,$associatedId,2721
0,),0
0,;,0
397,"
                  ",2721
344,break,2722
0,;,0
397,"
              ",2722
0,},0
397,"

              ",2723
392,"// PERF: Inlined & optimized code from UnitOfWork#registerManaged()",2725
397,"
              ",2725
317,$newValueOid,2726
397," ",2726
0,=,0
397," ",2726
313,spl_object_hash,2726
0,(,0
317,$newValue,2726
0,),0
0,;,0
397,"
              ",2726
317,$this,2727
390,->,2727
313,entityIdentifiers,2727
0,[,0
317,$newValueOid,2727
0,],0
397," ",2727
0,=,0
397," ",2727
317,$associatedId,2727
0,;,0
397,"
              ",2727
317,$this,2728
390,->,2728
313,identityMap,2728
0,[,0
317,$targetClass,2728
390,->,2728
313,rootEntityName,2728
0,],0
0,[,0
317,$relatedIdHash,2728
0,],0
397," ",2728
0,=,0
397," ",2728
317,$newValue,2728
0,;,0
397,"

              ",2728
326,if,2730
397," ",2730
0,(,0
397,"
                ",2730
317,$newValue,2731
397," ",2731
298,instanceof,2731
397," ",2731
313,NotifyPropertyChanged,2731
397," ",2731
286,&&,2731
397,"
                ",2731
0,(,0
397," ",2732
0,!,0
397," ",2732
317,$newValue,2732
397," ",2732
298,instanceof,2732
397," ",2732
313,Proxy,2732
397," ",2732
285,||,2732
397," ",2732
317,$newValue,2732
390,->,2732
313,__isInitialized,2732
0,(,0
0,),0
0,),0
397,"
              ",2732
0,),0
397," ",2733
0,{,0
397,"
                ",2733
317,$newValue,2734
390,->,2734
313,addPropertyChangedListener,2734
0,(,0
317,$this,2734
0,),0
0,;,0
397,"
              ",2734
0,},0
397,"
              ",2735
317,$this,2736
390,->,2736
313,entityStates,2736
0,[,0
317,$newValueOid,2736
0,],0
397," ",2736
0,=,0
397," ",2736
313,self,2736
402,::,2736
313,STATE_MANAGED,2736
0,;,0
397,"
              ",2736
392,"// make sure that when an proxy is then finally loaded, $this->originalEntityData is set also!",2737
397,"
              ",2737
344,break,2738
0,;,0
397,"
          ",2738
0,},0
397,"

          ",2739
317,$this,2741
390,->,2741
313,originalEntityData,2741
0,[,0
317,$oid,2741
0,],0
0,[,0
317,$field,2741
0,],0
397," ",2741
0,=,0
397," ",2741
317,$newValue,2741
0,;,0
397,"
          ",2741
317,$class,2742
390,->,2742
313,reflFields,2742
0,[,0
317,$field,2742
0,],0
390,->,2742
313,setValue,2742
0,(,0
317,$entity,2742
0,",",0
397," ",2742
317,$newValue,2742
0,),0
0,;,0
397,"

          ",2742
326,if,2744
397," ",2744
0,(,0
317,$assoc,2744
0,[,0
320,'inversedBy',2744
0,],0
397," ",2744
286,&&,2744
397," ",2744
317,$assoc,2744
0,[,0
320,'type',2744
0,],0
397," ",2744
287,&,2744
397," ",2744
313,ClassMetadata,2744
402,::,2744
313,ONE_TO_ONE,2744
0,),0
397," ",2744
0,{,0
397,"
            ",2744
317,$inverseAssoc,2745
397," ",2745
0,=,0
397," ",2745
317,$targetClass,2745
390,->,2745
313,associationMappings,2745
0,[,0
317,$assoc,2745
0,[,0
320,'inversedBy',2745
0,],0
0,],0
0,;,0
397,"
            ",2745
317,$targetClass,2746
390,->,2746
313,reflFields,2746
0,[,0
317,$inverseAssoc,2746
0,[,0
320,'fieldName',2746
0,],0
0,],0
390,->,2746
313,setValue,2746
0,(,0
317,$newValue,2746
0,",",0
397," ",2746
317,$entity,2746
0,),0
0,;,0
397,"
          ",2746
0,},0
397,"

          ",2747
344,break,2749
0,;,0
397,"

        ",2749
342,default,2751
0,:,0
397,"
          ",2751
392,"// Ignore if its a cached collection",2752
397,"
          ",2752
326,if,2753
397," ",2753
0,(,0
366,isset,2753
0,(,0
317,$hints,2753
0,[,0
313,Query,2753
402,::,2753
313,HINT_CACHE_ENABLED,2753
0,],0
0,),0
397," ",2753
286,&&,2753
397," ",2753
317,$class,2753
390,->,2753
313,getFieldValue,2753
0,(,0
317,$entity,2753
0,",",0
397," ",2753
317,$field,2753
0,),0
397," ",2753
298,instanceof,2753
397," ",2753
313,PersistentCollection,2753
0,),0
397," ",2753
0,{,0
397,"
            ",2753
344,break,2754
0,;,0
397,"
          ",2754
0,},0
397,"

          ",2755
392,"// use the given collection",2757
397,"
          ",2757
326,if,2758
397," ",2758
0,(,0
366,isset,2758
0,(,0
317,$data,2758
0,[,0
317,$field,2758
0,],0
0,),0
397," ",2758
286,&&,2758
397," ",2758
317,$data,2758
0,[,0
317,$field,2758
0,],0
397," ",2758
298,instanceof,2758
397," ",2758
313,PersistentCollection,2758
0,),0
397," ",2758
0,{,0
397,"

            ",2758
317,$data,2760
0,[,0
317,$field,2760
0,],0
390,->,2760
313,setOwner,2760
0,(,0
317,$entity,2760
0,",",0
397," ",2760
317,$assoc,2760
0,),0
0,;,0
397,"

            ",2760
317,$class,2762
390,->,2762
313,reflFields,2762
0,[,0
317,$field,2762
0,],0
390,->,2762
313,setValue,2762
0,(,0
317,$entity,2762
0,",",0
397," ",2762
317,$data,2762
0,[,0
317,$field,2762
0,],0
0,),0
0,;,0
397,"
            ",2762
317,$this,2763
390,->,2763
313,originalEntityData,2763
0,[,0
317,$oid,2763
0,],0
0,[,0
317,$field,2763
0,],0
397," ",2763
0,=,0
397," ",2763
317,$data,2763
0,[,0
317,$field,2763
0,],0
0,;,0
397,"

            ",2763
344,break,2765
0,;,0
397,"
          ",2765
0,},0
397,"

          ",2766
392,"// Inject collection",2768
397,"
          ",2768
317,$pColl,2769
397," ",2769
0,=,0
397," ",2769
324,new,2769
397," ",2769
313,PersistentCollection,2769
0,(,0
317,$this,2769
390,->,2769
313,em,2769
0,",",0
397," ",2769
317,$targetClass,2769
0,",",0
397," ",2769
324,new,2769
397," ",2769
313,ArrayCollection,2769
0,),0
0,;,0
397,"
          ",2769
317,$pColl,2770
390,->,2770
313,setOwner,2770
0,(,0
317,$entity,2770
0,",",0
397," ",2770
317,$assoc,2770
0,),0
0,;,0
397,"
          ",2770
317,$pColl,2771
390,->,2771
313,setInitialized,2771
0,(,0
313,false,2771
0,),0
0,;,0
397,"

          ",2771
317,$reflField,2773
397," ",2773
0,=,0
397," ",2773
317,$class,2773
390,->,2773
313,reflFields,2773
0,[,0
317,$field,2773
0,],0
0,;,0
397,"
          ",2773
317,$reflField,2774
390,->,2774
313,setValue,2774
0,(,0
317,$entity,2774
0,",",0
397," ",2774
317,$pColl,2774
0,),0
0,;,0
397,"

          ",2774
326,if,2776
397," ",2776
0,(,0
317,$assoc,2776
0,[,0
320,'fetch',2776
0,],0
397," ",2776
289,==,2776
397," ",2776
313,ClassMetadata,2776
402,::,2776
313,FETCH_EAGER,2776
0,),0
397," ",2776
0,{,0
397,"
            ",2776
317,$this,2777
390,->,2777
313,loadCollection,2777
0,(,0
317,$pColl,2777
0,),0
0,;,0
397,"
            ",2777
317,$pColl,2778
390,->,2778
313,takeSnapshot,2778
0,(,0
0,),0
0,;,0
397,"
          ",2778
0,},0
397,"

          ",2779
317,$this,2781
390,->,2781
313,originalEntityData,2781
0,[,0
317,$oid,2781
0,],0
0,[,0
317,$field,2781
0,],0
397," ",2781
0,=,0
397," ",2781
317,$pColl,2781
0,;,0
397,"
          ",2781
344,break,2782
0,;,0
397,"
      ",2782
0,},0
397,"
    ",2783
0,},0
397,"

    ",2784
326,if,2786
397," ",2786
0,(,0
317,$overrideLocalValues,2786
0,),0
397," ",2786
0,{,0
397,"
      ",2786
392,"// defer invoking of postLoad event to hydration complete step",2787
397,"
      ",2787
317,$this,2788
390,->,2788
313,hydrationCompleteHandler,2788
390,->,2788
313,deferPostLoadInvoking,2788
0,(,0
317,$class,2788
0,",",0
397," ",2788
317,$entity,2788
0,),0
0,;,0
397,"
    ",2788
0,},0
397,"

    ",2789
350,return,2791
397," ",2791
317,$entity,2791
0,;,0
397,"
  ",2791
0,},0
397,"

  ",2792
393,"/**
   * @return void
   */",2794
397,"
  ",2796
362,public,2797
397," ",2797
347,function,2797
397," ",2797
313,triggerEagerLoads,2797
0,(,0
0,),0
397,"
  ",2797
0,{,0
397,"
    ",2798
326,if,2799
397," ",2799
0,(,0
397," ",2799
0,!,0
397," ",2799
317,$this,2799
390,->,2799
313,eagerLoadingEntities,2799
0,),0
397," ",2799
0,{,0
397,"
      ",2799
350,return,2800
0,;,0
397,"
    ",2800
0,},0
397,"

    ",2801
392,"// avoid infinite recursion",2803
397,"
    ",2803
317,$eagerLoadingEntities,2804
397,"       ",2804
0,=,0
397," ",2804
317,$this,2804
390,->,2804
313,eagerLoadingEntities,2804
0,;,0
397,"
    ",2804
317,$this,2805
390,->,2805
313,eagerLoadingEntities,2805
397," ",2805
0,=,0
397," ",2805
377,array,2805
0,(,0
0,),0
0,;,0
397,"

    ",2805
334,foreach,2807
397," ",2807
0,(,0
317,$eagerLoadingEntities,2807
397," ",2807
338,as,2807
397," ",2807
317,$entityName,2807
397," ",2807
269,=>,2807
397," ",2807
317,$ids,2807
0,),0
397," ",2807
0,{,0
397,"
      ",2807
326,if,2808
397," ",2808
0,(,0
397," ",2808
0,!,0
397," ",2808
317,$ids,2808
0,),0
397," ",2808
0,{,0
397,"
        ",2808
345,continue,2809
0,;,0
397,"
      ",2809
0,},0
397,"

      ",2810
317,$class,2812
397," ",2812
0,=,0
397," ",2812
317,$this,2812
390,->,2812
313,em,2812
390,->,2812
313,getClassMetadata,2812
0,(,0
317,$entityName,2812
0,),0
0,;,0
397,"

      ",2812
317,$this,2814
390,->,2814
313,getEntityPersister,2814
0,(,0
317,$entityName,2814
0,),0
390,->,2814
313,loadAll,2814
0,(,0
397,"
        ",2814
313,array_combine,2815
0,(,0
317,$class,2815
390,->,2815
313,identifier,2815
0,",",0
397," ",2815
377,array,2815
0,(,0
313,array_values,2815
0,(,0
317,$ids,2815
0,),0
0,),0
0,),0
397,"
      ",2815
0,),0
0,;,0
397,"
    ",2816
0,},0
397,"
  ",2817
0,},0
397,"

  ",2818
393,"/**
   * Initializes (loads) an uninitialized persistent collection of an entity.
   *
   * @param \Doctrine\ORM\PersistentCollection $collection The collection to initialize.
   *
   * @return void
   *
   * @todo Maybe later move to EntityManager#initialize($proxyOrCollection). See DDC-733.
   */",2820
397,"
  ",2828
362,public,2829
397," ",2829
347,function,2829
397," ",2829
313,loadCollection,2829
0,(,0
313,PersistentCollection,2829
397," ",2829
317,$collection,2829
0,),0
397,"
  ",2829
0,{,0
397,"
    ",2830
317,$assoc,2831
397,"     ",2831
0,=,0
397," ",2831
317,$collection,2831
390,->,2831
313,getMapping,2831
0,(,0
0,),0
0,;,0
397,"
    ",2831
317,$persister,2832
397," ",2832
0,=,0
397," ",2832
317,$this,2832
390,->,2832
313,getEntityPersister,2832
0,(,0
317,$assoc,2832
0,[,0
320,'targetEntity',2832
0,],0
0,),0
0,;,0
397,"

    ",2832
339,switch,2834
397," ",2834
0,(,0
317,$assoc,2834
0,[,0
320,'type',2834
0,],0
0,),0
397," ",2834
0,{,0
397,"
      ",2834
341,case,2835
397," ",2835
313,ClassMetadata,2835
402,::,2835
313,ONE_TO_MANY,2835
0,:,0
397,"
        ",2835
317,$persister,2836
390,->,2836
313,loadOneToManyCollection,2836
0,(,0
317,$assoc,2836
0,",",0
397," ",2836
317,$collection,2836
390,->,2836
313,getOwner,2836
0,(,0
0,),0
0,",",0
397," ",2836
317,$collection,2836
0,),0
0,;,0
397,"
        ",2836
344,break,2837
0,;,0
397,"

      ",2837
341,case,2839
397," ",2839
313,ClassMetadata,2839
402,::,2839
313,MANY_TO_MANY,2839
0,:,0
397,"
        ",2839
317,$persister,2840
390,->,2840
313,loadManyToManyCollection,2840
0,(,0
317,$assoc,2840
0,",",0
397," ",2840
317,$collection,2840
390,->,2840
313,getOwner,2840
0,(,0
0,),0
0,",",0
397," ",2840
317,$collection,2840
0,),0
0,;,0
397,"
        ",2840
344,break,2841
0,;,0
397,"
    ",2841
0,},0
397,"

    ",2842
317,$collection,2844
390,->,2844
313,setInitialized,2844
0,(,0
313,true,2844
0,),0
0,;,0
397,"
  ",2844
0,},0
397,"

  ",2845
393,"/**
   * Gets the identity map of the UnitOfWork.
   *
   * @return array
   */",2847
397,"
  ",2851
362,public,2852
397," ",2852
347,function,2852
397," ",2852
313,getIdentityMap,2852
0,(,0
0,),0
397,"
  ",2852
0,{,0
397,"
    ",2853
350,return,2854
397," ",2854
317,$this,2854
390,->,2854
313,identityMap,2854
0,;,0
397,"
  ",2854
0,},0
397,"

  ",2855
393,"/**
   * Gets the original data of an entity. The original data is the data that was
   * present at the time the entity was reconstituted from the database.
   *
   * @param object $entity
   *
   * @return array
   */",2857
397,"
  ",2864
362,public,2865
397," ",2865
347,function,2865
397," ",2865
313,getOriginalEntityData,2865
0,(,0
317,$entity,2865
0,),0
397,"
  ",2865
0,{,0
397,"
    ",2866
317,$oid,2867
397," ",2867
0,=,0
397," ",2867
313,spl_object_hash,2867
0,(,0
317,$entity,2867
0,),0
0,;,0
397,"

    ",2867
326,if,2869
397," ",2869
0,(,0
366,isset,2869
0,(,0
317,$this,2869
390,->,2869
313,originalEntityData,2869
0,[,0
317,$oid,2869
0,],0
0,),0
0,),0
397," ",2869
0,{,0
397,"
      ",2869
350,return,2870
397," ",2870
317,$this,2870
390,->,2870
313,originalEntityData,2870
0,[,0
317,$oid,2870
0,],0
0,;,0
397,"
    ",2870
0,},0
397,"

    ",2871
350,return,2873
397," ",2873
377,array,2873
0,(,0
0,),0
0,;,0
397,"
  ",2873
0,},0
397,"

  ",2874
393,"/**
   * @ignore
   *
   * @param object $entity
   * @param array  $data
   *
   * @return void
   */",2876
397,"
  ",2883
362,public,2884
397," ",2884
347,function,2884
397," ",2884
313,setOriginalEntityData,2884
0,(,0
317,$entity,2884
0,",",0
397," ",2884
377,array,2884
397," ",2884
317,$data,2884
0,),0
397,"
  ",2884
0,{,0
397,"
    ",2885
317,$this,2886
390,->,2886
313,originalEntityData,2886
0,[,0
313,spl_object_hash,2886
0,(,0
317,$entity,2886
0,),0
0,],0
397," ",2886
0,=,0
397," ",2886
317,$data,2886
0,;,0
397,"
  ",2886
0,},0
397,"

  ",2887
393,"/**
   * INTERNAL:
   * Sets a property value of the original data array of an entity.
   *
   * @ignore
   *
   * @param string $oid
   * @param string $property
   * @param mixed  $value
   *
   * @return void
   */",2889
397,"
  ",2900
362,public,2901
397," ",2901
347,function,2901
397," ",2901
313,setOriginalEntityProperty,2901
0,(,0
317,$oid,2901
0,",",0
397," ",2901
317,$property,2901
0,",",0
397," ",2901
317,$value,2901
0,),0
397,"
  ",2901
0,{,0
397,"
    ",2902
317,$this,2903
390,->,2903
313,originalEntityData,2903
0,[,0
317,$oid,2903
0,],0
0,[,0
317,$property,2903
0,],0
397," ",2903
0,=,0
397," ",2903
317,$value,2903
0,;,0
397,"
  ",2903
0,},0
397,"

  ",2904
393,"/**
   * Gets the identifier of an entity.
   * The returned value is always an array of identifier values. If the entity
   * has a composite identifier then the identifier values are in the same
   * order as the identifier field names as returned by ClassMetadata#getIdentifierFieldNames().
   *
   * @param object $entity
   *
   * @return array The identifier values.
   */",2906
397,"
  ",2915
362,public,2916
397," ",2916
347,function,2916
397," ",2916
313,getEntityIdentifier,2916
0,(,0
317,$entity,2916
0,),0
397,"
  ",2916
0,{,0
397,"
    ",2917
350,return,2918
397," ",2918
317,$this,2918
390,->,2918
313,entityIdentifiers,2918
0,[,0
313,spl_object_hash,2918
0,(,0
317,$entity,2918
0,),0
0,],0
0,;,0
397,"
  ",2918
0,},0
397,"

  ",2919
393,"/**
   * Processes an entity instance to extract their identifier values.
   *
   * @param object $entity The entity instance.
   *
   * @return mixed A scalar value.
   *
   * @throws \Doctrine\ORM\ORMInvalidArgumentException
   */",2921
397,"
  ",2929
362,public,2930
397," ",2930
347,function,2930
397," ",2930
313,getSingleIdentifierValue,2930
0,(,0
317,$entity,2930
0,),0
397,"
  ",2930
0,{,0
397,"
    ",2931
317,$class,2932
397," ",2932
0,=,0
397," ",2932
317,$this,2932
390,->,2932
313,em,2932
390,->,2932
313,getClassMetadata,2932
0,(,0
313,get_class,2932
0,(,0
317,$entity,2932
0,),0
0,),0
0,;,0
397,"

    ",2932
326,if,2934
397," ",2934
0,(,0
317,$class,2934
390,->,2934
313,isIdentifierComposite,2934
0,),0
397," ",2934
0,{,0
397,"
      ",2934
258,throw,2935
397," ",2935
313,ORMInvalidArgumentException,2935
402,::,2935
313,invalidCompositeIdentifier,2935
0,(,0
0,),0
0,;,0
397,"
    ",2935
0,},0
397,"

    ",2936
317,$values,2938
397," ",2938
0,=,0
397," ",2938
317,$this,2938
390,->,2938
313,isInIdentityMap,2938
0,(,0
317,$entity,2938
0,),0
397,"
      ",2938
0,?,0
397," ",2939
317,$this,2939
390,->,2939
313,getEntityIdentifier,2939
0,(,0
317,$entity,2939
0,),0
397,"
      ",2939
0,:,0
397," ",2940
317,$class,2940
390,->,2940
313,getIdentifierValues,2940
0,(,0
317,$entity,2940
0,),0
0,;,0
397,"

    ",2940
350,return,2942
397," ",2942
366,isset,2942
0,(,0
317,$values,2942
0,[,0
317,$class,2942
390,->,2942
313,identifier,2942
0,[,0
311,0,2942
0,],0
0,],0
0,),0
397," ",2942
0,?,0
397," ",2942
317,$values,2942
0,[,0
317,$class,2942
390,->,2942
313,identifier,2942
0,[,0
311,0,2942
0,],0
0,],0
397," ",2942
0,:,0
397," ",2942
313,null,2942
0,;,0
397,"
  ",2942
0,},0
397,"

  ",2943
393,"/**
   * Tries to find an entity with the given identifier in the identity map of
   * this UnitOfWork.
   *
   * @param mixed  $id            The entity identifier to look for.
   * @param string $rootClassName The name of the root class of the mapped entity hierarchy.
   *
   * @return object|bool Returns the entity with the specified identifier if it exists in
   *                     this UnitOfWork, FALSE otherwise.
   */",2945
397,"
  ",2954
362,public,2955
397," ",2955
347,function,2955
397," ",2955
313,tryGetById,2955
0,(,0
317,$id,2955
0,",",0
397," ",2955
317,$rootClassName,2955
0,),0
397,"
  ",2955
0,{,0
397,"
    ",2956
317,$idHash,2957
397," ",2957
0,=,0
397," ",2957
313,implode,2957
0,(,0
320,"' '",2957
0,",",0
397," ",2957
302,(array),2957
397," ",2957
317,$id,2957
0,),0
0,;,0
397,"

    ",2957
326,if,2959
397," ",2959
0,(,0
366,isset,2959
0,(,0
317,$this,2959
390,->,2959
313,identityMap,2959
0,[,0
317,$rootClassName,2959
0,],0
0,[,0
317,$idHash,2959
0,],0
0,),0
0,),0
397," ",2959
0,{,0
397,"
      ",2959
350,return,2960
397," ",2960
317,$this,2960
390,->,2960
313,identityMap,2960
0,[,0
317,$rootClassName,2960
0,],0
0,[,0
317,$idHash,2960
0,],0
0,;,0
397,"
    ",2960
0,},0
397,"

    ",2961
350,return,2963
397," ",2963
313,false,2963
0,;,0
397,"
  ",2963
0,},0
397,"

  ",2964
393,"/**
   * Schedules an entity for dirty-checking at commit-time.
   *
   * @param object $entity The entity to schedule for dirty-checking.
   *
   * @return void
   *
   * @todo Rename: scheduleForSynchronization
   */",2966
397,"
  ",2974
362,public,2975
397," ",2975
347,function,2975
397," ",2975
313,scheduleForDirtyCheck,2975
0,(,0
317,$entity,2975
0,),0
397,"
  ",2975
0,{,0
397,"
    ",2976
317,$rootClassName,2977
397," ",2977
0,=,0
397," ",2977
317,$this,2977
390,->,2977
313,em,2977
390,->,2977
313,getClassMetadata,2977
0,(,0
313,get_class,2977
0,(,0
317,$entity,2977
0,),0
0,),0
390,->,2977
313,rootEntityName,2977
0,;,0
397,"

    ",2977
317,$this,2979
390,->,2979
313,scheduledForSynchronization,2979
0,[,0
317,$rootClassName,2979
0,],0
0,[,0
313,spl_object_hash,2979
0,(,0
317,$entity,2979
0,),0
0,],0
397," ",2979
0,=,0
397," ",2979
317,$entity,2979
0,;,0
397,"
  ",2979
0,},0
397,"

  ",2980
393,"/**
   * Checks whether the UnitOfWork has any pending insertions.
   *
   * @return boolean TRUE if this UnitOfWork has pending insertions, FALSE otherwise.
   */",2982
397,"
  ",2986
362,public,2987
397," ",2987
347,function,2987
397," ",2987
313,hasPendingInsertions,2987
0,(,0
0,),0
397,"
  ",2987
0,{,0
397,"
    ",2988
350,return,2989
397," ",2989
0,!,0
397," ",2989
367,empty,2989
0,(,0
317,$this,2989
390,->,2989
313,entityInsertions,2989
0,),0
0,;,0
397,"
  ",2989
0,},0
397,"

  ",2990
393,"/**
   * Calculates the size of the UnitOfWork. The size of the UnitOfWork is the
   * number of entities in the identity map.
   *
   * @return integer
   */",2992
397,"
  ",2997
362,public,2998
397," ",2998
347,function,2998
397," ",2998
313,size,2998
0,(,0
0,),0
397,"
  ",2998
0,{,0
397,"
    ",2999
317,$countArray,3000
397," ",3000
0,=,0
397," ",3000
313,array_map,3000
0,(,0
347,function,3000
397," ",3000
0,(,0
317,$item,3000
0,),0
397," ",3000
0,{,0
397," ",3000
350,return,3000
397," ",3000
313,count,3000
0,(,0
317,$item,3000
0,),0
0,;,0
397," ",3000
0,},0
0,",",0
397," ",3000
317,$this,3000
390,->,3000
313,identityMap,3000
0,),0
0,;,0
397,"

    ",3000
350,return,3002
397," ",3002
313,array_sum,3002
0,(,0
317,$countArray,3002
0,),0
0,;,0
397,"
  ",3002
0,},0
397,"

  ",3003
393,"/**
   * Gets the EntityPersister for an Entity.
   *
   * @param string $entityName The name of the Entity.
   *
   * @return \Doctrine\ORM\Persisters\Entity\EntityPersister
   */",3005
397,"
  ",3011
362,public,3012
397," ",3012
347,function,3012
397," ",3012
313,getEntityPersister,3012
0,(,0
317,$entityName,3012
0,),0
397,"
  ",3012
0,{,0
397,"
    ",3013
326,if,3014
397," ",3014
0,(,0
366,isset,3014
0,(,0
317,$this,3014
390,->,3014
313,persisters,3014
0,[,0
317,$entityName,3014
0,],0
0,),0
0,),0
397," ",3014
0,{,0
397,"
      ",3014
350,return,3015
397," ",3015
317,$this,3015
390,->,3015
313,persisters,3015
0,[,0
317,$entityName,3015
0,],0
0,;,0
397,"
    ",3015
0,},0
397,"

    ",3016
317,$class,3018
397," ",3018
0,=,0
397," ",3018
317,$this,3018
390,->,3018
313,em,3018
390,->,3018
313,getClassMetadata,3018
0,(,0
317,$entityName,3018
0,),0
0,;,0
397,"

    ",3018
339,switch,3020
397," ",3020
0,(,0
313,true,3020
0,),0
397," ",3020
0,{,0
397,"
      ",3020
341,case,3021
397," ",3021
0,(,0
317,$class,3021
390,->,3021
313,isInheritanceTypeNone,3021
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3021
317,$persister,3022
397," ",3022
0,=,0
397," ",3022
324,new,3022
397," ",3022
313,BasicEntityPersister,3022
0,(,0
317,$this,3022
390,->,3022
313,em,3022
0,",",0
397," ",3022
317,$class,3022
0,),0
0,;,0
397,"
        ",3022
344,break,3023
0,;,0
397,"

      ",3023
341,case,3025
397," ",3025
0,(,0
317,$class,3025
390,->,3025
313,isInheritanceTypeSingleTable,3025
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3025
317,$persister,3026
397," ",3026
0,=,0
397," ",3026
324,new,3026
397," ",3026
313,SingleTablePersister,3026
0,(,0
317,$this,3026
390,->,3026
313,em,3026
0,",",0
397," ",3026
317,$class,3026
0,),0
0,;,0
397,"
        ",3026
344,break,3027
0,;,0
397,"

      ",3027
341,case,3029
397," ",3029
0,(,0
317,$class,3029
390,->,3029
313,isInheritanceTypeJoined,3029
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3029
317,$persister,3030
397," ",3030
0,=,0
397," ",3030
324,new,3030
397," ",3030
313,JoinedSubclassPersister,3030
0,(,0
317,$this,3030
390,->,3030
313,em,3030
0,",",0
397," ",3030
317,$class,3030
0,),0
0,;,0
397,"
        ",3030
344,break,3031
0,;,0
397,"

      ",3031
342,default,3033
0,:,0
397,"
        ",3033
258,throw,3034
397," ",3034
324,new,3034
397," ",3034
314,"\RuntimeException",3034
0,(,0
320,"'No persister found for entity.'",3034
0,),0
0,;,0
397,"
    ",3034
0,},0
397,"

    ",3035
326,if,3037
397," ",3037
0,(,0
317,$this,3037
390,->,3037
313,hasCache,3037
397," ",3037
286,&&,3037
397," ",3037
317,$class,3037
390,->,3037
313,cache,3037
397," ",3037
292,!==,3037
397," ",3037
313,null,3037
0,),0
397," ",3037
0,{,0
397,"
      ",3037
317,$persister,3038
397," ",3038
0,=,0
397," ",3038
317,$this,3038
390,->,3038
313,em,3038
390,->,3038
313,getConfiguration,3038
0,(,0
0,),0
397,"
        ",3038
390,->,3039
313,getSecondLevelCacheConfiguration,3039
0,(,0
0,),0
397,"
        ",3039
390,->,3040
313,getCacheFactory,3040
0,(,0
0,),0
397,"
        ",3040
390,->,3041
313,buildCachedEntityPersister,3041
0,(,0
317,$this,3041
390,->,3041
313,em,3041
0,",",0
397," ",3041
317,$persister,3041
0,",",0
397," ",3041
317,$class,3041
0,),0
0,;,0
397,"
    ",3041
0,},0
397,"

    ",3042
317,$this,3044
390,->,3044
313,persisters,3044
0,[,0
317,$entityName,3044
0,],0
397," ",3044
0,=,0
397," ",3044
317,$persister,3044
0,;,0
397,"

    ",3044
350,return,3046
397," ",3046
317,$this,3046
390,->,3046
313,persisters,3046
0,[,0
317,$entityName,3046
0,],0
0,;,0
397,"
  ",3046
0,},0
397,"

  ",3047
393,"/**
   * Gets a collection persister for a collection-valued association.
   *
   * @param array $association
   *
   * @return \Doctrine\ORM\Persisters\Collection\CollectionPersister
   */",3049
397,"
  ",3055
362,public,3056
397," ",3056
347,function,3056
397," ",3056
313,getCollectionPersister,3056
0,(,0
377,array,3056
397," ",3056
317,$association,3056
0,),0
397,"
  ",3056
0,{,0
397,"
    ",3057
317,$role,3058
397," ",3058
0,=,0
397," ",3058
366,isset,3058
0,(,0
317,$association,3058
0,[,0
320,'cache',3058
0,],0
0,),0
397,"
      ",3058
0,?,0
397," ",3059
317,$association,3059
0,[,0
320,'sourceEntity',3059
0,],0
397," ",3059
0,.,0
397," ",3059
320,'::',3059
397," ",3059
0,.,0
397," ",3059
317,$association,3059
0,[,0
320,'fieldName',3059
0,],0
397,"
      ",3059
0,:,0
397," ",3060
317,$association,3060
0,[,0
320,'type',3060
0,],0
0,;,0
397,"

    ",3060
326,if,3062
397," ",3062
0,(,0
366,isset,3062
0,(,0
317,$this,3062
390,->,3062
313,collectionPersisters,3062
0,[,0
317,$role,3062
0,],0
0,),0
0,),0
397," ",3062
0,{,0
397,"
      ",3062
350,return,3063
397," ",3063
317,$this,3063
390,->,3063
313,collectionPersisters,3063
0,[,0
317,$role,3063
0,],0
0,;,0
397,"
    ",3063
0,},0
397,"

    ",3064
317,$persister,3066
397," ",3066
0,=,0
397," ",3066
313,ClassMetadata,3066
402,::,3066
313,ONE_TO_MANY,3066
397," ",3066
291,===,3066
397," ",3066
317,$association,3066
0,[,0
320,'type',3066
0,],0
397,"
      ",3066
0,?,0
397," ",3067
324,new,3067
397," ",3067
313,OneToManyPersister,3067
0,(,0
317,$this,3067
390,->,3067
313,em,3067
0,),0
397,"
      ",3067
0,:,0
397," ",3068
324,new,3068
397," ",3068
313,ManyToManyPersister,3068
0,(,0
317,$this,3068
390,->,3068
313,em,3068
0,),0
0,;,0
397,"

    ",3068
326,if,3070
397," ",3070
0,(,0
317,$this,3070
390,->,3070
313,hasCache,3070
397," ",3070
286,&&,3070
397," ",3070
366,isset,3070
0,(,0
317,$association,3070
0,[,0
320,'cache',3070
0,],0
0,),0
0,),0
397," ",3070
0,{,0
397,"
      ",3070
317,$persister,3071
397," ",3071
0,=,0
397," ",3071
317,$this,3071
390,->,3071
313,em,3071
390,->,3071
313,getConfiguration,3071
0,(,0
0,),0
397,"
        ",3071
390,->,3072
313,getSecondLevelCacheConfiguration,3072
0,(,0
0,),0
397,"
        ",3072
390,->,3073
313,getCacheFactory,3073
0,(,0
0,),0
397,"
        ",3073
390,->,3074
313,buildCachedCollectionPersister,3074
0,(,0
317,$this,3074
390,->,3074
313,em,3074
0,",",0
397," ",3074
317,$persister,3074
0,",",0
397," ",3074
317,$association,3074
0,),0
0,;,0
397,"
    ",3074
0,},0
397,"

    ",3075
317,$this,3077
390,->,3077
313,collectionPersisters,3077
0,[,0
317,$role,3077
0,],0
397," ",3077
0,=,0
397," ",3077
317,$persister,3077
0,;,0
397,"

    ",3077
350,return,3079
397," ",3079
317,$this,3079
390,->,3079
313,collectionPersisters,3079
0,[,0
317,$role,3079
0,],0
0,;,0
397,"
  ",3079
0,},0
397,"

  ",3080
393,"/**
   * INTERNAL:
   * Registers an entity as managed.
   *
   * @param object $entity The entity.
   * @param array  $id     The identifier values.
   * @param array  $data   The original entity data.
   *
   * @return void
   */",3082
397,"
  ",3091
362,public,3092
397," ",3092
347,function,3092
397," ",3092
313,registerManaged,3092
0,(,0
317,$entity,3092
0,",",0
397," ",3092
377,array,3092
397," ",3092
317,$id,3092
0,",",0
397," ",3092
377,array,3092
397," ",3092
317,$data,3092
0,),0
397,"
  ",3092
0,{,0
397,"
    ",3093
317,$oid,3094
397," ",3094
0,=,0
397," ",3094
313,spl_object_hash,3094
0,(,0
317,$entity,3094
0,),0
0,;,0
397,"

    ",3094
317,$this,3096
390,->,3096
313,entityIdentifiers,3096
0,[,0
317,$oid,3096
0,],0
397,"  ",3096
0,=,0
397," ",3096
317,$id,3096
0,;,0
397,"
    ",3096
317,$this,3097
390,->,3097
313,entityStates,3097
0,[,0
317,$oid,3097
0,],0
397,"       ",3097
0,=,0
397," ",3097
313,self,3097
402,::,3097
313,STATE_MANAGED,3097
0,;,0
397,"
    ",3097
317,$this,3098
390,->,3098
313,originalEntityData,3098
0,[,0
317,$oid,3098
0,],0
397," ",3098
0,=,0
397," ",3098
317,$data,3098
0,;,0
397,"

    ",3098
317,$this,3100
390,->,3100
313,addToIdentityMap,3100
0,(,0
317,$entity,3100
0,),0
0,;,0
397,"

    ",3100
326,if,3102
397," ",3102
0,(,0
317,$entity,3102
397," ",3102
298,instanceof,3102
397," ",3102
313,NotifyPropertyChanged,3102
397," ",3102
286,&&,3102
397," ",3102
0,(,0
397," ",3102
0,!,0
397," ",3102
317,$entity,3102
397," ",3102
298,instanceof,3102
397," ",3102
313,Proxy,3102
397," ",3102
285,||,3102
397," ",3102
317,$entity,3102
390,->,3102
313,__isInitialized,3102
0,(,0
0,),0
0,),0
0,),0
397," ",3102
0,{,0
397,"
      ",3102
317,$entity,3103
390,->,3103
313,addPropertyChangedListener,3103
0,(,0
317,$this,3103
0,),0
0,;,0
397,"
    ",3103
0,},0
397,"
  ",3104
0,},0
397,"

  ",3105
393,"/**
   * INTERNAL:
   * Clears the property changeset of the entity with the given OID.
   *
   * @param string $oid The entity's OID.
   *
   * @return void
   */",3107
397,"
  ",3114
362,public,3115
397," ",3115
347,function,3115
397," ",3115
313,clearEntityChangeSet,3115
0,(,0
317,$oid,3115
0,),0
397,"
  ",3115
0,{,0
397,"
    ",3116
317,$this,3117
390,->,3117
313,entityChangeSets,3117
0,[,0
317,$oid,3117
0,],0
397," ",3117
0,=,0
397," ",3117
377,array,3117
0,(,0
0,),0
0,;,0
397,"
  ",3117
0,},0
397,"

  ",3118
392,"/* PropertyChangedListener implementation */",3120
397,"

  ",3120
393,"/**
   * Notifies this UnitOfWork of a property change in an entity.
   *
   * @param object $entity       The entity that owns the property.
   * @param string $propertyName The name of the property that changed.
   * @param mixed  $oldValue     The old value of the property.
   * @param mixed  $newValue     The new value of the property.
   *
   * @return void
   */",3122
397,"
  ",3131
362,public,3132
397," ",3132
347,function,3132
397," ",3132
313,propertyChanged,3132
0,(,0
317,$entity,3132
0,",",0
397," ",3132
317,$propertyName,3132
0,",",0
397," ",3132
317,$oldValue,3132
0,",",0
397," ",3132
317,$newValue,3132
0,),0
397,"
  ",3132
0,{,0
397,"
    ",3133
317,$oid,3134
397,"   ",3134
0,=,0
397," ",3134
313,spl_object_hash,3134
0,(,0
317,$entity,3134
0,),0
0,;,0
397,"
    ",3134
317,$class,3135
397," ",3135
0,=,0
397," ",3135
317,$this,3135
390,->,3135
313,em,3135
390,->,3135
313,getClassMetadata,3135
0,(,0
313,get_class,3135
0,(,0
317,$entity,3135
0,),0
0,),0
0,;,0
397,"

    ",3135
317,$isAssocField,3137
397," ",3137
0,=,0
397," ",3137
366,isset,3137
0,(,0
317,$class,3137
390,->,3137
313,associationMappings,3137
0,[,0
317,$propertyName,3137
0,],0
0,),0
0,;,0
397,"

    ",3137
326,if,3139
397," ",3139
0,(,0
397," ",3139
0,!,0
397," ",3139
317,$isAssocField,3139
397," ",3139
286,&&,3139
397," ",3139
0,!,0
397," ",3139
366,isset,3139
0,(,0
317,$class,3139
390,->,3139
313,fieldMappings,3139
0,[,0
317,$propertyName,3139
0,],0
0,),0
0,),0
397," ",3139
0,{,0
397,"
      ",3139
350,return,3140
0,;,0
397," ",3140
392,"// ignore non-persistent fields",3140
397,"
    ",3140
0,},0
397,"

    ",3141
392,"// Update changeset and mark entity for synchronization",3143
397,"
    ",3143
317,$this,3144
390,->,3144
313,entityChangeSets,3144
0,[,0
317,$oid,3144
0,],0
0,[,0
317,$propertyName,3144
0,],0
397," ",3144
0,=,0
397," ",3144
377,array,3144
0,(,0
317,$oldValue,3144
0,",",0
397," ",3144
317,$newValue,3144
0,),0
0,;,0
397,"

    ",3144
326,if,3146
397," ",3146
0,(,0
397," ",3146
0,!,0
397," ",3146
366,isset,3146
0,(,0
317,$this,3146
390,->,3146
313,scheduledForSynchronization,3146
0,[,0
317,$class,3146
390,->,3146
313,rootEntityName,3146
0,],0
0,[,0
317,$oid,3146
0,],0
0,),0
0,),0
397," ",3146
0,{,0
397,"
      ",3146
317,$this,3147
390,->,3147
313,scheduleForDirtyCheck,3147
0,(,0
317,$entity,3147
0,),0
0,;,0
397,"
    ",3147
0,},0
397,"
  ",3148
0,},0
397,"

  ",3149
393,"/**
   * Gets the currently scheduled entity insertions in this UnitOfWork.
   *
   * @return array
   */",3151
397,"
  ",3155
362,public,3156
397," ",3156
347,function,3156
397," ",3156
313,getScheduledEntityInsertions,3156
0,(,0
0,),0
397,"
  ",3156
0,{,0
397,"
    ",3157
350,return,3158
397," ",3158
317,$this,3158
390,->,3158
313,entityInsertions,3158
0,;,0
397,"
  ",3158
0,},0
397,"

  ",3159
393,"/**
   * Gets the currently scheduled entity updates in this UnitOfWork.
   *
   * @return array
   */",3161
397,"
  ",3165
362,public,3166
397," ",3166
347,function,3166
397," ",3166
313,getScheduledEntityUpdates,3166
0,(,0
0,),0
397,"
  ",3166
0,{,0
397,"
    ",3167
350,return,3168
397," ",3168
317,$this,3168
390,->,3168
313,entityUpdates,3168
0,;,0
397,"
  ",3168
0,},0
397,"

  ",3169
393,"/**
   * Gets the currently scheduled entity deletions in this UnitOfWork.
   *
   * @return array
   */",3171
397,"
  ",3175
362,public,3176
397," ",3176
347,function,3176
397," ",3176
313,getScheduledEntityDeletions,3176
0,(,0
0,),0
397,"
  ",3176
0,{,0
397,"
    ",3177
350,return,3178
397," ",3178
317,$this,3178
390,->,3178
313,entityDeletions,3178
0,;,0
397,"
  ",3178
0,},0
397,"

  ",3179
393,"/**
   * Gets the currently scheduled complete collection deletions
   *
   * @return array
   */",3181
397,"
  ",3185
362,public,3186
397," ",3186
347,function,3186
397," ",3186
313,getScheduledCollectionDeletions,3186
0,(,0
0,),0
397,"
  ",3186
0,{,0
397,"
    ",3187
350,return,3188
397," ",3188
317,$this,3188
390,->,3188
313,collectionDeletions,3188
0,;,0
397,"
  ",3188
0,},0
397,"

  ",3189
393,"/**
   * Gets the currently scheduled collection inserts, updates and deletes.
   *
   * @return array
   */",3191
397,"
  ",3195
362,public,3196
397," ",3196
347,function,3196
397," ",3196
313,getScheduledCollectionUpdates,3196
0,(,0
0,),0
397,"
  ",3196
0,{,0
397,"
    ",3197
350,return,3198
397," ",3198
317,$this,3198
390,->,3198
313,collectionUpdates,3198
0,;,0
397,"
  ",3198
0,},0
397,"

  ",3199
393,"/**
   * Helper method to initialize a lazy loading proxy or persistent collection.
   *
   * @param object $obj
   *
   * @return void
   */",3201
397,"
  ",3207
362,public,3208
397," ",3208
347,function,3208
397," ",3208
313,initializeObject,3208
0,(,0
317,$obj,3208
0,),0
397,"
  ",3208
0,{,0
397,"
    ",3209
326,if,3210
397," ",3210
0,(,0
317,$obj,3210
397," ",3210
298,instanceof,3210
397," ",3210
313,Proxy,3210
0,),0
397," ",3210
0,{,0
397,"
      ",3210
317,$obj,3211
390,->,3211
313,__load,3211
0,(,0
0,),0
0,;,0
397,"

      ",3211
350,return,3213
0,;,0
397,"
    ",3213
0,},0
397,"

    ",3214
326,if,3216
397," ",3216
0,(,0
317,$obj,3216
397," ",3216
298,instanceof,3216
397," ",3216
313,PersistentCollection,3216
0,),0
397," ",3216
0,{,0
397,"
      ",3216
317,$obj,3217
390,->,3217
313,initialize,3217
0,(,0
0,),0
0,;,0
397,"
    ",3217
0,},0
397,"
  ",3218
0,},0
397,"

  ",3219
393,"/**
   * Helper method to show an object as string.
   *
   * @param object $obj
   *
   * @return string
   */",3221
397,"
  ",3227
360,private,3228
397," ",3228
357,static,3228
397," ",3228
347,function,3228
397," ",3228
313,objToStr,3228
0,(,0
317,$obj,3228
0,),0
397,"
  ",3228
0,{,0
397,"
    ",3229
350,return,3230
397," ",3230
313,method_exists,3230
0,(,0
317,$obj,3230
0,",",0
397," ",3230
320,'__toString',3230
0,),0
397," ",3230
0,?,0
397," ",3230
301,(string),3230
317,$obj,3230
397," ",3230
0,:,0
397," ",3230
313,get_class,3230
0,(,0
317,$obj,3230
0,),0
0,.,0
320,'@',3230
0,.,0
313,spl_object_hash,3230
0,(,0
317,$obj,3230
0,),0
0,;,0
397,"
  ",3230
0,},0
397,"

  ",3231
393,"/**
   * Marks an entity as read-only so that it will not be considered for updates during UnitOfWork#commit().
   *
   * This operation cannot be undone as some parts of the UnitOfWork now keep gathering information
   * on this object that might be necessary to perform a correct update.
   *
   * @param object $object
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   */",3233
397,"
  ",3244
362,public,3245
397," ",3245
347,function,3245
397," ",3245
313,markReadOnly,3245
0,(,0
317,$object,3245
0,),0
397,"
  ",3245
0,{,0
397,"
    ",3246
326,if,3247
397," ",3247
0,(,0
397," ",3247
0,!,0
397," ",3247
313,is_object,3247
0,(,0
317,$object,3247
0,),0
397," ",3247
285,||,3247
397," ",3247
0,!,0
397," ",3247
317,$this,3247
390,->,3247
313,isInIdentityMap,3247
0,(,0
317,$object,3247
0,),0
0,),0
397," ",3247
0,{,0
397,"
      ",3247
258,throw,3248
397," ",3248
313,ORMInvalidArgumentException,3248
402,::,3248
313,readOnlyRequiresManagedEntity,3248
0,(,0
317,$object,3248
0,),0
0,;,0
397,"
    ",3248
0,},0
397,"

    ",3249
317,$this,3251
390,->,3251
313,readOnlyObjects,3251
0,[,0
313,spl_object_hash,3251
0,(,0
317,$object,3251
0,),0
0,],0
397," ",3251
0,=,0
397," ",3251
313,true,3251
0,;,0
397,"
  ",3251
0,},0
397,"

  ",3252
393,"/**
   * Is this entity read only?
   *
   * @param object $object
   *
   * @return bool
   *
   * @throws ORMInvalidArgumentException
   */",3254
397,"
  ",3262
362,public,3263
397," ",3263
347,function,3263
397," ",3263
313,isReadOnly,3263
0,(,0
317,$object,3263
0,),0
397,"
  ",3263
0,{,0
397,"
    ",3264
326,if,3265
397," ",3265
0,(,0
397," ",3265
0,!,0
397," ",3265
313,is_object,3265
0,(,0
317,$object,3265
0,),0
0,),0
397," ",3265
0,{,0
397,"
      ",3265
258,throw,3266
397," ",3266
313,ORMInvalidArgumentException,3266
402,::,3266
313,readOnlyRequiresManagedEntity,3266
0,(,0
317,$object,3266
0,),0
0,;,0
397,"
    ",3266
0,},0
397,"

    ",3267
350,return,3269
397," ",3269
366,isset,3269
0,(,0
317,$this,3269
390,->,3269
313,readOnlyObjects,3269
0,[,0
313,spl_object_hash,3269
0,(,0
317,$object,3269
0,),0
0,],0
0,),0
0,;,0
397,"
  ",3269
0,},0
397,"

  ",3270
393,"/**
   * Perform whatever processing is encapsulated here after completion of the transaction.
   */",3272
397,"
  ",3274
360,private,3275
397," ",3275
347,function,3275
397," ",3275
313,afterTransactionComplete,3275
0,(,0
0,),0
397,"
  ",3275
0,{,0
397,"
    ",3276
326,if,3277
397," ",3277
0,(,0
397," ",3277
0,!,0
397," ",3277
317,$this,3277
390,->,3277
313,hasCache,3277
0,),0
397," ",3277
0,{,0
397,"
      ",3277
350,return,3278
0,;,0
397,"
    ",3278
0,},0
397,"

    ",3279
334,foreach,3281
397," ",3281
0,(,0
317,$this,3281
390,->,3281
313,persisters,3281
397," ",3281
338,as,3281
397," ",3281
317,$persister,3281
0,),0
397," ",3281
0,{,0
397,"
      ",3281
326,if,3282
397," ",3282
0,(,0
317,$persister,3282
397," ",3282
298,instanceof,3282
397," ",3282
313,CachedPersister,3282
0,),0
397," ",3282
0,{,0
397,"
        ",3282
317,$persister,3283
390,->,3283
313,afterTransactionComplete,3283
0,(,0
0,),0
0,;,0
397,"
      ",3283
0,},0
397,"
    ",3284
0,},0
397,"

    ",3285
334,foreach,3287
397," ",3287
0,(,0
317,$this,3287
390,->,3287
313,collectionPersisters,3287
397," ",3287
338,as,3287
397," ",3287
317,$persister,3287
0,),0
397," ",3287
0,{,0
397,"
      ",3287
326,if,3288
397," ",3288
0,(,0
317,$persister,3288
397," ",3288
298,instanceof,3288
397," ",3288
313,CachedPersister,3288
0,),0
397," ",3288
0,{,0
397,"
        ",3288
317,$persister,3289
390,->,3289
313,afterTransactionComplete,3289
0,(,0
0,),0
0,;,0
397,"
      ",3289
0,},0
397,"
    ",3290
0,},0
397,"
  ",3291
0,},0
397,"

  ",3292
393,"/**
   * Perform whatever processing is encapsulated here after completion of the rolled-back.
   */",3294
397,"
  ",3296
360,private,3297
397," ",3297
347,function,3297
397," ",3297
313,afterTransactionRolledBack,3297
0,(,0
0,),0
397,"
  ",3297
0,{,0
397,"
    ",3298
326,if,3299
397," ",3299
0,(,0
397," ",3299
0,!,0
397," ",3299
317,$this,3299
390,->,3299
313,hasCache,3299
0,),0
397," ",3299
0,{,0
397,"
      ",3299
350,return,3300
0,;,0
397,"
    ",3300
0,},0
397,"

    ",3301
334,foreach,3303
397," ",3303
0,(,0
317,$this,3303
390,->,3303
313,persisters,3303
397," ",3303
338,as,3303
397," ",3303
317,$persister,3303
0,),0
397," ",3303
0,{,0
397,"
      ",3303
326,if,3304
397," ",3304
0,(,0
317,$persister,3304
397," ",3304
298,instanceof,3304
397," ",3304
313,CachedPersister,3304
0,),0
397," ",3304
0,{,0
397,"
        ",3304
317,$persister,3305
390,->,3305
313,afterTransactionRolledBack,3305
0,(,0
0,),0
0,;,0
397,"
      ",3305
0,},0
397,"
    ",3306
0,},0
397,"

    ",3307
334,foreach,3309
397," ",3309
0,(,0
317,$this,3309
390,->,3309
313,collectionPersisters,3309
397," ",3309
338,as,3309
397," ",3309
317,$persister,3309
0,),0
397," ",3309
0,{,0
397,"
      ",3309
326,if,3310
397," ",3310
0,(,0
317,$persister,3310
397," ",3310
298,instanceof,3310
397," ",3310
313,CachedPersister,3310
0,),0
397," ",3310
0,{,0
397,"
        ",3310
317,$persister,3311
390,->,3311
313,afterTransactionRolledBack,3311
0,(,0
0,),0
0,;,0
397,"
      ",3311
0,},0
397,"
    ",3312
0,},0
397,"
  ",3313
0,},0
397,"

  ",3314
360,private,3316
397," ",3316
347,function,3316
397," ",3316
313,dispatchOnFlushEvent,3316
0,(,0
0,),0
397,"
  ",3316
0,{,0
397,"
    ",3317
326,if,3318
397," ",3318
0,(,0
317,$this,3318
390,->,3318
313,evm,3318
390,->,3318
313,hasListeners,3318
0,(,0
313,Events,3318
402,::,3318
313,onFlush,3318
0,),0
0,),0
397," ",3318
0,{,0
397,"
      ",3318
317,$this,3319
390,->,3319
313,evm,3319
390,->,3319
313,dispatchEvent,3319
0,(,0
313,Events,3319
402,::,3319
313,onFlush,3319
0,",",0
397," ",3319
324,new,3319
397," ",3319
313,OnFlushEventArgs,3319
0,(,0
317,$this,3319
390,->,3319
313,em,3319
0,),0
0,),0
0,;,0
397,"
    ",3319
0,},0
397,"
  ",3320
0,},0
397,"

  ",3321
360,private,3323
397," ",3323
347,function,3323
397," ",3323
313,dispatchPostFlushEvent,3323
0,(,0
0,),0
397,"
  ",3323
0,{,0
397,"
    ",3324
326,if,3325
397," ",3325
0,(,0
317,$this,3325
390,->,3325
313,evm,3325
390,->,3325
313,hasListeners,3325
0,(,0
313,Events,3325
402,::,3325
313,postFlush,3325
0,),0
0,),0
397," ",3325
0,{,0
397,"
      ",3325
317,$this,3326
390,->,3326
313,evm,3326
390,->,3326
313,dispatchEvent,3326
0,(,0
313,Events,3326
402,::,3326
313,postFlush,3326
0,",",0
397," ",3326
324,new,3326
397," ",3326
313,PostFlushEventArgs,3326
0,(,0
317,$this,3326
390,->,3326
313,em,3326
0,),0
0,),0
0,;,0
397,"
    ",3326
0,},0
397,"
  ",3327
0,},0
397,"

  ",3328
393,"/**
   * Verifies if two given entities actually are the same based on identifier comparison
   *
   * @param object $entity1
   * @param object $entity2
   *
   * @return bool
   */",3330
397,"
  ",3337
360,private,3338
397," ",3338
347,function,3338
397," ",3338
313,isIdentifierEquals,3338
0,(,0
317,$entity1,3338
0,",",0
397," ",3338
317,$entity2,3338
0,),0
397,"
  ",3338
0,{,0
397,"
    ",3339
326,if,3340
397," ",3340
0,(,0
317,$entity1,3340
397," ",3340
291,===,3340
397," ",3340
317,$entity2,3340
0,),0
397," ",3340
0,{,0
397,"
      ",3340
350,return,3341
397," ",3341
313,true,3341
0,;,0
397,"
    ",3341
0,},0
397,"

    ",3342
317,$class,3344
397," ",3344
0,=,0
397," ",3344
317,$this,3344
390,->,3344
313,em,3344
390,->,3344
313,getClassMetadata,3344
0,(,0
313,get_class,3344
0,(,0
317,$entity1,3344
0,),0
0,),0
0,;,0
397,"

    ",3344
326,if,3346
397," ",3346
0,(,0
317,$class,3346
397," ",3346
292,!==,3346
397," ",3346
317,$this,3346
390,->,3346
313,em,3346
390,->,3346
313,getClassMetadata,3346
0,(,0
313,get_class,3346
0,(,0
317,$entity2,3346
0,),0
0,),0
0,),0
397," ",3346
0,{,0
397,"
      ",3346
350,return,3347
397," ",3347
313,false,3347
0,;,0
397,"
    ",3347
0,},0
397,"

    ",3348
317,$oid1,3350
397," ",3350
0,=,0
397," ",3350
313,spl_object_hash,3350
0,(,0
317,$entity1,3350
0,),0
0,;,0
397,"
    ",3350
317,$oid2,3351
397," ",3351
0,=,0
397," ",3351
313,spl_object_hash,3351
0,(,0
317,$entity2,3351
0,),0
0,;,0
397,"

    ",3351
317,$id1,3353
397," ",3353
0,=,0
397," ",3353
366,isset,3353
0,(,0
317,$this,3353
390,->,3353
313,entityIdentifiers,3353
0,[,0
317,$oid1,3353
0,],0
0,),0
397,"
      ",3353
0,?,0
397," ",3354
317,$this,3354
390,->,3354
313,entityIdentifiers,3354
0,[,0
317,$oid1,3354
0,],0
397,"
      ",3354
0,:,0
397," ",3355
317,$this,3355
390,->,3355
313,identifierFlattener,3355
390,->,3355
313,flattenIdentifier,3355
0,(,0
317,$class,3355
0,",",0
397," ",3355
317,$class,3355
390,->,3355
313,getIdentifierValues,3355
0,(,0
317,$entity1,3355
0,),0
0,),0
0,;,0
397,"
    ",3355
317,$id2,3356
397," ",3356
0,=,0
397," ",3356
366,isset,3356
0,(,0
317,$this,3356
390,->,3356
313,entityIdentifiers,3356
0,[,0
317,$oid2,3356
0,],0
0,),0
397,"
      ",3356
0,?,0
397," ",3357
317,$this,3357
390,->,3357
313,entityIdentifiers,3357
0,[,0
317,$oid2,3357
0,],0
397,"
      ",3357
0,:,0
397," ",3358
317,$this,3358
390,->,3358
313,identifierFlattener,3358
390,->,3358
313,flattenIdentifier,3358
0,(,0
317,$class,3358
0,",",0
397," ",3358
317,$class,3358
390,->,3358
313,getIdentifierValues,3358
0,(,0
317,$entity2,3358
0,),0
0,),0
0,;,0
397,"

    ",3358
350,return,3360
397," ",3360
317,$id1,3360
397," ",3360
291,===,3360
397," ",3360
317,$id2,3360
397," ",3360
285,||,3360
397," ",3360
313,implode,3360
0,(,0
320,"' '",3360
0,",",0
397," ",3360
317,$id1,3360
0,),0
397," ",3360
291,===,3360
397," ",3360
313,implode,3360
0,(,0
320,"' '",3360
0,",",0
397," ",3360
317,$id2,3360
0,),0
0,;,0
397,"
  ",3360
0,},0
397,"

  ",3361
393,"/**
   * @param object $entity
   * @param object $managedCopy
   *
   * @throws ORMException
   * @throws OptimisticLockException
   * @throws TransactionRequiredException
   */",3363
397,"
  ",3370
360,private,3371
397," ",3371
347,function,3371
397," ",3371
313,mergeEntityStateIntoManagedCopy,3371
0,(,0
317,$entity,3371
0,",",0
397," ",3371
317,$managedCopy,3371
0,),0
397,"
  ",3371
0,{,0
397,"
    ",3372
317,$class,3373
397," ",3373
0,=,0
397," ",3373
317,$this,3373
390,->,3373
313,em,3373
390,->,3373
313,getClassMetadata,3373
0,(,0
313,get_class,3373
0,(,0
317,$entity,3373
0,),0
0,),0
0,;,0
397,"

    ",3373
334,foreach,3375
397," ",3375
0,(,0
317,$this,3375
390,->,3375
313,reflectionPropertiesGetter,3375
390,->,3375
313,getProperties,3375
0,(,0
317,$class,3375
390,->,3375
313,name,3375
0,),0
397," ",3375
338,as,3375
397," ",3375
317,$prop,3375
0,),0
397," ",3375
0,{,0
397,"
      ",3375
317,$name,3376
397," ",3376
0,=,0
397," ",3376
317,$prop,3376
390,->,3376
313,name,3376
0,;,0
397,"

      ",3376
317,$prop,3378
390,->,3378
313,setAccessible,3378
0,(,0
313,true,3378
0,),0
0,;,0
397,"

      ",3378
326,if,3380
397," ",3380
0,(,0
397," ",3380
0,!,0
397," ",3380
366,isset,3380
0,(,0
317,$class,3380
390,->,3380
313,associationMappings,3380
0,[,0
317,$name,3380
0,],0
0,),0
0,),0
397," ",3380
0,{,0
397,"
        ",3380
326,if,3381
397," ",3381
0,(,0
397," ",3381
0,!,0
397," ",3381
317,$class,3381
390,->,3381
313,isIdentifier,3381
0,(,0
317,$name,3381
0,),0
0,),0
397," ",3381
0,{,0
397,"
          ",3381
317,$prop,3382
390,->,3382
313,setValue,3382
0,(,0
317,$managedCopy,3382
0,",",0
397," ",3382
317,$prop,3382
390,->,3382
313,getValue,3382
0,(,0
317,$entity,3382
0,),0
0,),0
0,;,0
397,"
        ",3382
0,},0
397,"
      ",3383
0,},0
397," ",3384
310,else,3384
397," ",3384
0,{,0
397,"
        ",3384
317,$assoc2,3385
397," ",3385
0,=,0
397," ",3385
317,$class,3385
390,->,3385
313,associationMappings,3385
0,[,0
317,$name,3385
0,],0
0,;,0
397,"

        ",3385
326,if,3387
397," ",3387
0,(,0
317,$assoc2,3387
0,[,0
320,'type',3387
0,],0
397," ",3387
287,&,3387
397," ",3387
313,ClassMetadata,3387
402,::,3387
313,TO_ONE,3387
0,),0
397," ",3387
0,{,0
397,"
          ",3387
317,$other,3388
397," ",3388
0,=,0
397," ",3388
317,$prop,3388
390,->,3388
313,getValue,3388
0,(,0
317,$entity,3388
0,),0
0,;,0
397,"
          ",3388
326,if,3389
397," ",3389
0,(,0
317,$other,3389
397," ",3389
291,===,3389
397," ",3389
313,null,3389
0,),0
397," ",3389
0,{,0
397,"
            ",3389
317,$prop,3390
390,->,3390
313,setValue,3390
0,(,0
317,$managedCopy,3390
0,",",0
397," ",3390
313,null,3390
0,),0
0,;,0
397,"
          ",3390
0,},0
397," ",3391
310,else,3391
397," ",3391
0,{,0
397,"
            ",3391
326,if,3392
397," ",3392
0,(,0
317,$other,3392
397," ",3392
298,instanceof,3392
397," ",3392
313,Proxy,3392
397," ",3392
286,&&,3392
397," ",3392
0,!,0
317,$other,3392
390,->,3392
313,__isInitialized,3392
0,(,0
0,),0
0,),0
397," ",3392
0,{,0
397,"
              ",3392
392,"// do not merge fields marked lazy that have not been fetched.",3393
397,"
              ",3393
345,continue,3394
0,;,0
397,"
            ",3394
0,},0
397,"

            ",3395
326,if,3397
397," ",3397
0,(,0
397," ",3397
0,!,0
397," ",3397
317,$assoc2,3397
0,[,0
320,'isCascadeMerge',3397
0,],0
0,),0
397," ",3397
0,{,0
397,"
              ",3397
326,if,3398
397," ",3398
0,(,0
317,$this,3398
390,->,3398
313,getEntityState,3398
0,(,0
317,$other,3398
0,),0
397," ",3398
291,===,3398
397," ",3398
313,self,3398
402,::,3398
313,STATE_DETACHED,3398
0,),0
397," ",3398
0,{,0
397,"
                ",3398
317,$targetClass,3399
397," ",3399
0,=,0
397," ",3399
317,$this,3399
390,->,3399
313,em,3399
390,->,3399
313,getClassMetadata,3399
0,(,0
317,$assoc2,3399
0,[,0
320,'targetEntity',3399
0,],0
0,),0
0,;,0
397,"
                ",3399
317,$relatedId,3400
397,"   ",3400
0,=,0
397," ",3400
317,$targetClass,3400
390,->,3400
313,getIdentifierValues,3400
0,(,0
317,$other,3400
0,),0
0,;,0
397,"

                ",3400
326,if,3402
397," ",3402
0,(,0
317,$targetClass,3402
390,->,3402
313,subClasses,3402
0,),0
397," ",3402
0,{,0
397,"
                  ",3402
317,$other,3403
397," ",3403
0,=,0
397," ",3403
317,$this,3403
390,->,3403
313,em,3403
390,->,3403
313,find,3403
0,(,0
317,$targetClass,3403
390,->,3403
313,name,3403
0,",",0
397," ",3403
317,$relatedId,3403
0,),0
0,;,0
397,"
                ",3403
0,},0
397," ",3404
310,else,3404
397," ",3404
0,{,0
397,"
                  ",3404
317,$other,3405
397," ",3405
0,=,0
397," ",3405
317,$this,3405
390,->,3405
313,em,3405
390,->,3405
313,getProxyFactory,3405
0,(,0
0,),0
390,->,3405
313,getProxy,3405
0,(,0
397,"
                    ",3405
317,$assoc2,3406
0,[,0
320,'targetEntity',3406
0,],0
0,",",0
397,"
                    ",3406
317,$relatedId,3407
397,"
                  ",3407
0,),0
0,;,0
397,"
                  ",3408
317,$this,3409
390,->,3409
313,registerManaged,3409
0,(,0
317,$other,3409
0,",",0
397," ",3409
317,$relatedId,3409
0,",",0
397," ",3409
377,array,3409
0,(,0
0,),0
0,),0
0,;,0
397,"
                ",3409
0,},0
397,"
              ",3410
0,},0
397,"

              ",3411
317,$prop,3413
390,->,3413
313,setValue,3413
0,(,0
317,$managedCopy,3413
0,",",0
397," ",3413
317,$other,3413
0,),0
0,;,0
397,"
            ",3413
0,},0
397,"
          ",3414
0,},0
397,"
        ",3415
0,},0
397," ",3416
310,else,3416
397," ",3416
0,{,0
397,"
          ",3416
317,$mergeCol,3417
397," ",3417
0,=,0
397," ",3417
317,$prop,3417
390,->,3417
313,getValue,3417
0,(,0
317,$entity,3417
0,),0
0,;,0
397,"

          ",3417
326,if,3419
397," ",3419
0,(,0
317,$mergeCol,3419
397," ",3419
298,instanceof,3419
397," ",3419
313,PersistentCollection,3419
397," ",3419
286,&&,3419
397," ",3419
0,!,0
397," ",3419
317,$mergeCol,3419
390,->,3419
313,isInitialized,3419
0,(,0
0,),0
0,),0
397," ",3419
0,{,0
397,"
            ",3419
392,"// do not merge fields marked lazy that have not been fetched.",3420
397,"
            ",3420
392,"// keep the lazy persistent collection of the managed copy.",3421
397,"
            ",3421
345,continue,3422
0,;,0
397,"
          ",3422
0,},0
397,"

          ",3423
317,$managedCol,3425
397," ",3425
0,=,0
397," ",3425
317,$prop,3425
390,->,3425
313,getValue,3425
0,(,0
317,$managedCopy,3425
0,),0
0,;,0
397,"

          ",3425
326,if,3427
397," ",3427
0,(,0
397," ",3427
0,!,0
397," ",3427
317,$managedCol,3427
0,),0
397," ",3427
0,{,0
397,"
            ",3427
317,$managedCol,3428
397," ",3428
0,=,0
397," ",3428
324,new,3428
397," ",3428
313,PersistentCollection,3428
0,(,0
397,"
              ",3428
317,$this,3429
390,->,3429
313,em,3429
0,",",0
397,"
              ",3429
317,$this,3430
390,->,3430
313,em,3430
390,->,3430
313,getClassMetadata,3430
0,(,0
317,$assoc2,3430
0,[,0
320,'targetEntity',3430
0,],0
0,),0
0,",",0
397,"
              ",3430
324,new,3431
397," ",3431
313,ArrayCollection,3431
397,"
            ",3431
0,),0
0,;,0
397,"
            ",3432
317,$managedCol,3433
390,->,3433
313,setOwner,3433
0,(,0
317,$managedCopy,3433
0,",",0
397," ",3433
317,$assoc2,3433
0,),0
0,;,0
397,"
            ",3433
317,$prop,3434
390,->,3434
313,setValue,3434
0,(,0
317,$managedCopy,3434
0,",",0
397," ",3434
317,$managedCol,3434
0,),0
0,;,0
397,"

            ",3434
317,$this,3436
390,->,3436
313,originalEntityData,3436
0,[,0
313,spl_object_hash,3436
0,(,0
317,$entity,3436
0,),0
0,],0
0,[,0
317,$name,3436
0,],0
397," ",3436
0,=,0
397," ",3436
317,$managedCol,3436
0,;,0
397,"
          ",3436
0,},0
397,"

          ",3437
326,if,3439
397," ",3439
0,(,0
317,$assoc2,3439
0,[,0
320,'isCascadeMerge',3439
0,],0
0,),0
397," ",3439
0,{,0
397,"
            ",3439
317,$managedCol,3440
390,->,3440
313,initialize,3440
0,(,0
0,),0
0,;,0
397,"

            ",3440
392,"// clear and set dirty a managed collection if its not also the same collection to merge from.",3442
397,"
            ",3442
326,if,3443
397," ",3443
0,(,0
397," ",3443
0,!,0
397," ",3443
317,$managedCol,3443
390,->,3443
313,isEmpty,3443
0,(,0
0,),0
397," ",3443
286,&&,3443
397," ",3443
317,$managedCol,3443
397," ",3443
292,!==,3443
397," ",3443
317,$mergeCol,3443
0,),0
397," ",3443
0,{,0
397,"
              ",3443
317,$managedCol,3444
390,->,3444
313,unwrap,3444
0,(,0
0,),0
390,->,3444
313,clear,3444
0,(,0
0,),0
0,;,0
397,"
              ",3444
317,$managedCol,3445
390,->,3445
313,setDirty,3445
0,(,0
313,true,3445
0,),0
0,;,0
397,"

              ",3445
326,if,3447
397," ",3447
0,(,0
317,$assoc2,3447
0,[,0
320,'isOwningSide',3447
0,],0
397,"
                ",3447
286,&&,3448
397," ",3448
317,$assoc2,3448
0,[,0
320,'type',3448
0,],0
397," ",3448
289,==,3448
397," ",3448
313,ClassMetadata,3448
402,::,3448
313,MANY_TO_MANY,3448
397,"
                ",3448
286,&&,3449
397," ",3449
317,$class,3449
390,->,3449
313,isChangeTrackingNotify,3449
0,(,0
0,),0
397,"
              ",3449
0,),0
397," ",3450
0,{,0
397,"
                ",3450
317,$this,3451
390,->,3451
313,scheduleForDirtyCheck,3451
0,(,0
317,$managedCopy,3451
0,),0
0,;,0
397,"
              ",3451
0,},0
397,"
            ",3452
0,},0
397,"
          ",3453
0,},0
397,"
        ",3454
0,},0
397,"
      ",3455
0,},0
397,"

      ",3456
326,if,3458
397," ",3458
0,(,0
317,$class,3458
390,->,3458
313,isChangeTrackingNotify,3458
0,(,0
0,),0
0,),0
397," ",3458
0,{,0
397,"
        ",3458
392,"// Just treat all properties as changed, there is no other choice.",3459
397,"
        ",3459
317,$this,3460
390,->,3460
313,propertyChanged,3460
0,(,0
317,$managedCopy,3460
0,",",0
397," ",3460
317,$name,3460
0,",",0
397," ",3460
313,null,3460
0,",",0
397," ",3460
317,$prop,3460
390,->,3460
313,getValue,3460
0,(,0
317,$managedCopy,3460
0,),0
0,),0
0,;,0
397,"
      ",3460
0,},0
397,"
    ",3461
0,},0
397,"
  ",3462
0,},0
397,"

  ",3463
393,"/**
   * This method called by hydrators, and indicates that hydrator totally completed current hydration cycle.
   * Unit of work able to fire deferred events, related to loading events here.
   *
   * @internal should be called internally from object hydrators
   */",3465
397,"
  ",3470
362,public,3471
397," ",3471
347,function,3471
397," ",3471
313,hydrationComplete,3471
0,(,0
0,),0
397,"
  ",3471
0,{,0
397,"
    ",3472
317,$this,3473
390,->,3473
313,hydrationCompleteHandler,3473
390,->,3473
313,hydrationComplete,3473
0,(,0
0,),0
0,;,0
397,"
  ",3473
0,},0
397,"
",3474
0,},0
