394,"<?php
",1
392,"/*
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This software consists of voluntary contributions made by many individuals
 * and is licensed under the MIT license. For more information, see
 * <http://www.doctrine-project.org>.
 */",2
397,"

",18
375,namespace,20
397," ",20
316,"Doctrine\ORM",20
0,;,0
397,"

",20
354,use,22
397," ",22
316,"Doctrine\Common\Collections\ArrayCollection",22
0,;,0
397,"
",22
354,use,23
397," ",23
316,"Doctrine\Common\Collections\Collection",23
0,;,0
397,"
",23
354,use,24
397," ",24
316,"Doctrine\Common\NotifyPropertyChanged",24
0,;,0
397,"
",24
354,use,25
397," ",25
316,"Doctrine\Common\Persistence\Mapping\RuntimeReflectionService",25
0,;,0
397,"
",25
354,use,26
397," ",26
316,"Doctrine\Common\Persistence\ObjectManagerAware",26
0,;,0
397,"
",26
354,use,27
397," ",27
316,"Doctrine\Common\PropertyChangedListener",27
0,;,0
397,"
",27
354,use,28
397," ",28
316,"Doctrine\DBAL\LockMode",28
0,;,0
397,"
",28
354,use,29
397," ",29
316,"Doctrine\ORM\Cache\AssociationCacheEntry",29
0,;,0
397,"
",29
354,use,30
397," ",30
316,"Doctrine\ORM\Cache\Persister\CachedPersister",30
0,;,0
397,"
",30
354,use,31
397," ",31
316,"Doctrine\ORM\Event\LifecycleEventArgs",31
0,;,0
397,"
",31
354,use,32
397," ",32
316,"Doctrine\ORM\Event\ListenersInvoker",32
0,;,0
397,"
",32
354,use,33
397," ",33
316,"Doctrine\ORM\Event\OnFlushEventArgs",33
0,;,0
397,"
",33
354,use,34
397," ",34
316,"Doctrine\ORM\Event\PostFlushEventArgs",34
0,;,0
397,"
",34
354,use,35
397," ",35
316,"Doctrine\ORM\Event\PreFlushEventArgs",35
0,;,0
397,"
",35
354,use,36
397," ",36
316,"Doctrine\ORM\Event\PreUpdateEventArgs",36
0,;,0
397,"
",36
354,use,37
397," ",37
316,"Doctrine\ORM\Internal\HydrationCompleteHandler",37
0,;,0
397,"
",37
354,use,38
397," ",38
316,"Doctrine\ORM\Mapping\ClassMetadata",38
0,;,0
397,"
",38
354,use,39
397," ",39
316,"Doctrine\ORM\Mapping\Reflection\ReflectionPropertiesGetter",39
0,;,0
397,"
",39
354,use,40
397," ",40
316,"Doctrine\ORM\Persisters\Collection\ManyToManyPersister",40
0,;,0
397,"
",40
354,use,41
397," ",41
316,"Doctrine\ORM\Persisters\Collection\OneToManyPersister",41
0,;,0
397,"
",41
354,use,42
397," ",42
316,"Doctrine\ORM\Persisters\Entity\BasicEntityPersister",42
0,;,0
397,"
",42
354,use,43
397," ",43
316,"Doctrine\ORM\Persisters\Entity\JoinedSubclassPersister",43
0,;,0
397,"
",43
354,use,44
397," ",44
316,"Doctrine\ORM\Persisters\Entity\SingleTablePersister",44
0,;,0
397,"
",44
354,use,45
397," ",45
316,"Doctrine\ORM\Proxy\Proxy",45
0,;,0
397,"
",45
354,use,46
397," ",46
316,"Doctrine\ORM\Utility\IdentifierFlattener",46
0,;,0
397,"
",46
354,use,47
397," ",47
313,Exception,47
0,;,0
397,"
",47
354,use,48
397," ",48
313,InvalidArgumentException,48
0,;,0
397,"
",48
354,use,49
397," ",49
313,UnexpectedValueException,49
0,;,0
397,"

",49
393,"/**
 * The UnitOfWork is responsible for tracking changes to objects during an
 * ""object-level"" transaction and for writing out changes to the database
 * in the correct order.
 *
 * Internal note: This class contains highly performance-sensitive code.
 *
 * @since       2.0
 * @author      Benjamin Eberlei <kontakt@beberlei.de>
 * @author      Guilherme Blanco <guilhermeblanco@hotmail.com>
 * @author      Jonathan Wage <jonwage@gmail.com>
 * @author      Roman Borschel <roman@code-factory.org>
 * @author      Rob Caiger <rob@clocal.co.uk>
 */",51
397,"
",64
387,#[,65
314,"\Attribute",65
0,(,0
314,"\Attribute",65
402,::,65
313,TARGET_METHOD,65
0,),0
0,",",0
397," ",65
314,"\Attribute",65
0,],0
397,"
",65
369,class,66
397," ",66
313,UnitOfWork,66
397," ",66
374,implements,66
397," ",66
313,PropertyChangedListener,66
397,"
",66
0,{,0
397,"
  ",67
393,"/**
   * An entity is in MANAGED state when its persistence is managed by an EntityManager.
   */",68
397,"
  ",70
349,const,71
397," ",71
313,STATE_MANAGED,71
397," ",71
0,=,0
397," ",71
311,1,71
0,;,0
397,"

  ",71
393,"/**
   * An entity is new if it has just been instantiated (i.e. using the ""new"" operator)
   * and is not (yet) managed by an EntityManager.
   */",73
397,"
  ",76
349,const,77
397," ",77
313,STATE_NEW,77
397," ",77
0,=,0
397," ",77
311,2,77
0,;,0
397,"

  ",77
393,"/**
   * A detached entity is an instance with persistent state and identity that is not
   * (or no longer) associated with an EntityManager (and a UnitOfWork).
   */",79
397,"
  ",82
349,const,83
397," ",83
313,STATE_DETACHED,83
397," ",83
0,=,0
397," ",83
311,3,83
0,;,0
397,"

  ",83
393,"/**
   * A removed entity instance is an instance with a persistent identity,
   * associated with an EntityManager, whose persistent state will be deleted
   * on commit.
   */",85
397,"
  ",89
349,const,90
397," ",90
313,STATE_REMOVED,90
397," ",90
0,=,0
397," ",90
311,4,90
0,;,0
397,"

  ",90
393,"/**
   * Hint used to collect all primary keys of associated entities during hydration
   * and execute it in a dedicated query afterwards
   * @see https://doctrine-orm.readthedocs.org/en/latest/reference/dql-doctrine-query-language.html?highlight=eager#temporarily-change-fetch-mode-in-dql
   */",92
397,"
  ",96
349,const,97
397," ",97
313,HINT_DEFEREAGERLOAD,97
397," ",97
0,=,0
397," ",97
320,'deferEagerLoad',97
0,;,0
397,"

  ",97
393,"/**
   * The identity map that holds references to all managed entities that have
   * an identity. The entities are grouped by their class name.
   * Since all classes in a hierarchy must share the same identifier set,
   * we always take the root class name of the hierarchy.
   *
   * @var array
   */",99
397,"
  ",106
360,private,107
397," ",107
317,$identityMap,107
397," ",107
0,=,0
397," ",107
377,array,107
0,(,0
0,),0
0,;,0
397,"

  ",107
393,"/**
   * Map of all identifiers of managed entities.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",109
397,"
  ",114
360,private,115
397," ",115
317,$entityIdentifiers,115
397," ",115
0,=,0
397," ",115
377,array,115
0,(,0
0,),0
0,;,0
397,"

  ",115
393,"/**
   * Map of the original entity data of managed entities.
   * Keys are object ids (spl_object_hash). This is used for calculating changesets
   * at commit time.
   *
   * Internal note: Note that PHPs ""copy-on-write"" behavior helps a lot with memory usage.
   *                A value will only really be copied if the value in the entity is modified
   *                by the user.
   *
   * @var array
   */",117
397,"
  ",127
360,private,128
397," ",128
317,$originalEntityData,128
397," ",128
0,=,0
397," ",128
377,array,128
0,(,0
0,),0
0,;,0
397,"

  ",128
393,"/**
   * Map of entity changes. Keys are object ids (spl_object_hash).
   * Filled at the beginning of a commit of the UnitOfWork and cleaned at the end.
   *
   * @var array
   */",130
397,"
  ",135
360,private,136
397," ",136
317,$entityChangeSets,136
397," ",136
0,=,0
397," ",136
377,array,136
0,(,0
0,),0
0,;,0
397,"

  ",136
393,"/**
   * The (cached) states of any known entities.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",138
397,"
  ",143
360,private,144
397," ",144
317,$entityStates,144
397," ",144
0,=,0
397," ",144
377,array,144
0,(,0
0,),0
0,;,0
397,"

  ",144
393,"/**
   * Map of entities that are scheduled for dirty checking at commit time.
   * This is only used for entities with a change tracking policy of DEFERRED_EXPLICIT.
   * Keys are object ids (spl_object_hash).
   *
   * @var array
   */",146
397,"
  ",152
360,private,153
397," ",153
317,$scheduledForSynchronization,153
397," ",153
0,=,0
397," ",153
377,array,153
0,(,0
0,),0
0,;,0
397,"

  ",153
393,"/**
   * A list of all pending entity insertions.
   *
   * @var array
   */",155
397,"
  ",159
360,private,160
397," ",160
317,$entityInsertions,160
397," ",160
0,=,0
397," ",160
377,array,160
0,(,0
0,),0
0,;,0
397,"

  ",160
393,"/**
   * A list of all pending entity updates.
   *
   * @var array
   */",162
397,"
  ",166
360,private,167
397," ",167
317,$entityUpdates,167
397," ",167
0,=,0
397," ",167
377,array,167
0,(,0
0,),0
0,;,0
397,"

  ",167
393,"/**
   * Any pending extra updates that have been scheduled by persisters.
   *
   * @var array
   */",169
397,"
  ",173
360,private,174
397," ",174
317,$extraUpdates,174
397," ",174
0,=,0
397," ",174
377,array,174
0,(,0
0,),0
0,;,0
397,"

  ",174
393,"/**
   * A list of all pending entity deletions.
   *
   * @var array
   */",176
397,"
  ",180
360,private,181
397," ",181
317,$entityDeletions,181
397," ",181
0,=,0
397," ",181
377,array,181
0,(,0
0,),0
0,;,0
397,"

  ",181
393,"/**
   * All pending collection deletions.
   *
   * @var array
   */",183
397,"
  ",187
360,private,188
397," ",188
317,$collectionDeletions,188
397," ",188
0,=,0
397," ",188
377,array,188
0,(,0
0,),0
0,;,0
397,"

  ",188
393,"/**
   * All pending collection updates.
   *
   * @var array
   */",190
397,"
  ",194
360,private,195
397," ",195
317,$collectionUpdates,195
397," ",195
0,=,0
397," ",195
377,array,195
0,(,0
0,),0
0,;,0
397,"

  ",195
393,"/**
   * List of collections visited during changeset calculation on a commit-phase of a UnitOfWork.
   * At the end of the UnitOfWork all these collections will make new snapshots
   * of their data.
   *
   * @var array
   */",197
397,"
  ",203
360,private,204
397," ",204
317,$visitedCollections,204
397," ",204
0,=,0
397," ",204
377,array,204
0,(,0
0,),0
0,;,0
397,"

  ",204
393,"/**
   * The EntityManager that ""owns"" this UnitOfWork instance.
   *
   * @var EntityManagerInterface
   */",206
397,"
  ",210
360,private,211
397," ",211
317,$em,211
0,;,0
397,"

  ",211
393,"/**
   * The calculator used to calculate the order in which changes to
   * entities need to be written to the database.
   *
   * @var \Doctrine\ORM\Internal\CommitOrderCalculator
   */",213
397,"
  ",218
360,private,219
397," ",219
317,$commitOrderCalculator,219
0,;,0
397,"

  ",219
393,"/**
   * The entity persister instances used to persist entity instances.
   *
   * @var array
   */",221
397,"
  ",225
360,private,226
397," ",226
317,$persisters,226
397," ",226
0,=,0
397," ",226
377,array,226
0,(,0
0,),0
0,;,0
397,"

  ",226
393,"/**
   * The collection persister instances used to persist collections.
   *
   * @var array
   */",228
397,"
  ",232
360,private,233
397," ",233
317,$collectionPersisters,233
397," ",233
0,=,0
397," ",233
377,array,233
0,(,0
0,),0
0,;,0
397,"

  ",233
393,"/**
   * The EventManager used for dispatching events.
   *
   * @var \Doctrine\Common\EventManager
   */",235
397,"
  ",239
360,private,240
397," ",240
317,$evm,240
0,;,0
397,"

  ",240
393,"/**
   * The ListenersInvoker used for dispatching events.
   *
   * @var \Doctrine\ORM\Event\ListenersInvoker
   */",242
397,"
  ",246
360,private,247
397," ",247
317,$listenersInvoker,247
0,;,0
397,"

  ",247
393,"/**
   * The IdentifierFlattener used for manipulating identifiers
   *
   * @var \Doctrine\ORM\Utility\IdentifierFlattener
   */",249
397,"
  ",253
360,private,254
397," ",254
317,$identifierFlattener,254
0,;,0
397,"

  ",254
393,"/**
   * Orphaned entities that are scheduled for removal.
   *
   * @var array
   */",256
397,"
  ",260
360,private,261
397," ",261
317,$orphanRemovals,261
397," ",261
0,=,0
397," ",261
377,array,261
0,(,0
0,),0
0,;,0
397,"

  ",261
393,"/**
   * Read-Only objects are never evaluated
   *
   * @var array
   */",263
397,"
  ",267
360,private,268
397," ",268
317,$readOnlyObjects,268
397," ",268
0,=,0
397," ",268
377,array,268
0,(,0
0,),0
0,;,0
397,"

  ",268
393,"/**
   * Map of Entity Class-Names and corresponding IDs that should eager loaded when requested.
   *
   * @var array
   */",270
397,"
  ",274
360,private,275
397," ",275
317,$eagerLoadingEntities,275
397," ",275
0,=,0
397," ",275
377,array,275
0,(,0
0,),0
0,;,0
397,"

  ",275
393,"/**
   * @var boolean
   */",277
397,"
  ",279
361,protected,280
397," ",280
317,$hasCache,280
397," ",280
0,=,0
397," ",280
313,false,280
0,;,0
397,"

  ",280
393,"/**
   * Helper for handling completion of hydration
   *
   * @var HydrationCompleteHandler
   */",282
397,"
  ",286
360,private,287
397," ",287
317,$hydrationCompleteHandler,287
0,;,0
397,"

  ",287
393,"/**
   * @var ReflectionPropertiesGetter
   */",289
397,"
  ",291
360,private,292
397," ",292
317,$reflectionPropertiesGetter,292
0,;,0
397,"

  ",292
393,"/**
   * Initializes a new UnitOfWork instance, bound to the given EntityManager.
   *
   * @param EntityManagerInterface $em
   */",294
397,"
  ",298
362,public,299
397," ",299
347,function,299
397," ",299
313,__construct,299
0,(,0
313,EntityManagerInterface,299
397," ",299
317,$em,299
0,),0
397,"
  ",299
0,{,0
397,"
    ",300
317,$this,301
390,->,301
313,em,301
397," ",301
0,=,0
397," ",301
317,$em,301
0,;,0
397,"
    ",301
317,$this,302
390,->,302
313,evm,302
397," ",302
0,=,0
397," ",302
317,$em,302
390,->,302
313,getEventManager,302
0,(,0
0,),0
0,;,0
397,"
    ",302
317,$this,303
390,->,303
313,listenersInvoker,303
397," ",303
0,=,0
397," ",303
324,new,303
397," ",303
313,ListenersInvoker,303
0,(,0
317,$em,303
0,),0
0,;,0
397,"
    ",303
317,$this,304
390,->,304
313,hasCache,304
397," ",304
0,=,0
397," ",304
317,$em,304
390,->,304
313,getConfiguration,304
0,(,0
0,),0
390,->,304
313,isSecondLevelCacheEnabled,304
0,(,0
0,),0
0,;,0
397,"
    ",304
317,$this,305
390,->,305
313,identifierFlattener,305
397," ",305
0,=,0
397," ",305
324,new,305
397," ",305
313,IdentifierFlattener,305
0,(,0
317,$this,305
0,",",0
397," ",305
317,$em,305
390,->,305
313,getMetadataFactory,305
0,(,0
0,),0
0,),0
0,;,0
397,"
    ",305
317,$this,306
390,->,306
313,hydrationCompleteHandler,306
397," ",306
0,=,0
397," ",306
324,new,306
397," ",306
313,HydrationCompleteHandler,306
0,(,0
317,$this,306
390,->,306
313,listenersInvoker,306
0,",",0
397," ",306
317,$em,306
0,),0
0,;,0
397,"
    ",306
317,$this,307
390,->,307
313,reflectionPropertiesGetter,307
397," ",307
0,=,0
397," ",307
324,new,307
397," ",307
313,ReflectionPropertiesGetter,307
0,(,0
324,new,307
397," ",307
313,RuntimeReflectionService,307
0,(,0
0,),0
0,),0
0,;,0
397,"
  ",307
0,},0
397,"

  ",308
393,"/**
   * Commits the UnitOfWork, executing all operations that have been postponed
   * up to this point. The state of all managed entities will be synchronized with
   * the database.
   *
   * The operations are executed in the following order:
   *
   * 1) All entity insertions
   * 2) All entity updates
   * 3) All collection deletions
   * 4) All collection updates
   * 5) All entity deletions
   *
   * @param null|object|array $entity
   *
   * @return void
   *
   * @throws \Exception
   */",310
397,"
  ",328
362,public,329
397," ",329
347,function,329
397," ",329
313,commit,329
0,(,0
317,$entity,329
397," ",329
0,=,0
397," ",329
313,null,329
0,),0
397,"
  ",329
0,{,0
397,"
    ",330
392,"// Raise preFlush",331
397,"
    ",331
326,if,332
397," ",332
0,(,0
317,$this,332
390,->,332
313,evm,332
390,->,332
313,hasListeners,332
0,(,0
313,Events,332
402,::,332
313,preFlush,332
0,),0
0,),0
397," ",332
0,{,0
397,"
      ",332
317,$this,333
390,->,333
313,evm,333
390,->,333
313,dispatchEvent,333
0,(,0
313,Events,333
402,::,333
313,preFlush,333
0,",",0
397," ",333
324,new,333
397," ",333
313,PreFlushEventArgs,333
0,(,0
317,$this,333
390,->,333
313,em,333
0,),0
0,),0
0,;,0
397,"
    ",333
0,},0
397,"

    ",334
392,"// Compute changes done since last commit.",336
397,"
    ",336
326,if,337
397," ",337
0,(,0
317,$entity,337
397," ",337
291,===,337
397," ",337
313,null,337
0,),0
397," ",337
0,{,0
397,"
      ",337
317,$this,338
390,->,338
313,computeChangeSets,338
0,(,0
0,),0
0,;,0
397,"
    ",338
0,},0
397," ",339
309,elseif,339
397," ",339
0,(,0
313,is_object,339
0,(,0
317,$entity,339
0,),0
0,),0
397," ",339
0,{,0
397,"
      ",339
317,$this,340
390,->,340
313,computeSingleEntityChangeSet,340
0,(,0
317,$entity,340
0,),0
0,;,0
397,"
    ",340
0,},0
397," ",341
309,elseif,341
397," ",341
0,(,0
313,is_array,341
0,(,0
317,$entity,341
0,),0
0,),0
397," ",341
0,{,0
397,"
      ",341
334,foreach,342
397," ",342
0,(,0
317,$entity,342
397," ",342
338,as,342
397," ",342
317,$object,342
0,),0
397," ",342
0,{,0
397,"
        ",342
317,$this,343
390,->,343
313,computeSingleEntityChangeSet,343
0,(,0
317,$object,343
0,),0
0,;,0
397,"
      ",343
0,},0
397,"
    ",344
0,},0
397,"

    ",345
326,if,347
397," ",347
0,(,0
0,!,0
0,(,0
317,$this,347
390,->,347
313,entityInsertions,347
397," ",347
285,||,347
397,"
      ",347
317,$this,348
390,->,348
313,entityDeletions,348
397," ",348
285,||,348
397,"
      ",348
317,$this,349
390,->,349
313,entityUpdates,349
397," ",349
285,||,349
397,"
      ",349
317,$this,350
390,->,350
313,collectionUpdates,350
397," ",350
285,||,350
397,"
      ",350
317,$this,351
390,->,351
313,collectionDeletions,351
397," ",351
285,||,351
397,"
      ",351
317,$this,352
390,->,352
313,orphanRemovals,352
0,),0
0,),0
397," ",352
0,{,0
397,"
      ",352
317,$this,353
390,->,353
313,dispatchOnFlushEvent,353
0,(,0
0,),0
0,;,0
397,"
      ",353
317,$this,354
390,->,354
313,dispatchPostFlushEvent,354
0,(,0
0,),0
0,;,0
397,"

      ",354
350,return,356
0,;,0
397," ",356
392,"// Nothing to do.",356
397,"
    ",356
0,},0
397,"

    ",357
326,if,359
397," ",359
0,(,0
317,$this,359
390,->,359
313,orphanRemovals,359
0,),0
397," ",359
0,{,0
397,"
      ",359
334,foreach,360
397," ",360
0,(,0
317,$this,360
390,->,360
313,orphanRemovals,360
397," ",360
338,as,360
397," ",360
317,$orphan,360
0,),0
397," ",360
0,{,0
397,"
        ",360
317,$this,361
390,->,361
313,remove,361
0,(,0
317,$orphan,361
0,),0
0,;,0
397,"
      ",361
0,},0
397,"
    ",362
0,},0
397,"

    ",363
317,$this,365
390,->,365
313,dispatchOnFlushEvent,365
0,(,0
0,),0
0,;,0
397,"

    ",365
392,"// Now we need a commit order to maintain referential integrity",367
397,"
    ",367
317,$commitOrder,368
397," ",368
0,=,0
397," ",368
317,$this,368
390,->,368
313,getCommitOrder,368
0,(,0
0,),0
0,;,0
397,"

    ",368
317,$conn,370
397," ",370
0,=,0
397," ",370
317,$this,370
390,->,370
313,em,370
390,->,370
313,getConnection,370
0,(,0
0,),0
0,;,0
397,"
    ",370
317,$conn,371
390,->,371
313,beginTransaction,371
0,(,0
0,),0
0,;,0
397,"

    ",371
351,try,373
397," ",373
0,{,0
397,"
      ",373
326,if,374
397," ",374
0,(,0
317,$this,374
390,->,374
313,entityInsertions,374
0,),0
397," ",374
0,{,0
397,"
        ",374
334,foreach,375
397," ",375
0,(,0
317,$commitOrder,375
397," ",375
338,as,375
397," ",375
317,$class,375
0,),0
397," ",375
0,{,0
397,"
          ",375
317,$this,376
390,->,376
313,executeInserts,376
0,(,0
317,$class,376
0,),0
0,;,0
397,"
        ",376
0,},0
397,"
      ",377
0,},0
397,"

      ",378
326,if,380
397," ",380
0,(,0
317,$this,380
390,->,380
313,entityUpdates,380
0,),0
397," ",380
0,{,0
397,"
        ",380
334,foreach,381
397," ",381
0,(,0
317,$commitOrder,381
397," ",381
338,as,381
397," ",381
317,$class,381
0,),0
397," ",381
0,{,0
397,"
          ",381
317,$this,382
390,->,382
313,executeUpdates,382
0,(,0
317,$class,382
0,),0
0,;,0
397,"
        ",382
0,},0
397,"
      ",383
0,},0
397,"

      ",384
392,"// Extra updates that were requested by persisters.",386
397,"
      ",386
326,if,387
397," ",387
0,(,0
317,$this,387
390,->,387
313,extraUpdates,387
0,),0
397," ",387
0,{,0
397,"
        ",387
317,$this,388
390,->,388
313,executeExtraUpdates,388
0,(,0
0,),0
0,;,0
397,"
      ",388
0,},0
397,"

      ",389
392,"// Collection deletions (deletions of complete collections)",391
397,"
      ",391
334,foreach,392
397," ",392
0,(,0
317,$this,392
390,->,392
313,collectionDeletions,392
397," ",392
338,as,392
397," ",392
317,$collectionToDelete,392
0,),0
397," ",392
0,{,0
397,"
        ",392
317,$this,393
390,->,393
313,getCollectionPersister,393
0,(,0
317,$collectionToDelete,393
390,->,393
313,getMapping,393
0,(,0
0,),0
0,),0
390,->,393
313,delete,393
0,(,0
317,$collectionToDelete,393
0,),0
0,;,0
397,"
      ",393
0,},0
397,"

      ",394
392,"// Collection updates (deleteRows, updateRows, insertRows)",396
397,"
      ",396
334,foreach,397
397," ",397
0,(,0
317,$this,397
390,->,397
313,collectionUpdates,397
397," ",397
338,as,397
397," ",397
317,$collectionToUpdate,397
0,),0
397," ",397
0,{,0
397,"
        ",397
317,$this,398
390,->,398
313,getCollectionPersister,398
0,(,0
317,$collectionToUpdate,398
390,->,398
313,getMapping,398
0,(,0
0,),0
0,),0
390,->,398
313,update,398
0,(,0
317,$collectionToUpdate,398
0,),0
0,;,0
397,"
      ",398
0,},0
397,"

      ",399
392,"// Entity deletions come last and need to be in reverse commit order",401
397,"
      ",401
326,if,402
397," ",402
0,(,0
317,$this,402
390,->,402
313,entityDeletions,402
0,),0
397," ",402
0,{,0
397,"
        ",402
332,for,403
397," ",403
0,(,0
317,$count,403
397," ",403
0,=,0
397," ",403
313,count,403
0,(,0
317,$commitOrder,403
0,),0
0,",",0
397," ",403
317,$i,403
397," ",403
0,=,0
397," ",403
317,$count,403
397," ",403
0,-,0
397," ",403
311,1,403
0,;,0
397," ",403
317,$i,403
397," ",403
295,>=,403
397," ",403
311,0,403
397," ",403
286,&&,403
397," ",403
317,$this,403
390,->,403
313,entityDeletions,403
0,;,0
397," ",403
389,--,403
317,$i,403
0,),0
397," ",403
0,{,0
397,"
          ",403
317,$this,404
390,->,404
313,executeDeletions,404
0,(,0
317,$commitOrder,404
0,[,0
317,$i,404
0,],0
0,),0
0,;,0
397,"
        ",404
0,},0
397,"
      ",405
0,},0
397,"

      ",406
317,$conn,408
390,->,408
313,commit,408
0,(,0
0,),0
0,;,0
397,"
    ",408
0,},0
397," ",409
352,catch,409
397," ",409
0,(,0
313,Exception,409
397," ",409
317,$e,409
0,),0
397," ",409
0,{,0
397,"
      ",409
317,$this,410
390,->,410
313,em,410
390,->,410
313,close,410
0,(,0
0,),0
0,;,0
397,"
      ",410
317,$conn,411
390,->,411
313,rollback,411
0,(,0
0,),0
0,;,0
397,"

      ",411
317,$this,413
390,->,413
313,afterTransactionRolledBack,413
0,(,0
0,),0
0,;,0
397,"

      ",413
258,throw,415
397," ",415
317,$e,415
0,;,0
397,"
    ",415
0,},0
397,"

    ",416
317,$this,418
390,->,418
313,afterTransactionComplete,418
0,(,0
0,),0
0,;,0
397,"

    ",418
392,"// Take new snapshots from visited collections",420
397,"
    ",420
334,foreach,421
397," ",421
0,(,0
317,$this,421
390,->,421
313,visitedCollections,421
397," ",421
338,as,421
397," ",421
317,$coll,421
0,),0
397," ",421
0,{,0
397,"
      ",421
317,$coll,422
390,->,422
313,takeSnapshot,422
0,(,0
0,),0
0,;,0
397,"
    ",422
0,},0
397,"

    ",423
317,$this,425
390,->,425
313,dispatchPostFlushEvent,425
0,(,0
0,),0
0,;,0
397,"

    ",425
392,"// Clear up",427
397,"
    ",427
317,$this,428
390,->,428
313,entityInsertions,428
397," ",428
0,=,0
397,"
    ",428
317,$this,429
390,->,429
313,entityUpdates,429
397," ",429
0,=,0
397,"
    ",429
317,$this,430
390,->,430
313,entityDeletions,430
397," ",430
0,=,0
397,"
    ",430
317,$this,431
390,->,431
313,extraUpdates,431
397," ",431
0,=,0
397,"
    ",431
317,$this,432
390,->,432
313,entityChangeSets,432
397," ",432
0,=,0
397,"
    ",432
317,$this,433
390,->,433
313,collectionUpdates,433
397," ",433
0,=,0
397,"
    ",433
317,$this,434
390,->,434
313,collectionDeletions,434
397," ",434
0,=,0
397,"
    ",434
317,$this,435
390,->,435
313,visitedCollections,435
397," ",435
0,=,0
397,"
    ",435
317,$this,436
390,->,436
313,scheduledForSynchronization,436
397," ",436
0,=,0
397,"
    ",436
317,$this,437
390,->,437
313,orphanRemovals,437
397," ",437
0,=,0
397," ",437
377,array,437
0,(,0
0,),0
0,;,0
397,"
  ",437
0,},0
397,"

  ",438
393,"/**
   * Computes the changesets of all entities scheduled for insertion.
   *
   * @return void
   */",440
397,"
  ",444
360,private,445
397," ",445
347,function,445
397," ",445
313,computeScheduleInsertsChangeSets,445
0,(,0
0,),0
397,"
  ",445
0,{,0
397,"
    ",446
334,foreach,447
397," ",447
0,(,0
317,$this,447
390,->,447
313,entityInsertions,447
397," ",447
338,as,447
397," ",447
317,$entity,447
0,),0
397," ",447
0,{,0
397,"
      ",447
317,$class,448
397," ",448
0,=,0
397," ",448
317,$this,448
390,->,448
313,em,448
390,->,448
313,getClassMetadata,448
0,(,0
313,get_class,448
0,(,0
317,$entity,448
0,),0
0,),0
0,;,0
397,"

      ",448
317,$this,450
390,->,450
313,computeChangeSet,450
0,(,0
317,$class,450
0,",",0
397," ",450
317,$entity,450
0,),0
0,;,0
397,"
    ",450
0,},0
397,"
  ",451
0,},0
397,"

  ",452
393,"/**
   * Only flushes the given entity according to a ruleset that keeps the UoW consistent.
   *
   * 1. All entities scheduled for insertion, (orphan) removals and changes in collections are processed as well!
   * 2. Read Only entities are skipped.
   * 3. Proxies are skipped.
   * 4. Only if entity is properly managed.
   *
   * @param object $entity
   *
   * @return void
   *
   * @throws \InvalidArgumentException
   */",454
397,"
  ",467
360,private,468
397," ",468
347,function,468
397," ",468
313,computeSingleEntityChangeSet,468
0,(,0
317,$entity,468
0,),0
397,"
  ",468
0,{,0
397,"
    ",469
317,$state,470
397," ",470
0,=,0
397," ",470
317,$this,470
390,->,470
313,getEntityState,470
0,(,0
317,$entity,470
0,),0
0,;,0
397,"

    ",470
326,if,472
397," ",472
0,(,0
317,$state,472
397," ",472
292,!==,472
397," ",472
313,self,472
402,::,472
313,STATE_MANAGED,472
397," ",472
286,&&,472
397," ",472
317,$state,472
397," ",472
292,!==,472
397," ",472
313,self,472
402,::,472
313,STATE_REMOVED,472
0,),0
397," ",472
0,{,0
397,"
      ",472
258,throw,473
397," ",473
324,new,473
397," ",473
314,"\InvalidArgumentException",473
0,(,0
398,"<<<MESSAGE
",473
319,"Entity has to be managed or scheduled for removal for single computation 
",474
399,MESSAGE,475
0,.,0
397," ",475
313,self,475
402,::,475
313,objToStr,475
0,(,0
317,$entity,475
0,),0
0,),0
0,;,0
397,"
    ",475
0,},0
397,"

    ",476
317,$class,478
397," ",478
0,=,0
397," ",478
317,$this,478
390,->,478
313,em,478
390,->,478
313,getClassMetadata,478
0,(,0
313,get_class,478
0,(,0
317,$entity,478
0,),0
0,),0
0,;,0
397,"

    ",478
326,if,480
397," ",480
0,(,0
317,$state,480
397," ",480
291,===,480
397," ",480
313,self,480
402,::,480
313,STATE_MANAGED,480
397," ",480
286,&&,480
397," ",480
317,$class,480
390,->,480
313,isChangeTrackingDeferredImplicit,480
0,(,0
0,),0
0,),0
397," ",480
0,{,0
397,"
      ",480
317,$this,481
390,->,481
313,persist,481
0,(,0
317,$entity,481
0,),0
0,;,0
397,"
    ",481
0,},0
397,"

    ",482
392,"// Compute changes for INSERTed entities first. This must always happen even in this case.",484
397,"
    ",484
317,$this,485
390,->,485
313,computeScheduleInsertsChangeSets,485
0,(,0
0,),0
0,;,0
397,"

    ",485
326,if,487
397," ",487
0,(,0
317,$class,487
390,->,487
313,isReadOnly,487
0,),0
397," ",487
0,{,0
397,"
      ",487
350,return,488
0,;,0
397,"
    ",488
0,},0
397,"

    ",489
392,"// Ignore uninitialized proxy objects",491
397,"
    ",491
326,if,492
397," ",492
0,(,0
317,$entity,492
397," ",492
298,instanceof,492
397," ",492
313,Proxy,492
397," ",492
286,&&,492
397," ",492
0,!,0
317,$entity,492
390,->,492
313,__isInitialized__,492
0,),0
397," ",492
0,{,0
397,"
      ",492
350,return,493
0,;,0
397,"
    ",493
0,},0
397,"

    ",494
392,"// Only MANAGED entities that are NOT SCHEDULED FOR INSERTION OR DELETION are processed here.",496
397,"
    ",496
317,$oid,497
397," ",497
0,=,0
397," ",497
313,spl_object_hash,497
0,(,0
317,$entity,497
0,),0
0,;,0
397,"

    ",497
326,if,499
397," ",499
0,(,0
0,!,0
366,isset,499
0,(,0
317,$this,499
390,->,499
313,entityInsertions,499
0,[,0
317,$oid,499
0,],0
0,),0
397," ",499
286,&&,499
397," ",499
0,!,0
366,isset,499
0,(,0
317,$this,499
390,->,499
313,entityDeletions,499
0,[,0
317,$oid,499
0,],0
0,),0
397," ",499
286,&&,499
397," ",499
366,isset,499
0,(,0
317,$this,499
390,->,499
313,entityStates,499
0,[,0
317,$oid,499
0,],0
0,),0
0,),0
397," ",499
0,{,0
397,"
      ",499
317,$this,500
390,->,500
313,computeChangeSet,500
0,(,0
317,$class,500
0,",",0
397," ",500
317,$entity,500
0,),0
0,;,0
397,"
    ",500
0,},0
397,"
  ",501
0,},0
397,"

  ",502
393,"/**
   * Executes any extra updates that have been scheduled.
   */",504
397,"
  ",506
360,private,507
397," ",507
347,function,507
397," ",507
313,executeExtraUpdates,507
0,(,0
0,),0
397,"
  ",507
0,{,0
397,"
    ",508
334,foreach,509
397," ",509
0,(,0
317,$this,509
390,->,509
313,extraUpdates,509
397," ",509
338,as,509
397," ",509
317,$oid,509
397," ",509
269,=>,509
397," ",509
317,$update,509
0,),0
397," ",509
0,{,0
397,"
      ",509
376,list,510
397," ",510
0,(,0
317,$entity,510
0,",",0
397," ",510
317,$changeset,510
0,),0
397," ",510
0,=,0
397," ",510
317,$update,510
0,;,0
397,"

      ",510
317,$this,512
390,->,512
313,entityChangeSets,512
0,[,0
317,$oid,512
0,],0
397," ",512
0,=,0
397," ",512
317,$changeset,512
0,;,0
397,"
      ",512
317,$this,513
390,->,513
313,getEntityPersister,513
0,(,0
313,get_class,513
0,(,0
317,$entity,513
0,),0
0,),0
390,->,513
313,update,513
0,(,0
317,$entity,513
0,),0
0,;,0
397,"
    ",513
0,},0
397,"

    ",514
317,$this,516
390,->,516
313,extraUpdates,516
397," ",516
0,=,0
397," ",516
377,array,516
0,(,0
0,),0
0,;,0
397,"
  ",516
0,},0
397,"

  ",517
393,"/**
   * Gets the changeset for an entity.
   *
   * @param object $entity
   *
   * @return array
   */",519
397,"
  ",525
362,public,526
397," ",526
347,function,526
397," ",526
313,getEntityChangeSet,526
0,(,0
317,$entity,526
0,),0
397,"
  ",526
0,{,0
397,"
    ",527
317,$oid,528
397," ",528
0,=,0
397," ",528
313,spl_object_hash,528
0,(,0
317,$entity,528
0,),0
0,;,0
397,"

    ",528
326,if,530
397," ",530
0,(,0
366,isset,530
0,(,0
317,$this,530
390,->,530
313,entityChangeSets,530
0,[,0
317,$oid,530
0,],0
0,),0
0,),0
397," ",530
0,{,0
397,"
      ",530
350,return,531
397," ",531
317,$this,531
390,->,531
313,entityChangeSets,531
0,[,0
317,$oid,531
0,],0
0,;,0
397,"
    ",531
0,},0
397,"

    ",532
350,return,534
397," ",534
377,array,534
0,(,0
0,),0
0,;,0
397,"
  ",534
0,},0
397,"

  ",535
393,"/**
   * Computes the changes that happened to a single entity.
   *
   * Modifies/populates the following properties:
   *
   * {@link _originalEntityData}
   * If the entity is NEW or MANAGED but not yet fully persisted (only has an id)
   * then it was not fetched from the database and therefore we have no original
   * entity data yet. All of the current entity data is stored as the original entity data.
   *
   * {@link _entityChangeSets}
   * The changes detected on all properties of the entity are stored there.
   * A change is a tuple array where the first entry is the old value and the second
   * entry is the new value of the property. Changesets are used by persisters
   * to INSERT/UPDATE the persistent entity state.
   *
   * {@link _entityUpdates}
   * If the entity is already fully MANAGED (has been fetched from the database before)
   * and any changes to its properties are detected, then a reference to the entity is stored
   * there to mark it for an update.
   *
   * {@link _collectionDeletions}
   * If a PersistentCollection has been de-referenced in a fully MANAGED entity,
   * then this collection is marked for deletion.
   *
   * @param ClassMetadata $class The class descriptor of the entity.
   * @param object $entity The entity for which to compute the changes.
   *
   * @return void
   * @internal Don't call from the outside.
   *
   * @ignore
   *
   */",537
397,"
  ",570
362,public,571
397," ",571
347,function,571
397," ",571
313,computeChangeSet,571
0,(,0
313,ClassMetadata,571
397," ",571
317,$class,571
0,",",0
397," ",571
317,$entity,571
0,),0
397,"
  ",571
0,{,0
397,"
    ",572
317,$oid,573
397," ",573
0,=,0
397," ",573
313,spl_object_hash,573
0,(,0
317,$entity,573
0,),0
0,;,0
397,"

    ",573
326,if,575
397," ",575
0,(,0
366,isset,575
0,(,0
317,$this,575
390,->,575
313,readOnlyObjects,575
0,[,0
317,$oid,575
0,],0
0,),0
0,),0
397," ",575
0,{,0
397,"
      ",575
350,return,576
0,;,0
397,"
    ",576
0,},0
397,"

    ",577
326,if,579
397," ",579
0,(,0
0,!,0
317,$class,579
390,->,579
313,isInheritanceTypeNone,579
0,(,0
0,),0
0,),0
397," ",579
0,{,0
397,"
      ",579
317,$class,580
397," ",580
0,=,0
397," ",580
317,$this,580
390,->,580
313,em,580
390,->,580
313,getClassMetadata,580
0,(,0
313,get_class,580
0,(,0
317,$entity,580
0,),0
0,),0
0,;,0
397,"
    ",580
0,},0
397,"

    ",581
317,$invoke,583
397," ",583
0,=,0
397," ",583
317,$this,583
390,->,583
313,listenersInvoker,583
390,->,583
313,getSubscribedSystems,583
0,(,0
317,$class,583
0,",",0
397,"
        ",583
313,Events,584
402,::,584
313,preFlush,584
0,),0
397," ",584
287,&,584
397," ",584
0,~,0
313,ListenersInvoker,584
402,::,584
313,INVOKE_MANAGER,584
0,;,0
397,"

    ",584
326,if,586
397," ",586
0,(,0
317,$invoke,586
397," ",586
292,!==,586
397," ",586
313,ListenersInvoker,586
402,::,586
313,INVOKE_NONE,586
0,),0
397," ",586
0,{,0
397,"
      ",586
317,$this,587
390,->,587
313,listenersInvoker,587
390,->,587
313,invoke,587
0,(,0
317,$class,587
0,",",0
397," ",587
313,Events,587
402,::,587
313,preFlush,587
0,",",0
397," ",587
317,$entity,587
0,",",0
397," ",587
324,new,587
397," ",587
313,PreFlushEventArgs,587
0,(,0
317,$this,587
390,->,587
313,em,587
0,),0
0,",",0
397," ",587
317,$invoke,587
0,),0
0,;,0
397,"
    ",587
0,},0
397,"

    ",588
317,$actualData,590
397," ",590
0,=,0
397," ",590
377,array,590
0,(,0
0,),0
0,;,0
397,"

    ",590
334,foreach,592
397," ",592
0,(,0
317,$class,592
390,->,592
313,reflFields,592
397," ",592
338,as,592
397," ",592
317,$name,592
397," ",592
269,=>,592
397," ",592
317,$refProp,592
0,),0
397," ",592
0,{,0
397,"
      ",592
317,$value,593
397," ",593
0,=,0
397," ",593
317,$refProp,593
390,->,593
313,getValue,593
0,(,0
317,$entity,593
0,),0
0,;,0
397,"

      ",593
326,if,595
397," ",595
0,(,0
317,$class,595
390,->,595
313,isCollectionValuedAssociation,595
0,(,0
317,$name,595
0,),0
397," ",595
286,&&,595
397," ",595
317,$value,595
397," ",595
292,!==,595
397," ",595
313,null,595
0,),0
397," ",595
0,{,0
397,"
        ",595
326,if,596
397," ",596
0,(,0
317,$value,596
397," ",596
298,instanceof,596
397," ",596
313,PersistentCollection,596
0,),0
397," ",596
0,{,0
397,"
          ",596
326,if,597
397," ",597
0,(,0
317,$value,597
390,->,597
313,getOwner,597
0,(,0
0,),0
397," ",597
291,===,597
397," ",597
317,$entity,597
0,),0
397," ",597
0,{,0
397,"
            ",597
345,continue,598
0,;,0
397,"
          ",598
0,},0
397,"

          ",599
317,$value,601
397," ",601
0,=,0
397," ",601
324,new,601
397," ",601
313,ArrayCollection,601
0,(,0
317,$value,601
390,->,601
313,getValues,601
0,(,0
0,),0
0,),0
0,;,0
397,"
        ",601
0,},0
397,"

        ",602
392,"// If $value is not a Collection then use an ArrayCollection.",604
397,"
        ",604
326,if,605
397," ",605
0,(,0
0,!,0
317,$value,605
397," ",605
298,instanceof,605
397," ",605
313,Collection,605
0,),0
397," ",605
0,{,0
397,"
          ",605
317,$value,606
397," ",606
0,=,0
397," ",606
324,new,606
397," ",606
313,ArrayCollection,606
0,(,0
317,$value,606
0,),0
0,;,0
397,"
        ",606
0,},0
397,"

        ",607
317,$assoc,609
397," ",609
0,=,0
397," ",609
317,$class,609
390,->,609
313,associationMappings,609
0,[,0
317,$name,609
0,],0
0,;,0
397,"

        ",609
392,"// Inject PersistentCollection",611
397,"
        ",611
317,$value,612
397," ",612
0,=,0
397," ",612
324,new,612
397," ",612
313,PersistentCollection,612
0,(,0
397,"
          ",612
317,$this,613
390,->,613
313,em,613
0,",",0
397," ",613
317,$this,613
390,->,613
313,em,613
390,->,613
313,getClassMetadata,613
0,(,0
317,$assoc,613
0,[,0
320,'targetEntity',613
0,],0
0,),0
0,",",0
397," ",613
317,$value,613
397,"
        ",613
0,),0
0,;,0
397,"
        ",614
317,$value,615
390,->,615
313,setOwner,615
0,(,0
317,$entity,615
0,",",0
397," ",615
317,$assoc,615
0,),0
0,;,0
397,"
        ",615
317,$value,616
390,->,616
313,setDirty,616
0,(,0
0,!,0
317,$value,616
390,->,616
313,isEmpty,616
0,(,0
0,),0
0,),0
0,;,0
397,"

        ",616
317,$class,618
390,->,618
313,reflFields,618
0,[,0
317,$name,618
0,],0
390,->,618
313,setValue,618
0,(,0
317,$entity,618
0,",",0
397," ",618
317,$value,618
0,),0
0,;,0
397,"

        ",618
317,$actualData,620
0,[,0
317,$name,620
0,],0
397," ",620
0,=,0
397," ",620
317,$value,620
0,;,0
397,"

        ",620
345,continue,622
0,;,0
397,"
      ",622
0,},0
397,"

      ",623
326,if,625
397," ",625
0,(,0
0,(,0
0,!,0
317,$class,625
390,->,625
313,isIdentifier,625
0,(,0
317,$name,625
0,),0
397," ",625
285,||,625
397," ",625
0,!,0
317,$class,625
390,->,625
313,isIdGeneratorIdentity,625
0,(,0
0,),0
0,),0
397," ",625
286,&&,625
397," ",625
0,(,0
317,$name,625
397," ",625
292,!==,625
397," ",625
317,$class,625
390,->,625
313,versionField,625
0,),0
0,),0
397," ",625
0,{,0
397,"
        ",625
317,$actualData,626
0,[,0
317,$name,626
0,],0
397," ",626
0,=,0
397," ",626
317,$value,626
0,;,0
397,"
      ",626
0,},0
397,"
    ",627
0,},0
397,"

    ",628
326,if,630
397," ",630
0,(,0
0,!,0
366,isset,630
0,(,0
317,$this,630
390,->,630
313,originalEntityData,630
0,[,0
317,$oid,630
0,],0
0,),0
0,),0
397," ",630
0,{,0
397,"
      ",630
392,"// Entity is either NEW or MANAGED but not yet fully persisted (only has an id).",631
397,"
      ",631
392,"// These result in an INSERT.",632
397,"
      ",632
317,$this,633
390,->,633
313,originalEntityData,633
0,[,0
317,$oid,633
0,],0
397," ",633
0,=,0
397," ",633
317,$actualData,633
0,;,0
397,"
      ",633
317,$changeSet,634
397," ",634
0,=,0
397," ",634
377,array,634
0,(,0
0,),0
0,;,0
397,"

      ",634
334,foreach,636
397," ",636
0,(,0
317,$actualData,636
397," ",636
338,as,636
397," ",636
317,$propName,636
397," ",636
269,=>,636
397," ",636
317,$actualValue,636
0,),0
397," ",636
0,{,0
397,"
        ",636
326,if,637
397," ",637
0,(,0
0,!,0
366,isset,637
0,(,0
317,$class,637
390,->,637
313,associationMappings,637
0,[,0
317,$propName,637
0,],0
0,),0
0,),0
397," ",637
0,{,0
397,"
          ",637
317,$changeSet,638
0,[,0
317,$propName,638
0,],0
397," ",638
0,=,0
397," ",638
377,array,638
0,(,0
313,null,638
0,",",0
397," ",638
317,$actualValue,638
0,),0
0,;,0
397,"

          ",638
345,continue,640
0,;,0
397,"
        ",640
0,},0
397,"

        ",641
317,$assoc,643
397," ",643
0,=,0
397," ",643
317,$class,643
390,->,643
313,associationMappings,643
0,[,0
317,$propName,643
0,],0
0,;,0
397,"

        ",643
326,if,645
397," ",645
0,(,0
317,$assoc,645
0,[,0
320,'isOwningSide',645
0,],0
397," ",645
286,&&,645
397," ",645
317,$assoc,645
0,[,0
320,'type',645
0,],0
397," ",645
287,&,645
397," ",645
313,ClassMetadata,645
402,::,645
313,TO_ONE,645
0,),0
397," ",645
0,{,0
397,"
          ",645
317,$changeSet,646
0,[,0
317,$propName,646
0,],0
397," ",646
0,=,0
397," ",646
377,array,646
0,(,0
313,null,646
0,",",0
397," ",646
317,$actualValue,646
0,),0
0,;,0
397,"
        ",646
0,},0
397,"
      ",647
0,},0
397,"

      ",648
317,$this,650
390,->,650
313,entityChangeSets,650
0,[,0
317,$oid,650
0,],0
397," ",650
0,=,0
397," ",650
317,$changeSet,650
0,;,0
397,"
    ",650
0,},0
397," ",651
310,else,651
397," ",651
0,{,0
397,"
      ",651
392,"// Entity is ""fully"" MANAGED: it was already fully persisted before",652
397,"
      ",652
392,"// and we have a copy of the original data",653
397,"
      ",653
317,$originalData,654
397," ",654
0,=,0
397," ",654
317,$this,654
390,->,654
313,originalEntityData,654
0,[,0
317,$oid,654
0,],0
0,;,0
397,"
      ",654
317,$isChangeTrackingNotify,655
397," ",655
0,=,0
397," ",655
317,$class,655
390,->,655
313,isChangeTrackingNotify,655
0,(,0
0,),0
0,;,0
397,"
      ",655
317,$changeSet,656
397," ",656
0,=,0
397," ",656
0,(,0
317,$isChangeTrackingNotify,656
397," ",656
286,&&,656
397," ",656
366,isset,656
0,(,0
317,$this,656
390,->,656
313,entityChangeSets,656
0,[,0
317,$oid,656
0,],0
0,),0
0,),0
397,"
        ",656
0,?,0
397," ",657
317,$this,657
390,->,657
313,entityChangeSets,657
0,[,0
317,$oid,657
0,],0
397,"
        ",657
0,:,0
397," ",658
377,array,658
0,(,0
0,),0
0,;,0
397,"

      ",658
334,foreach,660
397," ",660
0,(,0
317,$actualData,660
397," ",660
338,as,660
397," ",660
317,$propName,660
397," ",660
269,=>,660
397," ",660
317,$actualValue,660
0,),0
397," ",660
0,{,0
397,"
        ",660
392,"// skip field, its a partially omitted one!",661
397,"
        ",661
326,if,662
397," ",662
0,(,0
0,!,0
0,(,0
366,isset,662
0,(,0
317,$originalData,662
0,[,0
317,$propName,662
0,],0
0,),0
397," ",662
285,||,662
397," ",662
313,array_key_exists,662
0,(,0
317,$propName,662
0,",",0
397," ",662
317,$originalData,662
0,),0
0,),0
0,),0
397," ",662
0,{,0
397,"
          ",662
345,continue,663
0,;,0
397,"
        ",663
0,},0
397,"

        ",664
317,$orgValue,666
397," ",666
0,=,0
397," ",666
317,$originalData,666
0,[,0
317,$propName,666
0,],0
0,;,0
397,"

        ",666
392,"// skip if value haven't changed",668
397,"
        ",668
326,if,669
397," ",669
0,(,0
317,$orgValue,669
397," ",669
291,===,669
397," ",669
317,$actualValue,669
0,),0
397," ",669
0,{,0
397,"
          ",669
345,continue,670
0,;,0
397,"
        ",670
0,},0
397,"

        ",671
392,"// if regular field",673
397,"
        ",673
326,if,674
397," ",674
0,(,0
0,!,0
366,isset,674
0,(,0
317,$class,674
390,->,674
313,associationMappings,674
0,[,0
317,$propName,674
0,],0
0,),0
0,),0
397," ",674
0,{,0
397,"
          ",674
326,if,675
397," ",675
0,(,0
317,$isChangeTrackingNotify,675
0,),0
397," ",675
0,{,0
397,"
            ",675
345,continue,676
0,;,0
397,"
          ",676
0,},0
397,"

          ",677
317,$changeSet,679
0,[,0
317,$propName,679
0,],0
397," ",679
0,=,0
397," ",679
377,array,679
0,(,0
317,$orgValue,679
0,",",0
397," ",679
317,$actualValue,679
0,),0
0,;,0
397,"

          ",679
345,continue,681
0,;,0
397,"
        ",681
0,},0
397,"

        ",682
317,$assoc,684
397," ",684
0,=,0
397," ",684
317,$class,684
390,->,684
313,associationMappings,684
0,[,0
317,$propName,684
0,],0
0,;,0
397,"

        ",684
392,"// Persistent collection was exchanged with the ""originally""",686
397,"
        ",686
392,"// created one. This can only mean it was cloned and replaced",687
397,"
        ",687
392,"// on another entity.",688
397,"
        ",688
326,if,689
397," ",689
0,(,0
317,$actualValue,689
397," ",689
298,instanceof,689
397," ",689
313,PersistentCollection,689
0,),0
397," ",689
0,{,0
397,"
          ",689
317,$owner,690
397," ",690
0,=,0
397," ",690
317,$actualValue,690
390,->,690
313,getOwner,690
0,(,0
0,),0
0,;,0
397,"
          ",690
326,if,691
397," ",691
0,(,0
317,$owner,691
397," ",691
291,===,691
397," ",691
313,null,691
0,),0
397," ",691
0,{,0
397," ",691
392,"// cloned",691
397,"
            ",691
317,$actualValue,692
390,->,692
313,setOwner,692
0,(,0
317,$entity,692
0,",",0
397," ",692
317,$assoc,692
0,),0
0,;,0
397,"
          ",692
0,},0
397," ",693
310,else,693
397," ",693
0,{,0
397,"
            ",693
326,if,694
397," ",694
0,(,0
317,$owner,694
397," ",694
292,!==,694
397," ",694
317,$entity,694
0,),0
397," ",694
0,{,0
397," ",694
392,"// no clone, we have to fix",694
397,"
              ",694
326,if,695
397," ",695
0,(,0
0,!,0
317,$actualValue,695
390,->,695
313,isInitialized,695
0,(,0
0,),0
0,),0
397," ",695
0,{,0
397,"
                ",695
317,$actualValue,696
390,->,696
313,initialize,696
0,(,0
0,),0
0,;,0
397," ",696
392,"// we have to do this otherwise the cols share state",696
397,"
              ",696
0,},0
397,"
              ",697
317,$newValue,698
397," ",698
0,=,0
397," ",698
307,clone,698
397," ",698
317,$actualValue,698
0,;,0
397,"
              ",698
317,$newValue,699
390,->,699
313,setOwner,699
0,(,0
317,$entity,699
0,",",0
397," ",699
317,$assoc,699
0,),0
0,;,0
397,"
              ",699
317,$class,700
390,->,700
313,reflFields,700
0,[,0
317,$propName,700
0,],0
390,->,700
313,setValue,700
0,(,0
317,$entity,700
0,",",0
397," ",700
317,$newValue,700
0,),0
0,;,0
397,"
            ",700
0,},0
397,"
          ",701
0,},0
397,"
        ",702
0,},0
397,"

        ",703
326,if,705
397," ",705
0,(,0
317,$orgValue,705
397," ",705
298,instanceof,705
397," ",705
313,PersistentCollection,705
0,),0
397," ",705
0,{,0
397,"
          ",705
392,"// A PersistentCollection was de-referenced, so delete it.",706
397,"
          ",706
317,$coid,707
397," ",707
0,=,0
397," ",707
313,spl_object_hash,707
0,(,0
317,$orgValue,707
0,),0
0,;,0
397,"

          ",707
326,if,709
397," ",709
0,(,0
366,isset,709
0,(,0
317,$this,709
390,->,709
313,collectionDeletions,709
0,[,0
317,$coid,709
0,],0
0,),0
0,),0
397," ",709
0,{,0
397,"
            ",709
345,continue,710
0,;,0
397,"
          ",710
0,},0
397,"

          ",711
317,$this,713
390,->,713
313,collectionDeletions,713
0,[,0
317,$coid,713
0,],0
397," ",713
0,=,0
397," ",713
317,$orgValue,713
0,;,0
397,"
          ",713
317,$changeSet,714
0,[,0
317,$propName,714
0,],0
397," ",714
0,=,0
397," ",714
317,$orgValue,714
0,;,0
397," ",714
392,"// Signal changeset, to-many assocs will be ignored.",714
397,"

          ",714
345,continue,716
0,;,0
397,"
        ",716
0,},0
397,"

        ",717
326,if,719
397," ",719
0,(,0
317,$assoc,719
0,[,0
320,'type',719
0,],0
397," ",719
287,&,719
397," ",719
313,ClassMetadata,719
402,::,719
313,TO_ONE,719
0,),0
397," ",719
0,{,0
397,"
          ",719
326,if,720
397," ",720
0,(,0
317,$assoc,720
0,[,0
320,'isOwningSide',720
0,],0
0,),0
397," ",720
0,{,0
397,"
            ",720
317,$changeSet,721
0,[,0
317,$propName,721
0,],0
397," ",721
0,=,0
397," ",721
377,array,721
0,(,0
317,$orgValue,721
0,",",0
397," ",721
317,$actualValue,721
0,),0
0,;,0
397,"
          ",721
0,},0
397,"

          ",722
326,if,724
397," ",724
0,(,0
317,$orgValue,724
397," ",724
292,!==,724
397," ",724
313,null,724
397," ",724
286,&&,724
397," ",724
317,$assoc,724
0,[,0
320,'orphanRemoval',724
0,],0
0,),0
397," ",724
0,{,0
397,"
            ",724
317,$this,725
390,->,725
313,scheduleOrphanRemoval,725
0,(,0
317,$orgValue,725
0,),0
0,;,0
397,"
          ",725
0,},0
397,"
        ",726
0,},0
397,"
      ",727
0,},0
397,"

      ",728
326,if,730
397," ",730
0,(,0
317,$changeSet,730
0,),0
397," ",730
0,{,0
397,"
        ",730
317,$this,731
390,->,731
313,entityChangeSets,731
0,[,0
317,$oid,731
0,],0
397," ",731
0,=,0
397," ",731
317,$changeSet,731
0,;,0
397,"
        ",731
317,$this,732
390,->,732
313,originalEntityData,732
0,[,0
317,$oid,732
0,],0
397," ",732
0,=,0
397," ",732
317,$actualData,732
0,;,0
397,"
        ",732
317,$this,733
390,->,733
313,entityUpdates,733
0,[,0
317,$oid,733
0,],0
397," ",733
0,=,0
397," ",733
317,$entity,733
0,;,0
397,"
      ",733
0,},0
397,"
    ",734
0,},0
397,"

    ",735
392,"// Look for changes in associations of the entity",737
397,"
    ",737
334,foreach,738
397," ",738
0,(,0
317,$class,738
390,->,738
313,associationMappings,738
397," ",738
338,as,738
397," ",738
317,$field,738
397," ",738
269,=>,738
397," ",738
317,$assoc,738
0,),0
397," ",738
0,{,0
397,"

      ",738
326,if,740
397," ",740
0,(,0
0,(,0
317,$val,740
397," ",740
0,=,0
397," ",740
317,$class,740
390,->,740
313,reflFields,740
0,[,0
317,$field,740
0,],0
390,->,740
313,getValue,740
0,(,0
317,$entity,740
0,),0
0,),0
397," ",740
291,===,740
397," ",740
313,null,740
0,),0
397," ",740
0,{,0
397,"
        ",740
345,continue,741
0,;,0
397,"
      ",741
0,},0
397,"

      ",742
317,$this,744
390,->,744
313,computeAssociationChanges,744
0,(,0
317,$assoc,744
0,",",0
397," ",744
317,$val,744
0,),0
0,;,0
397,"

      ",744
326,if,746
397," ",746
0,(,0
0,!,0
366,isset,746
0,(,0
317,$this,746
390,->,746
313,entityChangeSets,746
0,[,0
317,$oid,746
0,],0
0,),0
397," ",746
286,&&,746
397,"
        ",746
317,$assoc,747
0,[,0
320,'isOwningSide',747
0,],0
397," ",747
286,&&,747
397,"
        ",747
317,$assoc,748
0,[,0
320,'type',748
0,],0
397," ",748
289,==,748
397," ",748
313,ClassMetadata,748
402,::,748
313,MANY_TO_MANY,748
397," ",748
286,&&,748
397,"
        ",748
317,$val,749
397," ",749
298,instanceof,749
397," ",749
313,PersistentCollection,749
397," ",749
286,&&,749
397,"
        ",749
317,$val,750
390,->,750
313,isDirty,750
0,(,0
0,),0
0,),0
397," ",750
0,{,0
397,"

        ",750
317,$this,752
390,->,752
313,entityChangeSets,752
0,[,0
317,$oid,752
0,],0
397," ",752
0,=,0
397," ",752
377,array,752
0,(,0
0,),0
0,;,0
397,"
        ",752
317,$this,753
390,->,753
313,originalEntityData,753
0,[,0
317,$oid,753
0,],0
397," ",753
0,=,0
397," ",753
317,$actualData,753
0,;,0
397,"
        ",753
317,$this,754
390,->,754
313,entityUpdates,754
0,[,0
317,$oid,754
0,],0
397," ",754
0,=,0
397," ",754
317,$entity,754
0,;,0
397,"
      ",754
0,},0
397,"
    ",755
0,},0
397,"
  ",756
0,},0
397,"

  ",757
393,"/**
   * Computes all the changes that have been done to entities and collections
   * since the last commit and stores these changes in the _entityChangeSet map
   * temporarily for access by the persisters, until the UoW commit is finished.
   *
   * @return void
   */",759
397,"
  ",765
362,public,766
397," ",766
347,function,766
397," ",766
313,computeChangeSets,766
0,(,0
0,),0
397,"
  ",766
0,{,0
397,"
    ",767
392,"// Compute changes for INSERTed entities first. This must always happen.",768
397,"
    ",768
317,$this,769
390,->,769
313,computeScheduleInsertsChangeSets,769
0,(,0
0,),0
0,;,0
397,"

    ",769
392,"// Compute changes for other MANAGED entities. Change tracking policies take effect here.",771
397,"
    ",771
334,foreach,772
397," ",772
0,(,0
317,$this,772
390,->,772
313,identityMap,772
397," ",772
338,as,772
397," ",772
317,$className,772
397," ",772
269,=>,772
397," ",772
317,$entities,772
0,),0
397," ",772
0,{,0
397,"
      ",772
317,$class,773
397," ",773
0,=,0
397," ",773
317,$this,773
390,->,773
313,em,773
390,->,773
313,getClassMetadata,773
0,(,0
317,$className,773
0,),0
0,;,0
397,"

      ",773
392,"// Skip class if instances are read-only",775
397,"
      ",775
326,if,776
397," ",776
0,(,0
317,$class,776
390,->,776
313,isReadOnly,776
0,),0
397," ",776
0,{,0
397,"
        ",776
345,continue,777
0,;,0
397,"
      ",777
0,},0
397,"

      ",778
392,"// If change tracking is explicit or happens through notification, then only compute",780
397,"
      ",780
392,"// changes on entities of that type that are explicitly marked for synchronization.",781
397,"
      ",781
339,switch,782
397," ",782
0,(,0
313,true,782
0,),0
397," ",782
0,{,0
397,"
        ",782
341,case,783
397," ",783
0,(,0
317,$class,783
390,->,783
313,isChangeTrackingDeferredImplicit,783
0,(,0
0,),0
0,),0
0,:,0
397,"
          ",783
317,$entitiesToProcess,784
397," ",784
0,=,0
397," ",784
317,$entities,784
0,;,0
397,"
          ",784
344,break,785
0,;,0
397,"

        ",785
341,case,787
397," ",787
0,(,0
366,isset,787
0,(,0
317,$this,787
390,->,787
313,scheduledForSynchronization,787
0,[,0
317,$className,787
0,],0
0,),0
0,),0
0,:,0
397,"
          ",787
317,$entitiesToProcess,788
397," ",788
0,=,0
397," ",788
317,$this,788
390,->,788
313,scheduledForSynchronization,788
0,[,0
317,$className,788
0,],0
0,;,0
397,"
          ",788
344,break,789
0,;,0
397,"

        ",789
342,default,791
0,:,0
397,"
          ",791
317,$entitiesToProcess,792
397," ",792
0,=,0
397," ",792
377,array,792
0,(,0
0,),0
0,;,0
397,"

      ",792
0,},0
397,"

      ",794
334,foreach,796
397," ",796
0,(,0
317,$entitiesToProcess,796
397," ",796
338,as,796
397," ",796
317,$entity,796
0,),0
397," ",796
0,{,0
397,"
        ",796
392,"// Ignore uninitialized proxy objects",797
397,"
        ",797
326,if,798
397," ",798
0,(,0
317,$entity,798
397," ",798
298,instanceof,798
397," ",798
313,Proxy,798
397," ",798
286,&&,798
397," ",798
0,!,0
317,$entity,798
390,->,798
313,__isInitialized__,798
0,),0
397," ",798
0,{,0
397,"
          ",798
345,continue,799
0,;,0
397,"
        ",799
0,},0
397,"

        ",800
392,"// Only MANAGED entities that are NOT SCHEDULED FOR INSERTION OR DELETION are processed here.",802
397,"
        ",802
317,$oid,803
397," ",803
0,=,0
397," ",803
313,spl_object_hash,803
0,(,0
317,$entity,803
0,),0
0,;,0
397,"

        ",803
326,if,805
397," ",805
0,(,0
0,!,0
366,isset,805
0,(,0
317,$this,805
390,->,805
313,entityInsertions,805
0,[,0
317,$oid,805
0,],0
0,),0
397," ",805
286,&&,805
397," ",805
0,!,0
366,isset,805
0,(,0
317,$this,805
390,->,805
313,entityDeletions,805
0,[,0
317,$oid,805
0,],0
0,),0
397," ",805
286,&&,805
397," ",805
366,isset,805
0,(,0
317,$this,805
390,->,805
313,entityStates,805
0,[,0
317,$oid,805
0,],0
0,),0
0,),0
397," ",805
0,{,0
397,"
          ",805
317,$this,806
390,->,806
313,computeChangeSet,806
0,(,0
317,$class,806
0,",",0
397," ",806
317,$entity,806
0,),0
0,;,0
397,"
        ",806
0,},0
397,"
      ",807
0,},0
397,"
    ",808
0,},0
397,"
  ",809
0,},0
397,"

  ",810
393,"/**
   * Computes the changes of an association.
   *
   * @param array $assoc The association mapping.
   * @param mixed $value The value of the association.
   *
   * @return void
   * @throws ORMException
   *
   * @throws ORMInvalidArgumentException
   */",812
397,"
  ",822
360,private,823
397," ",823
347,function,823
397," ",823
313,computeAssociationChanges,823
0,(,0
317,$assoc,823
0,",",0
397," ",823
317,$value,823
0,),0
397,"
  ",823
0,{,0
397,"
    ",824
326,if,825
397," ",825
0,(,0
317,$value,825
397," ",825
298,instanceof,825
397," ",825
313,Proxy,825
397," ",825
286,&&,825
397," ",825
0,!,0
317,$value,825
390,->,825
313,__isInitialized__,825
0,),0
397," ",825
0,{,0
397,"
      ",825
350,return,826
0,;,0
397,"
    ",826
0,},0
397,"

    ",827
326,if,829
397," ",829
0,(,0
317,$value,829
397," ",829
298,instanceof,829
397," ",829
313,PersistentCollection,829
397," ",829
286,&&,829
397," ",829
317,$value,829
390,->,829
313,isDirty,829
0,(,0
0,),0
0,),0
397," ",829
0,{,0
397,"
      ",829
317,$coid,830
397," ",830
0,=,0
397," ",830
313,spl_object_hash,830
0,(,0
317,$value,830
0,),0
0,;,0
397,"

      ",830
326,if,832
397," ",832
0,(,0
317,$assoc,832
0,[,0
320,'isOwningSide',832
0,],0
0,),0
397," ",832
0,{,0
397,"
        ",832
317,$this,833
390,->,833
313,collectionUpdates,833
0,[,0
317,$coid,833
0,],0
397," ",833
0,=,0
397," ",833
317,$value,833
0,;,0
397,"
      ",833
0,},0
397,"

      ",834
317,$this,836
390,->,836
313,visitedCollections,836
0,[,0
317,$coid,836
0,],0
397," ",836
0,=,0
397," ",836
317,$value,836
0,;,0
397,"
    ",836
0,},0
397,"

    ",837
392,"// Look through the entities, and in any of their associations,",839
397,"
    ",839
392,"// for transient (new) entities, recursively. (""Persistence by reachability"")",840
397,"
    ",840
392,"// Unwrap. Uninitialized collections will simply be empty.",841
397,"
    ",841
317,$unwrappedValue,842
397," ",842
0,=,0
397," ",842
0,(,0
317,$assoc,842
0,[,0
320,'type',842
0,],0
397," ",842
287,&,842
397," ",842
313,ClassMetadata,842
402,::,842
313,TO_ONE,842
0,),0
397," ",842
0,?,0
397," ",842
377,array,842
0,(,0
317,$value,842
0,),0
397," ",842
0,:,0
397," ",842
317,$value,842
390,->,842
313,unwrap,842
0,(,0
0,),0
0,;,0
397,"
    ",842
317,$targetClass,843
397," ",843
0,=,0
397," ",843
317,$this,843
390,->,843
313,em,843
390,->,843
313,getClassMetadata,843
0,(,0
317,$assoc,843
0,[,0
320,'targetEntity',843
0,],0
0,),0
0,;,0
397,"

    ",843
334,foreach,845
397," ",845
0,(,0
317,$unwrappedValue,845
397," ",845
338,as,845
397," ",845
317,$key,845
397," ",845
269,=>,845
397," ",845
317,$entry,845
0,),0
397," ",845
0,{,0
397,"
      ",845
326,if,846
397," ",846
0,(,0
0,!,0
0,(,0
317,$entry,846
397," ",846
298,instanceof,846
397," ",846
317,$targetClass,846
390,->,846
313,name,846
0,),0
0,),0
397," ",846
0,{,0
397,"
        ",846
258,throw,847
397," ",847
313,ORMInvalidArgumentException,847
402,::,847
313,invalidAssociation,847
0,(,0
317,$targetClass,847
0,",",0
397," ",847
317,$assoc,847
0,",",0
397," ",847
317,$entry,847
0,),0
0,;,0
397,"
      ",847
0,},0
397,"

      ",848
317,$state,850
397," ",850
0,=,0
397," ",850
317,$this,850
390,->,850
313,getEntityState,850
0,(,0
317,$entry,850
0,",",0
397," ",850
313,self,850
402,::,850
313,STATE_NEW,850
0,),0
0,;,0
397,"

      ",850
326,if,852
397," ",852
0,(,0
0,!,0
0,(,0
317,$entry,852
397," ",852
298,instanceof,852
397," ",852
317,$assoc,852
0,[,0
320,'targetEntity',852
0,],0
0,),0
0,),0
397," ",852
0,{,0
397,"
        ",852
258,throw,853
397," ",853
313,ORMException,853
402,::,853
313,unexpectedAssociationValue,853
0,(,0
317,$assoc,853
0,[,0
320,'sourceEntity',853
0,],0
0,",",0
397," ",853
317,$assoc,853
0,[,0
320,'fieldName',853
0,],0
0,",",0
397," ",853
313,get_class,853
0,(,0
317,$entry,853
0,),0
0,",",0
397,"
          ",853
317,$assoc,854
0,[,0
320,'targetEntity',854
0,],0
0,),0
0,;,0
397,"
      ",854
0,},0
397,"

      ",855
339,switch,857
397," ",857
0,(,0
317,$state,857
0,),0
397," ",857
0,{,0
397,"
        ",857
341,case,858
397," ",858
313,self,858
402,::,858
313,STATE_NEW,858
0,:,0
397,"
          ",858
326,if,859
397," ",859
0,(,0
0,!,0
317,$assoc,859
0,[,0
320,'isCascadePersist',859
0,],0
0,),0
397," ",859
0,{,0
397,"
            ",859
258,throw,860
397," ",860
313,ORMInvalidArgumentException,860
402,::,860
313,newEntityFoundThroughRelationship,860
0,(,0
317,$assoc,860
0,",",0
397," ",860
317,$entry,860
0,),0
0,;,0
397,"
          ",860
0,},0
397,"

          ",861
317,$this,863
390,->,863
313,persistNew,863
0,(,0
317,$targetClass,863
0,",",0
397," ",863
317,$entry,863
0,),0
0,;,0
397,"
          ",863
317,$this,864
390,->,864
313,computeChangeSet,864
0,(,0
317,$targetClass,864
0,",",0
397," ",864
317,$entry,864
0,),0
0,;,0
397,"
          ",864
344,break,865
0,;,0
397,"

        ",865
341,case,867
397," ",867
313,self,867
402,::,867
313,STATE_REMOVED,867
0,:,0
397,"
          ",867
392,"// Consume the $value as array (it's either an array or an ArrayAccess)",868
397,"
          ",868
392,"// and remove the element from Collection.",869
397,"
          ",869
326,if,870
397," ",870
0,(,0
317,$assoc,870
0,[,0
320,'type',870
0,],0
397," ",870
287,&,870
397," ",870
313,ClassMetadata,870
402,::,870
313,TO_MANY,870
0,),0
397," ",870
0,{,0
397,"
            ",870
365,unset,871
0,(,0
317,$value,871
0,[,0
317,$key,871
0,],0
0,),0
0,;,0
397,"
          ",871
0,},0
397,"
          ",872
344,break,873
0,;,0
397,"

        ",873
341,case,875
397," ",875
313,self,875
402,::,875
313,STATE_DETACHED,875
0,:,0
397,"
          ",875
392,"// Can actually not happen right now as we assume STATE_NEW,",876
397,"
          ",876
392,"// so the exception will be raised from the DBAL layer (constraint violation).",877
397,"
          ",877
258,throw,878
397," ",878
313,ORMInvalidArgumentException,878
402,::,878
313,detachedEntityFoundThroughRelationship,878
0,(,0
317,$assoc,878
0,",",0
397," ",878
317,$entry,878
0,),0
0,;,0
397,"
          ",878
344,break,879
0,;,0
397,"

        ",879
342,default,881
0,:,0
397,"
          ",881
392,"// MANAGED associated entities are already taken into account",882
397,"
          ",882
392,"// during changeset calculation anyway, since they are in the identity map.",883
397,"
      ",883
0,},0
397,"
    ",884
0,},0
397,"
  ",885
0,},0
397,"

  ",886
393,"/**
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   * @param object $entity
   *
   * @return void
   */",888
397,"
  ",893
360,private,894
397," ",894
347,function,894
397," ",894
313,persistNew,894
0,(,0
317,$class,894
0,",",0
397," ",894
317,$entity,894
0,),0
397,"
  ",894
0,{,0
397,"
    ",895
317,$oid,896
397," ",896
0,=,0
397," ",896
313,spl_object_hash,896
0,(,0
317,$entity,896
0,),0
0,;,0
397,"
    ",896
317,$invoke,897
397," ",897
0,=,0
397," ",897
317,$this,897
390,->,897
313,listenersInvoker,897
390,->,897
313,getSubscribedSystems,897
0,(,0
317,$class,897
0,",",0
397," ",897
313,Events,897
402,::,897
313,prePersist,897
0,),0
0,;,0
397,"

    ",897
326,if,899
397," ",899
0,(,0
317,$invoke,899
397," ",899
292,!==,899
397," ",899
313,ListenersInvoker,899
402,::,899
313,INVOKE_NONE,899
0,),0
397," ",899
0,{,0
397,"
      ",899
317,$this,900
390,->,900
313,listenersInvoker,900
390,->,900
313,invoke,900
0,(,0
317,$class,900
0,",",0
397," ",900
313,Events,900
402,::,900
313,prePersist,900
0,",",0
397," ",900
317,$entity,900
0,",",0
397," ",900
324,new,900
397," ",900
313,LifecycleEventArgs,900
0,(,0
317,$entity,900
0,",",0
397," ",900
317,$this,900
390,->,900
313,em,900
0,),0
0,",",0
397,"
        ",900
317,$invoke,901
0,),0
0,;,0
397,"
    ",901
0,},0
397,"

    ",902
317,$idGen,904
397," ",904
0,=,0
397," ",904
317,$class,904
390,->,904
313,idGenerator,904
0,;,0
397,"

    ",904
326,if,906
397," ",906
0,(,0
0,!,0
317,$idGen,906
390,->,906
313,isPostInsertGenerator,906
0,(,0
0,),0
0,),0
397," ",906
0,{,0
397,"
      ",906
317,$idValue,907
397," ",907
0,=,0
397," ",907
317,$idGen,907
390,->,907
313,generate,907
0,(,0
317,$this,907
390,->,907
313,em,907
0,",",0
397," ",907
317,$entity,907
0,),0
0,;,0
397,"

      ",907
326,if,909
397," ",909
0,(,0
0,!,0
317,$idGen,909
397," ",909
298,instanceof,909
397," ",909
314,"\Doctrine\ORM\Id\AssignedGenerator",909
0,),0
397," ",909
0,{,0
397,"
        ",909
317,$idValue,910
397," ",910
0,=,0
397," ",910
377,array,910
0,(,0
317,$class,910
390,->,910
313,identifier,910
0,[,0
311,0,910
0,],0
397," ",910
269,=>,910
397," ",910
317,$idValue,910
0,),0
0,;,0
397,"

        ",910
317,$class,912
390,->,912
313,setIdentifierValues,912
0,(,0
317,$entity,912
0,",",0
397," ",912
317,$idValue,912
0,),0
0,;,0
397,"
      ",912
0,},0
397,"

      ",913
317,$this,915
390,->,915
313,entityIdentifiers,915
0,[,0
317,$oid,915
0,],0
397," ",915
0,=,0
397," ",915
317,$idValue,915
0,;,0
397,"
    ",915
0,},0
397,"

    ",916
317,$this,918
390,->,918
313,entityStates,918
0,[,0
317,$oid,918
0,],0
397," ",918
0,=,0
397," ",918
313,self,918
402,::,918
313,STATE_MANAGED,918
0,;,0
397,"

    ",918
317,$this,920
390,->,920
313,scheduleForInsert,920
0,(,0
317,$entity,920
0,),0
0,;,0
397,"
  ",920
0,},0
397,"

  ",921
393,"/**
   * INTERNAL:
   * Computes the changeset of an individual entity, independently of the
   * computeChangeSets() routine that is used at the beginning of a UnitOfWork#commit().
   *
   * The passed entity must be a managed entity. If the entity already has a change set
   * because this method is invoked during a commit cycle then the change sets are added.
   * whereby changes detected in this method prevail.
   *
   * @param ClassMetadata $class The class descriptor of the entity.
   * @param object $entity The entity for which to (re)calculate the change set.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the passed entity is not MANAGED.
   * @ignore
   *
   */",923
397,"
  ",940
362,public,941
397," ",941
347,function,941
397," ",941
313,recomputeSingleEntityChangeSet,941
0,(,0
313,ClassMetadata,941
397," ",941
317,$class,941
0,",",0
397," ",941
317,$entity,941
0,),0
397,"
  ",941
0,{,0
397,"
    ",942
317,$oid,943
397," ",943
0,=,0
397," ",943
313,spl_object_hash,943
0,(,0
317,$entity,943
0,),0
0,;,0
397,"

    ",943
326,if,945
397," ",945
0,(,0
0,!,0
366,isset,945
0,(,0
317,$this,945
390,->,945
313,entityStates,945
0,[,0
317,$oid,945
0,],0
0,),0
397," ",945
285,||,945
397," ",945
317,$this,945
390,->,945
313,entityStates,945
0,[,0
317,$oid,945
0,],0
397," ",945
290,!=,945
397," ",945
313,self,945
402,::,945
313,STATE_MANAGED,945
0,),0
397," ",945
0,{,0
397,"
      ",945
258,throw,946
397," ",946
313,ORMInvalidArgumentException,946
402,::,946
313,entityNotManaged,946
0,(,0
317,$entity,946
0,),0
0,;,0
397,"
    ",946
0,},0
397,"

    ",947
392,"// skip if change tracking is ""NOTIFY""",949
397,"
    ",949
326,if,950
397," ",950
0,(,0
317,$class,950
390,->,950
313,isChangeTrackingNotify,950
0,(,0
0,),0
0,),0
397," ",950
0,{,0
397,"
      ",950
350,return,951
0,;,0
397,"
    ",951
0,},0
397,"

    ",952
326,if,954
397," ",954
0,(,0
0,!,0
317,$class,954
390,->,954
313,isInheritanceTypeNone,954
0,(,0
0,),0
0,),0
397," ",954
0,{,0
397,"
      ",954
317,$class,955
397," ",955
0,=,0
397," ",955
317,$this,955
390,->,955
313,em,955
390,->,955
313,getClassMetadata,955
0,(,0
313,get_class,955
0,(,0
317,$entity,955
0,),0
0,),0
0,;,0
397,"
    ",955
0,},0
397,"

    ",956
317,$actualData,958
397," ",958
0,=,0
397," ",958
377,array,958
0,(,0
0,),0
0,;,0
397,"

    ",958
334,foreach,960
397," ",960
0,(,0
317,$class,960
390,->,960
313,reflFields,960
397," ",960
338,as,960
397," ",960
317,$name,960
397," ",960
269,=>,960
397," ",960
317,$refProp,960
0,),0
397," ",960
0,{,0
397,"
      ",960
326,if,961
397," ",961
0,(,0
0,(,0
0,!,0
317,$class,961
390,->,961
313,isIdentifier,961
0,(,0
317,$name,961
0,),0
397," ",961
285,||,961
397," ",961
0,!,0
317,$class,961
390,->,961
313,isIdGeneratorIdentity,961
0,(,0
0,),0
0,),0
397,"
        ",961
286,&&,962
397," ",962
0,(,0
317,$name,962
397," ",962
292,!==,962
397," ",962
317,$class,962
390,->,962
313,versionField,962
0,),0
397,"
        ",962
286,&&,963
397," ",963
0,!,0
317,$class,963
390,->,963
313,isCollectionValuedAssociation,963
0,(,0
317,$name,963
0,),0
0,),0
397," ",963
0,{,0
397,"
        ",963
317,$actualData,964
0,[,0
317,$name,964
0,],0
397," ",964
0,=,0
397," ",964
317,$refProp,964
390,->,964
313,getValue,964
0,(,0
317,$entity,964
0,),0
0,;,0
397,"
      ",964
0,},0
397,"
    ",965
0,},0
397,"

    ",966
326,if,968
397," ",968
0,(,0
0,!,0
366,isset,968
0,(,0
317,$this,968
390,->,968
313,originalEntityData,968
0,[,0
317,$oid,968
0,],0
0,),0
0,),0
397," ",968
0,{,0
397,"
      ",968
258,throw,969
397," ",969
324,new,969
397," ",969
314,"\RuntimeException",969
0,(,0
320,"'Cannot call recomputeSingleEntityChangeSet before computeChangeSet on an entity.'",969
0,),0
0,;,0
397,"
    ",969
0,},0
397,"

    ",970
317,$originalData,972
397," ",972
0,=,0
397," ",972
317,$this,972
390,->,972
313,originalEntityData,972
0,[,0
317,$oid,972
0,],0
0,;,0
397,"
    ",972
317,$changeSet,973
397," ",973
0,=,0
397," ",973
377,array,973
0,(,0
0,),0
0,;,0
397,"

    ",973
334,foreach,975
397," ",975
0,(,0
317,$actualData,975
397," ",975
338,as,975
397," ",975
317,$propName,975
397," ",975
269,=>,975
397," ",975
317,$actualValue,975
0,),0
397," ",975
0,{,0
397,"
      ",975
317,$orgValue,976
397," ",976
0,=,0
397," ",976
366,isset,976
0,(,0
317,$originalData,976
0,[,0
317,$propName,976
0,],0
0,),0
397," ",976
0,?,0
397," ",976
317,$originalData,976
0,[,0
317,$propName,976
0,],0
397," ",976
0,:,0
397," ",976
313,null,976
0,;,0
397,"

      ",976
326,if,978
397," ",978
0,(,0
317,$orgValue,978
397," ",978
292,!==,978
397," ",978
317,$actualValue,978
0,),0
397," ",978
0,{,0
397,"
        ",978
317,$changeSet,979
0,[,0
317,$propName,979
0,],0
397," ",979
0,=,0
397," ",979
377,array,979
0,(,0
317,$orgValue,979
0,",",0
397," ",979
317,$actualValue,979
0,),0
0,;,0
397,"
      ",979
0,},0
397,"
    ",980
0,},0
397,"

    ",981
326,if,983
397," ",983
0,(,0
317,$changeSet,983
0,),0
397," ",983
0,{,0
397,"
      ",983
326,if,984
397," ",984
0,(,0
366,isset,984
0,(,0
317,$this,984
390,->,984
313,entityChangeSets,984
0,[,0
317,$oid,984
0,],0
0,),0
0,),0
397," ",984
0,{,0
397,"
        ",984
317,$this,985
390,->,985
313,entityChangeSets,985
0,[,0
317,$oid,985
0,],0
397," ",985
0,=,0
397," ",985
313,array_merge,985
0,(,0
317,$this,985
390,->,985
313,entityChangeSets,985
0,[,0
317,$oid,985
0,],0
0,",",0
397," ",985
317,$changeSet,985
0,),0
0,;,0
397,"
      ",985
0,},0
397," ",986
310,else,986
397," ",986
0,{,0
397,"
        ",986
326,if,987
397," ",987
0,(,0
0,!,0
366,isset,987
0,(,0
317,$this,987
390,->,987
313,entityInsertions,987
0,[,0
317,$oid,987
0,],0
0,),0
0,),0
397," ",987
0,{,0
397,"
          ",987
317,$this,988
390,->,988
313,entityChangeSets,988
0,[,0
317,$oid,988
0,],0
397," ",988
0,=,0
397," ",988
317,$changeSet,988
0,;,0
397,"
          ",988
317,$this,989
390,->,989
313,entityUpdates,989
0,[,0
317,$oid,989
0,],0
397," ",989
0,=,0
397," ",989
317,$entity,989
0,;,0
397,"
        ",989
0,},0
397,"
      ",990
0,},0
397,"
      ",991
317,$this,992
390,->,992
313,originalEntityData,992
0,[,0
317,$oid,992
0,],0
397," ",992
0,=,0
397," ",992
317,$actualData,992
0,;,0
397,"
    ",992
0,},0
397,"
  ",993
0,},0
397,"

  ",994
393,"/**
   * Executes all entity insertions for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",996
397,"
  ",1002
360,private,1003
397," ",1003
347,function,1003
397," ",1003
313,executeInserts,1003
0,(,0
317,$class,1003
0,),0
397,"
  ",1003
0,{,0
397,"
    ",1004
317,$entities,1005
397," ",1005
0,=,0
397," ",1005
377,array,1005
0,(,0
0,),0
0,;,0
397,"
    ",1005
317,$className,1006
397," ",1006
0,=,0
397," ",1006
317,$class,1006
390,->,1006
313,name,1006
0,;,0
397,"
    ",1006
317,$persister,1007
397," ",1007
0,=,0
397," ",1007
317,$this,1007
390,->,1007
313,getEntityPersister,1007
0,(,0
317,$className,1007
0,),0
0,;,0
397,"
    ",1007
317,$invoke,1008
397," ",1008
0,=,0
397," ",1008
317,$this,1008
390,->,1008
313,listenersInvoker,1008
390,->,1008
313,getSubscribedSystems,1008
0,(,0
317,$class,1008
0,",",0
397," ",1008
313,Events,1008
402,::,1008
313,postPersist,1008
0,),0
0,;,0
397,"

    ",1008
334,foreach,1010
397," ",1010
0,(,0
317,$this,1010
390,->,1010
313,entityInsertions,1010
397," ",1010
338,as,1010
397," ",1010
317,$oid,1010
397," ",1010
269,=>,1010
397," ",1010
317,$entity,1010
0,),0
397," ",1010
0,{,0
397,"

      ",1010
326,if,1012
397," ",1012
0,(,0
317,$this,1012
390,->,1012
313,em,1012
390,->,1012
313,getClassMetadata,1012
0,(,0
313,get_class,1012
0,(,0
317,$entity,1012
0,),0
0,),0
390,->,1012
313,name,1012
397," ",1012
292,!==,1012
397," ",1012
317,$className,1012
0,),0
397," ",1012
0,{,0
397,"
        ",1012
345,continue,1013
0,;,0
397,"
      ",1013
0,},0
397,"

      ",1014
317,$persister,1016
390,->,1016
313,addInsert,1016
0,(,0
317,$entity,1016
0,),0
0,;,0
397,"

      ",1016
365,unset,1018
0,(,0
317,$this,1018
390,->,1018
313,entityInsertions,1018
0,[,0
317,$oid,1018
0,],0
0,),0
0,;,0
397,"

      ",1018
326,if,1020
397," ",1020
0,(,0
317,$invoke,1020
397," ",1020
292,!==,1020
397," ",1020
313,ListenersInvoker,1020
402,::,1020
313,INVOKE_NONE,1020
0,),0
397," ",1020
0,{,0
397,"
        ",1020
317,$entities,1021
0,[,0
0,],0
397," ",1021
0,=,0
397," ",1021
317,$entity,1021
0,;,0
397,"
      ",1021
0,},0
397,"
    ",1022
0,},0
397,"

    ",1023
317,$postInsertIds,1025
397," ",1025
0,=,0
397," ",1025
317,$persister,1025
390,->,1025
313,executeInserts,1025
0,(,0
0,),0
0,;,0
397,"

    ",1025
326,if,1027
397," ",1027
0,(,0
317,$postInsertIds,1027
0,),0
397," ",1027
0,{,0
397,"
      ",1027
392,"// Persister returned post-insert IDs",1028
397,"
      ",1028
334,foreach,1029
397," ",1029
0,(,0
317,$postInsertIds,1029
397," ",1029
338,as,1029
397," ",1029
317,$postInsertId,1029
0,),0
397," ",1029
0,{,0
397,"
        ",1029
317,$id,1030
397," ",1030
0,=,0
397," ",1030
317,$postInsertId,1030
0,[,0
320,'generatedId',1030
0,],0
0,;,0
397,"
        ",1030
317,$entity,1031
397," ",1031
0,=,0
397," ",1031
317,$postInsertId,1031
0,[,0
320,'entity',1031
0,],0
0,;,0
397,"
        ",1031
317,$oid,1032
397," ",1032
0,=,0
397," ",1032
313,spl_object_hash,1032
0,(,0
317,$entity,1032
0,),0
0,;,0
397,"
        ",1032
317,$idField,1033
397," ",1033
0,=,0
397," ",1033
317,$class,1033
390,->,1033
313,identifier,1033
0,[,0
311,0,1033
0,],0
0,;,0
397,"

        ",1033
317,$class,1035
390,->,1035
313,reflFields,1035
0,[,0
317,$idField,1035
0,],0
390,->,1035
313,setValue,1035
0,(,0
317,$entity,1035
0,",",0
397," ",1035
317,$id,1035
0,),0
0,;,0
397,"

        ",1035
317,$this,1037
390,->,1037
313,entityIdentifiers,1037
0,[,0
317,$oid,1037
0,],0
397," ",1037
0,=,0
397," ",1037
377,array,1037
0,(,0
317,$idField,1037
397," ",1037
269,=>,1037
397," ",1037
317,$id,1037
0,),0
0,;,0
397,"
        ",1037
317,$this,1038
390,->,1038
313,entityStates,1038
0,[,0
317,$oid,1038
0,],0
397," ",1038
0,=,0
397," ",1038
313,self,1038
402,::,1038
313,STATE_MANAGED,1038
0,;,0
397,"
        ",1038
317,$this,1039
390,->,1039
313,originalEntityData,1039
0,[,0
317,$oid,1039
0,],0
0,[,0
317,$idField,1039
0,],0
397," ",1039
0,=,0
397," ",1039
317,$id,1039
0,;,0
397,"

        ",1039
317,$this,1041
390,->,1041
313,addToIdentityMap,1041
0,(,0
317,$entity,1041
0,),0
0,;,0
397,"
      ",1041
0,},0
397,"
    ",1042
0,},0
397,"

    ",1043
334,foreach,1045
397," ",1045
0,(,0
317,$entities,1045
397," ",1045
338,as,1045
397," ",1045
317,$entity,1045
0,),0
397," ",1045
0,{,0
397,"
      ",1045
317,$this,1046
390,->,1046
313,listenersInvoker,1046
390,->,1046
313,invoke,1046
0,(,0
317,$class,1046
0,",",0
397," ",1046
313,Events,1046
402,::,1046
313,postPersist,1046
0,",",0
397," ",1046
317,$entity,1046
0,",",0
397," ",1046
324,new,1046
397," ",1046
313,LifecycleEventArgs,1046
0,(,0
317,$entity,1046
0,",",0
397," ",1046
317,$this,1046
390,->,1046
313,em,1046
0,),0
0,",",0
397,"
        ",1046
317,$invoke,1047
0,),0
0,;,0
397,"
    ",1047
0,},0
397,"
  ",1048
0,},0
397,"

  ",1049
393,"/**
   * Executes all entity updates for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",1051
397,"
  ",1057
360,private,1058
397," ",1058
347,function,1058
397," ",1058
313,executeUpdates,1058
0,(,0
317,$class,1058
0,),0
397,"
  ",1058
0,{,0
397,"
    ",1059
317,$className,1060
397," ",1060
0,=,0
397," ",1060
317,$class,1060
390,->,1060
313,name,1060
0,;,0
397,"
    ",1060
317,$persister,1061
397," ",1061
0,=,0
397," ",1061
317,$this,1061
390,->,1061
313,getEntityPersister,1061
0,(,0
317,$className,1061
0,),0
0,;,0
397,"
    ",1061
317,$preUpdateInvoke,1062
397," ",1062
0,=,0
397," ",1062
317,$this,1062
390,->,1062
313,listenersInvoker,1062
390,->,1062
313,getSubscribedSystems,1062
0,(,0
317,$class,1062
0,",",0
397," ",1062
313,Events,1062
402,::,1062
313,preUpdate,1062
0,),0
0,;,0
397,"
    ",1062
317,$postUpdateInvoke,1063
397," ",1063
0,=,0
397," ",1063
317,$this,1063
390,->,1063
313,listenersInvoker,1063
390,->,1063
313,getSubscribedSystems,1063
0,(,0
317,$class,1063
0,",",0
397," ",1063
313,Events,1063
402,::,1063
313,postUpdate,1063
0,),0
0,;,0
397,"

    ",1063
334,foreach,1065
397," ",1065
0,(,0
317,$this,1065
390,->,1065
313,entityUpdates,1065
397," ",1065
338,as,1065
397," ",1065
317,$oid,1065
397," ",1065
269,=>,1065
397," ",1065
317,$entity,1065
0,),0
397," ",1065
0,{,0
397,"

      ",1065
326,if,1067
397," ",1067
0,(,0
317,$this,1067
390,->,1067
313,em,1067
390,->,1067
313,getClassMetadata,1067
0,(,0
313,get_class,1067
0,(,0
317,$entity,1067
0,),0
0,),0
390,->,1067
313,name,1067
397," ",1067
292,!==,1067
397," ",1067
317,$className,1067
0,),0
397," ",1067
0,{,0
397,"
        ",1067
345,continue,1068
0,;,0
397,"
      ",1068
0,},0
397,"

      ",1069
326,if,1071
397," ",1071
0,(,0
317,$preUpdateInvoke,1071
397," ",1071
290,!=,1071
397," ",1071
313,ListenersInvoker,1071
402,::,1071
313,INVOKE_NONE,1071
0,),0
397," ",1071
0,{,0
397,"
        ",1071
317,$this,1072
390,->,1072
313,listenersInvoker,1072
390,->,1072
313,invoke,1072
0,(,0
317,$class,1072
0,",",0
397," ",1072
313,Events,1072
402,::,1072
313,preUpdate,1072
0,",",0
397," ",1072
317,$entity,1072
0,",",0
397,"
          ",1072
324,new,1073
397," ",1073
313,PreUpdateEventArgs,1073
0,(,0
317,$entity,1073
0,",",0
397," ",1073
317,$this,1073
390,->,1073
313,em,1073
0,",",0
397," ",1073
317,$this,1073
390,->,1073
313,entityChangeSets,1073
0,[,0
317,$oid,1073
0,],0
0,),0
0,",",0
397," ",1073
317,$preUpdateInvoke,1073
0,),0
0,;,0
397,"
        ",1073
317,$this,1074
390,->,1074
313,recomputeSingleEntityChangeSet,1074
0,(,0
317,$class,1074
0,",",0
397," ",1074
317,$entity,1074
0,),0
0,;,0
397,"
      ",1074
0,},0
397,"

      ",1075
326,if,1077
397," ",1077
0,(,0
0,!,0
367,empty,1077
0,(,0
317,$this,1077
390,->,1077
313,entityChangeSets,1077
0,[,0
317,$oid,1077
0,],0
0,),0
0,),0
397," ",1077
0,{,0
397,"
        ",1077
317,$persister,1078
390,->,1078
313,update,1078
0,(,0
317,$entity,1078
0,),0
0,;,0
397,"
      ",1078
0,},0
397,"

      ",1079
365,unset,1081
0,(,0
317,$this,1081
390,->,1081
313,entityUpdates,1081
0,[,0
317,$oid,1081
0,],0
0,),0
0,;,0
397,"

      ",1081
326,if,1083
397," ",1083
0,(,0
317,$postUpdateInvoke,1083
397," ",1083
290,!=,1083
397," ",1083
313,ListenersInvoker,1083
402,::,1083
313,INVOKE_NONE,1083
0,),0
397," ",1083
0,{,0
397,"
        ",1083
317,$this,1084
390,->,1084
313,listenersInvoker,1084
390,->,1084
313,invoke,1084
0,(,0
317,$class,1084
0,",",0
397," ",1084
313,Events,1084
402,::,1084
313,postUpdate,1084
0,",",0
397," ",1084
317,$entity,1084
0,",",0
397," ",1084
324,new,1084
397," ",1084
313,LifecycleEventArgs,1084
0,(,0
317,$entity,1084
0,",",0
397," ",1084
317,$this,1084
390,->,1084
313,em,1084
0,),0
0,",",0
397,"
          ",1084
317,$postUpdateInvoke,1085
0,),0
0,;,0
397,"
      ",1085
0,},0
397,"
    ",1086
0,},0
397,"
  ",1087
0,},0
397,"

  ",1088
393,"/**
   * Executes all entity deletions for entities of the specified type.
   *
   * @param \Doctrine\ORM\Mapping\ClassMetadata $class
   *
   * @return void
   */",1090
397,"
  ",1096
360,private,1097
397," ",1097
347,function,1097
397," ",1097
313,executeDeletions,1097
0,(,0
317,$class,1097
0,),0
397,"
  ",1097
0,{,0
397,"
    ",1098
317,$className,1099
397," ",1099
0,=,0
397," ",1099
317,$class,1099
390,->,1099
313,name,1099
0,;,0
397,"
    ",1099
317,$persister,1100
397," ",1100
0,=,0
397," ",1100
317,$this,1100
390,->,1100
313,getEntityPersister,1100
0,(,0
317,$className,1100
0,),0
0,;,0
397,"
    ",1100
317,$invoke,1101
397," ",1101
0,=,0
397," ",1101
317,$this,1101
390,->,1101
313,listenersInvoker,1101
390,->,1101
313,getSubscribedSystems,1101
0,(,0
317,$class,1101
0,",",0
397," ",1101
313,Events,1101
402,::,1101
313,postRemove,1101
0,),0
0,;,0
397,"

    ",1101
334,foreach,1103
397," ",1103
0,(,0
317,$this,1103
390,->,1103
313,entityDeletions,1103
397," ",1103
338,as,1103
397," ",1103
317,$oid,1103
397," ",1103
269,=>,1103
397," ",1103
317,$entity,1103
0,),0
397," ",1103
0,{,0
397,"
      ",1103
326,if,1104
397," ",1104
0,(,0
317,$this,1104
390,->,1104
313,em,1104
390,->,1104
313,getClassMetadata,1104
0,(,0
313,get_class,1104
0,(,0
317,$entity,1104
0,),0
0,),0
390,->,1104
313,name,1104
397," ",1104
292,!==,1104
397," ",1104
317,$className,1104
0,),0
397," ",1104
0,{,0
397,"
        ",1104
345,continue,1105
0,;,0
397,"
      ",1105
0,},0
397,"

      ",1106
317,$persister,1108
390,->,1108
313,delete,1108
0,(,0
317,$entity,1108
0,),0
0,;,0
397,"

      ",1108
365,unset,1110
0,(,0
397,"
        ",1110
317,$this,1111
390,->,1111
313,entityDeletions,1111
0,[,0
317,$oid,1111
0,],0
0,",",0
397,"
        ",1111
317,$this,1112
390,->,1112
313,entityIdentifiers,1112
0,[,0
317,$oid,1112
0,],0
0,",",0
397,"
        ",1112
317,$this,1113
390,->,1113
313,originalEntityData,1113
0,[,0
317,$oid,1113
0,],0
0,",",0
397,"
        ",1113
317,$this,1114
390,->,1114
313,entityStates,1114
0,[,0
317,$oid,1114
0,],0
397,"
      ",1114
0,),0
0,;,0
397,"

      ",1115
392,"// Entity with this $oid after deletion treated as NEW, even if the $oid",1117
397,"
      ",1117
392,"// is obtained by a new entity because the old one went out of scope.",1118
397,"
      ",1118
392,"//$this->entityStates[$oid] = self::STATE_NEW;",1119
397,"
      ",1119
326,if,1120
397," ",1120
0,(,0
0,!,0
317,$class,1120
390,->,1120
313,isIdentifierNatural,1120
0,(,0
0,),0
0,),0
397," ",1120
0,{,0
397,"
        ",1120
317,$class,1121
390,->,1121
313,reflFields,1121
0,[,0
317,$class,1121
390,->,1121
313,identifier,1121
0,[,0
311,0,1121
0,],0
0,],0
390,->,1121
313,setValue,1121
0,(,0
317,$entity,1121
0,",",0
397," ",1121
313,null,1121
0,),0
0,;,0
397,"
      ",1121
0,},0
397,"

      ",1122
326,if,1124
397," ",1124
0,(,0
317,$invoke,1124
397," ",1124
292,!==,1124
397," ",1124
313,ListenersInvoker,1124
402,::,1124
313,INVOKE_NONE,1124
0,),0
397," ",1124
0,{,0
397,"
        ",1124
317,$this,1125
390,->,1125
313,listenersInvoker,1125
390,->,1125
313,invoke,1125
0,(,0
317,$class,1125
0,",",0
397," ",1125
313,Events,1125
402,::,1125
313,postRemove,1125
0,",",0
397," ",1125
317,$entity,1125
0,",",0
397," ",1125
324,new,1125
397," ",1125
313,LifecycleEventArgs,1125
0,(,0
317,$entity,1125
0,",",0
397," ",1125
317,$this,1125
390,->,1125
313,em,1125
0,),0
0,",",0
397,"
          ",1125
317,$invoke,1126
0,),0
0,;,0
397,"
      ",1126
0,},0
397,"
    ",1127
0,},0
397,"
  ",1128
0,},0
397,"

  ",1129
393,"/**
   * Gets the commit order.
   *
   * @param array|null $entityChangeSet
   *
   * @return array
   */",1131
397,"
  ",1137
360,private,1138
397," ",1138
347,function,1138
397," ",1138
313,getCommitOrder,1138
0,(,0
377,array,1138
397," ",1138
317,$entityChangeSet,1138
397," ",1138
0,=,0
397," ",1138
313,null,1138
0,),0
397,"
  ",1138
0,{,0
397,"
    ",1139
326,if,1140
397," ",1140
0,(,0
317,$entityChangeSet,1140
397," ",1140
291,===,1140
397," ",1140
313,null,1140
0,),0
397," ",1140
0,{,0
397,"
      ",1140
317,$entityChangeSet,1141
397," ",1141
0,=,0
397," ",1141
313,array_merge,1141
0,(,0
317,$this,1141
390,->,1141
313,entityInsertions,1141
0,",",0
397," ",1141
317,$this,1141
390,->,1141
313,entityUpdates,1141
0,",",0
397," ",1141
317,$this,1141
390,->,1141
313,entityDeletions,1141
0,),0
0,;,0
397,"
    ",1141
0,},0
397,"

    ",1142
317,$calc,1144
397," ",1144
0,=,0
397," ",1144
317,$this,1144
390,->,1144
313,getCommitOrderCalculator,1144
0,(,0
0,),0
0,;,0
397,"

    ",1144
392,"// See if there are any new classes in the changeset, that are not in the",1146
397,"
    ",1146
392,"// commit order graph yet (don't have a node).",1147
397,"
    ",1147
392,"// We have to inspect changeSet to be able to correctly build dependencies.",1148
397,"
    ",1148
392,"// It is not possible to use IdentityMap here because post inserted ids",1149
397,"
    ",1149
392,"// are not yet available.",1150
397,"
    ",1150
317,$newNodes,1151
397," ",1151
0,=,0
397," ",1151
377,array,1151
0,(,0
0,),0
0,;,0
397,"

    ",1151
334,foreach,1153
397," ",1153
0,(,0
317,$entityChangeSet,1153
397," ",1153
338,as,1153
397," ",1153
317,$entity,1153
0,),0
397," ",1153
0,{,0
397,"
      ",1153
317,$class,1154
397," ",1154
0,=,0
397," ",1154
317,$this,1154
390,->,1154
313,em,1154
390,->,1154
313,getClassMetadata,1154
0,(,0
313,get_class,1154
0,(,0
317,$entity,1154
0,),0
0,),0
0,;,0
397,"

      ",1154
326,if,1156
397," ",1156
0,(,0
317,$calc,1156
390,->,1156
313,hasClass,1156
0,(,0
317,$class,1156
390,->,1156
313,name,1156
0,),0
0,),0
397," ",1156
0,{,0
397,"
        ",1156
345,continue,1157
0,;,0
397,"
      ",1157
0,},0
397,"

      ",1158
317,$calc,1160
390,->,1160
313,addClass,1160
0,(,0
317,$class,1160
0,),0
0,;,0
397,"

      ",1160
317,$newNodes,1162
0,[,0
0,],0
397," ",1162
0,=,0
397," ",1162
317,$class,1162
0,;,0
397,"
    ",1162
0,},0
397,"

    ",1163
392,"// Calculate dependencies for new nodes",1165
397,"
    ",1165
330,while,1166
397," ",1166
0,(,0
317,$class,1166
397," ",1166
0,=,0
397," ",1166
313,array_pop,1166
0,(,0
317,$newNodes,1166
0,),0
0,),0
397," ",1166
0,{,0
397,"
      ",1166
334,foreach,1167
397," ",1167
0,(,0
317,$class,1167
390,->,1167
313,associationMappings,1167
397," ",1167
338,as,1167
397," ",1167
317,$assoc,1167
0,),0
397," ",1167
0,{,0
397,"
        ",1167
326,if,1168
397," ",1168
0,(,0
0,!,0
0,(,0
317,$assoc,1168
0,[,0
320,'isOwningSide',1168
0,],0
397," ",1168
286,&&,1168
397," ",1168
317,$assoc,1168
0,[,0
320,'type',1168
0,],0
397," ",1168
287,&,1168
397," ",1168
313,ClassMetadata,1168
402,::,1168
313,TO_ONE,1168
0,),0
0,),0
397," ",1168
0,{,0
397,"
          ",1168
345,continue,1169
0,;,0
397,"
        ",1169
0,},0
397,"

        ",1170
317,$targetClass,1172
397," ",1172
0,=,0
397," ",1172
317,$this,1172
390,->,1172
313,em,1172
390,->,1172
313,getClassMetadata,1172
0,(,0
317,$assoc,1172
0,[,0
320,'targetEntity',1172
0,],0
0,),0
0,;,0
397,"

        ",1172
326,if,1174
397," ",1174
0,(,0
0,!,0
317,$calc,1174
390,->,1174
313,hasClass,1174
0,(,0
317,$targetClass,1174
390,->,1174
313,name,1174
0,),0
0,),0
397," ",1174
0,{,0
397,"
          ",1174
317,$calc,1175
390,->,1175
313,addClass,1175
0,(,0
317,$targetClass,1175
0,),0
0,;,0
397,"

          ",1175
317,$newNodes,1177
0,[,0
0,],0
397," ",1177
0,=,0
397," ",1177
317,$targetClass,1177
0,;,0
397,"
        ",1177
0,},0
397,"

        ",1178
317,$calc,1180
390,->,1180
313,addDependency,1180
0,(,0
317,$targetClass,1180
0,",",0
397," ",1180
317,$class,1180
0,),0
0,;,0
397,"

        ",1180
392,"// If the target class has mapped subclasses, these share the same dependency.",1182
397,"
        ",1182
326,if,1183
397," ",1183
0,(,0
0,!,0
317,$targetClass,1183
390,->,1183
313,subClasses,1183
0,),0
397," ",1183
0,{,0
397,"
          ",1183
345,continue,1184
0,;,0
397,"
        ",1184
0,},0
397,"

        ",1185
334,foreach,1187
397," ",1187
0,(,0
317,$targetClass,1187
390,->,1187
313,subClasses,1187
397," ",1187
338,as,1187
397," ",1187
317,$subClassName,1187
0,),0
397," ",1187
0,{,0
397,"
          ",1187
317,$targetSubClass,1188
397," ",1188
0,=,0
397," ",1188
317,$this,1188
390,->,1188
313,em,1188
390,->,1188
313,getClassMetadata,1188
0,(,0
317,$subClassName,1188
0,),0
0,;,0
397,"

          ",1188
326,if,1190
397," ",1190
0,(,0
0,!,0
317,$calc,1190
390,->,1190
313,hasClass,1190
0,(,0
317,$subClassName,1190
0,),0
0,),0
397," ",1190
0,{,0
397,"
            ",1190
317,$calc,1191
390,->,1191
313,addClass,1191
0,(,0
317,$targetSubClass,1191
0,),0
0,;,0
397,"

            ",1191
317,$newNodes,1193
0,[,0
0,],0
397," ",1193
0,=,0
397," ",1193
317,$targetSubClass,1193
0,;,0
397,"
          ",1193
0,},0
397,"

          ",1194
317,$calc,1196
390,->,1196
313,addDependency,1196
0,(,0
317,$targetSubClass,1196
0,",",0
397," ",1196
317,$class,1196
0,),0
0,;,0
397,"
        ",1196
0,},0
397,"
      ",1197
0,},0
397,"
    ",1198
0,},0
397,"

    ",1199
350,return,1201
397," ",1201
317,$calc,1201
390,->,1201
313,getCommitOrder,1201
0,(,0
0,),0
0,;,0
397,"
  ",1201
0,},0
397,"

  ",1202
393,"/**
   * Schedules an entity for insertion into the database.
   * If the entity already has an identifier, it will be added to the identity map.
   *
   * @param object $entity The entity to schedule for insertion.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws \InvalidArgumentException
   */",1204
397,"
  ",1214
362,public,1215
397," ",1215
347,function,1215
397," ",1215
313,scheduleForInsert,1215
0,(,0
317,$entity,1215
0,),0
397,"
  ",1215
0,{,0
397,"
    ",1216
317,$oid,1217
397," ",1217
0,=,0
397," ",1217
313,spl_object_hash,1217
0,(,0
317,$entity,1217
0,),0
0,;,0
397,"

    ",1217
326,if,1219
397," ",1219
0,(,0
366,isset,1219
0,(,0
317,$this,1219
390,->,1219
313,entityUpdates,1219
0,[,0
317,$oid,1219
0,],0
0,),0
0,),0
397," ",1219
0,{,0
397,"
      ",1219
258,throw,1220
397," ",1220
324,new,1220
397," ",1220
313,InvalidArgumentException,1220
0,(,0
320,"""Dirty entity can not be scheduled for insertion.""",1220
0,),0
0,;,0
397,"
    ",1220
0,},0
397,"

    ",1221
326,if,1223
397," ",1223
0,(,0
366,isset,1223
0,(,0
317,$this,1223
390,->,1223
313,entityDeletions,1223
0,[,0
317,$oid,1223
0,],0
0,),0
0,),0
397," ",1223
0,{,0
397,"
      ",1223
258,throw,1224
397," ",1224
313,ORMInvalidArgumentException,1224
402,::,1224
313,scheduleInsertForRemovedEntity,1224
0,(,0
317,$entity,1224
0,),0
0,;,0
397,"
    ",1224
0,},0
397,"
    ",1225
326,if,1226
397," ",1226
0,(,0
366,isset,1226
0,(,0
317,$this,1226
390,->,1226
313,originalEntityData,1226
0,[,0
317,$oid,1226
0,],0
0,),0
397," ",1226
286,&&,1226
397," ",1226
0,!,0
366,isset,1226
0,(,0
317,$this,1226
390,->,1226
313,entityInsertions,1226
0,[,0
317,$oid,1226
0,],0
0,),0
0,),0
397," ",1226
0,{,0
397,"
      ",1226
258,throw,1227
397," ",1227
313,ORMInvalidArgumentException,1227
402,::,1227
313,scheduleInsertForManagedEntity,1227
0,(,0
317,$entity,1227
0,),0
0,;,0
397,"
    ",1227
0,},0
397,"

    ",1228
326,if,1230
397," ",1230
0,(,0
366,isset,1230
0,(,0
317,$this,1230
390,->,1230
313,entityInsertions,1230
0,[,0
317,$oid,1230
0,],0
0,),0
0,),0
397," ",1230
0,{,0
397,"
      ",1230
258,throw,1231
397," ",1231
313,ORMInvalidArgumentException,1231
402,::,1231
313,scheduleInsertTwice,1231
0,(,0
317,$entity,1231
0,),0
0,;,0
397,"
    ",1231
0,},0
397,"

    ",1232
317,$this,1234
390,->,1234
313,entityInsertions,1234
0,[,0
317,$oid,1234
0,],0
397," ",1234
0,=,0
397," ",1234
317,$entity,1234
0,;,0
397,"

    ",1234
326,if,1236
397," ",1236
0,(,0
366,isset,1236
0,(,0
317,$this,1236
390,->,1236
313,entityIdentifiers,1236
0,[,0
317,$oid,1236
0,],0
0,),0
0,),0
397," ",1236
0,{,0
397,"
      ",1236
317,$this,1237
390,->,1237
313,addToIdentityMap,1237
0,(,0
317,$entity,1237
0,),0
0,;,0
397,"
    ",1237
0,},0
397,"

    ",1238
326,if,1240
397," ",1240
0,(,0
317,$entity,1240
397," ",1240
298,instanceof,1240
397," ",1240
313,NotifyPropertyChanged,1240
0,),0
397," ",1240
0,{,0
397,"
      ",1240
317,$entity,1241
390,->,1241
313,addPropertyChangedListener,1241
0,(,0
317,$this,1241
0,),0
0,;,0
397,"
    ",1241
0,},0
397,"
  ",1242
0,},0
397,"

  ",1243
393,"/**
   * Checks whether an entity is scheduled for insertion.
   *
   * @param object $entity
   *
   * @return boolean
   */",1245
397,"
  ",1251
362,public,1252
397," ",1252
347,function,1252
397," ",1252
313,isScheduledForInsert,1252
0,(,0
317,$entity,1252
0,),0
397,"
  ",1252
0,{,0
397,"
    ",1253
350,return,1254
397," ",1254
366,isset,1254
0,(,0
317,$this,1254
390,->,1254
313,entityInsertions,1254
0,[,0
313,spl_object_hash,1254
0,(,0
317,$entity,1254
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1254
0,},0
397,"

  ",1255
393,"/**
   * Schedules an entity for being updated.
   *
   * @param object $entity The entity to schedule for being updated.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   */",1257
397,"
  ",1265
362,public,1266
397," ",1266
347,function,1266
397," ",1266
313,scheduleForUpdate,1266
0,(,0
317,$entity,1266
0,),0
397,"
  ",1266
0,{,0
397,"
    ",1267
317,$oid,1268
397," ",1268
0,=,0
397," ",1268
313,spl_object_hash,1268
0,(,0
317,$entity,1268
0,),0
0,;,0
397,"

    ",1268
326,if,1270
397," ",1270
0,(,0
0,!,0
366,isset,1270
0,(,0
317,$this,1270
390,->,1270
313,entityIdentifiers,1270
0,[,0
317,$oid,1270
0,],0
0,),0
0,),0
397," ",1270
0,{,0
397,"
      ",1270
258,throw,1271
397," ",1271
313,ORMInvalidArgumentException,1271
402,::,1271
313,entityHasNoIdentity,1271
0,(,0
317,$entity,1271
0,",",0
397," ",1271
320,"""scheduling for update""",1271
0,),0
0,;,0
397,"
    ",1271
0,},0
397,"

    ",1272
326,if,1274
397," ",1274
0,(,0
366,isset,1274
0,(,0
317,$this,1274
390,->,1274
313,entityDeletions,1274
0,[,0
317,$oid,1274
0,],0
0,),0
0,),0
397," ",1274
0,{,0
397,"
      ",1274
258,throw,1275
397," ",1275
313,ORMInvalidArgumentException,1275
402,::,1275
313,entityIsRemoved,1275
0,(,0
317,$entity,1275
0,",",0
397," ",1275
320,"""schedule for update""",1275
0,),0
0,;,0
397,"
    ",1275
0,},0
397,"

    ",1276
326,if,1278
397," ",1278
0,(,0
0,!,0
366,isset,1278
0,(,0
317,$this,1278
390,->,1278
313,entityUpdates,1278
0,[,0
317,$oid,1278
0,],0
0,),0
397," ",1278
286,&&,1278
397," ",1278
0,!,0
366,isset,1278
0,(,0
317,$this,1278
390,->,1278
313,entityInsertions,1278
0,[,0
317,$oid,1278
0,],0
0,),0
0,),0
397," ",1278
0,{,0
397,"
      ",1278
317,$this,1279
390,->,1279
313,entityUpdates,1279
0,[,0
317,$oid,1279
0,],0
397," ",1279
0,=,0
397," ",1279
317,$entity,1279
0,;,0
397,"
    ",1279
0,},0
397,"
  ",1280
0,},0
397,"

  ",1281
393,"/**
   * INTERNAL:
   * Schedules an extra update that will be executed immediately after the
   * regular entity updates within the currently running commit cycle.
   *
   * Extra updates for entities are stored as (entity, changeset) tuples.
   *
   * @param object $entity The entity for which to schedule an extra update.
   * @param array $changeset The changeset of the entity (what to update).
   *
   * @return void
   * @ignore
   *
   */",1283
397,"
  ",1296
362,public,1297
397," ",1297
347,function,1297
397," ",1297
313,scheduleExtraUpdate,1297
0,(,0
317,$entity,1297
0,",",0
397," ",1297
377,array,1297
397," ",1297
317,$changeset,1297
0,),0
397,"
  ",1297
0,{,0
397,"
    ",1298
317,$oid,1299
397," ",1299
0,=,0
397," ",1299
313,spl_object_hash,1299
0,(,0
317,$entity,1299
0,),0
0,;,0
397,"
    ",1299
317,$extraUpdate,1300
397," ",1300
0,=,0
397," ",1300
377,array,1300
0,(,0
317,$entity,1300
0,",",0
397," ",1300
317,$changeset,1300
0,),0
0,;,0
397,"

    ",1300
326,if,1302
397," ",1302
0,(,0
366,isset,1302
0,(,0
317,$this,1302
390,->,1302
313,extraUpdates,1302
0,[,0
317,$oid,1302
0,],0
0,),0
0,),0
397," ",1302
0,{,0
397,"
      ",1302
376,list,1303
0,(,0
317,$ignored,1303
0,",",0
397," ",1303
317,$changeset2,1303
0,),0
397," ",1303
0,=,0
397," ",1303
317,$this,1303
390,->,1303
313,extraUpdates,1303
0,[,0
317,$oid,1303
0,],0
0,;,0
397,"

      ",1303
317,$extraUpdate,1305
397," ",1305
0,=,0
397," ",1305
377,array,1305
0,(,0
317,$entity,1305
0,",",0
397," ",1305
317,$changeset,1305
397," ",1305
0,+,0
397," ",1305
317,$changeset2,1305
0,),0
0,;,0
397,"
    ",1305
0,},0
397,"

    ",1306
317,$this,1308
390,->,1308
313,extraUpdates,1308
0,[,0
317,$oid,1308
0,],0
397," ",1308
0,=,0
397," ",1308
317,$extraUpdate,1308
0,;,0
397,"
  ",1308
0,},0
397,"

  ",1309
393,"/**
   * Checks whether an entity is registered as dirty in the unit of work.
   * Note: Is not very useful currently as dirty entities are only registered
   * at commit time.
   *
   * @param object $entity
   *
   * @return boolean
   */",1311
397,"
  ",1319
362,public,1320
397," ",1320
347,function,1320
397," ",1320
313,isScheduledForUpdate,1320
0,(,0
317,$entity,1320
0,),0
397,"
  ",1320
0,{,0
397,"
    ",1321
350,return,1322
397," ",1322
366,isset,1322
0,(,0
317,$this,1322
390,->,1322
313,entityUpdates,1322
0,[,0
313,spl_object_hash,1322
0,(,0
317,$entity,1322
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1322
0,},0
397,"

  ",1323
393,"/**
   * Checks whether an entity is registered to be checked in the unit of work.
   *
   * @param object $entity
   *
   * @return boolean
   */",1325
397,"
  ",1331
362,public,1332
397," ",1332
347,function,1332
397," ",1332
313,isScheduledForDirtyCheck,1332
0,(,0
317,$entity,1332
0,),0
397,"
  ",1332
0,{,0
397,"
    ",1333
317,$rootEntityName,1334
397," ",1334
0,=,0
397," ",1334
317,$this,1334
390,->,1334
313,em,1334
390,->,1334
313,getClassMetadata,1334
0,(,0
313,get_class,1334
0,(,0
317,$entity,1334
0,),0
0,),0
390,->,1334
313,rootEntityName,1334
0,;,0
397,"

    ",1334
350,return,1336
397," ",1336
366,isset,1336
0,(,0
317,$this,1336
390,->,1336
313,scheduledForSynchronization,1336
0,[,0
317,$rootEntityName,1336
0,],0
0,[,0
313,spl_object_hash,1336
0,(,0
317,$entity,1336
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1336
0,},0
397,"

  ",1337
393,"/**
   * INTERNAL:
   * Schedules an entity for deletion.
   *
   * @param object $entity
   *
   * @return void
   */",1339
397,"
  ",1346
362,public,1347
397," ",1347
347,function,1347
397," ",1347
313,scheduleForDelete,1347
0,(,0
317,$entity,1347
0,),0
397,"
  ",1347
0,{,0
397,"
    ",1348
317,$oid,1349
397," ",1349
0,=,0
397," ",1349
313,spl_object_hash,1349
0,(,0
317,$entity,1349
0,),0
0,;,0
397,"

    ",1349
326,if,1351
397," ",1351
0,(,0
366,isset,1351
0,(,0
317,$this,1351
390,->,1351
313,entityInsertions,1351
0,[,0
317,$oid,1351
0,],0
0,),0
0,),0
397," ",1351
0,{,0
397,"
      ",1351
326,if,1352
397," ",1352
0,(,0
317,$this,1352
390,->,1352
313,isInIdentityMap,1352
0,(,0
317,$entity,1352
0,),0
0,),0
397," ",1352
0,{,0
397,"
        ",1352
317,$this,1353
390,->,1353
313,removeFromIdentityMap,1353
0,(,0
317,$entity,1353
0,),0
0,;,0
397,"
      ",1353
0,},0
397,"

      ",1354
365,unset,1356
0,(,0
317,$this,1356
390,->,1356
313,entityInsertions,1356
0,[,0
317,$oid,1356
0,],0
0,",",0
397," ",1356
317,$this,1356
390,->,1356
313,entityStates,1356
0,[,0
317,$oid,1356
0,],0
0,),0
0,;,0
397,"

      ",1356
350,return,1358
0,;,0
397," ",1358
392,"// entity has not been persisted yet, so nothing more to do.",1358
397,"
    ",1358
0,},0
397,"

    ",1359
326,if,1361
397," ",1361
0,(,0
0,!,0
317,$this,1361
390,->,1361
313,isInIdentityMap,1361
0,(,0
317,$entity,1361
0,),0
0,),0
397," ",1361
0,{,0
397,"
      ",1361
350,return,1362
0,;,0
397,"
    ",1362
0,},0
397,"

    ",1363
317,$this,1365
390,->,1365
313,removeFromIdentityMap,1365
0,(,0
317,$entity,1365
0,),0
0,;,0
397,"

    ",1365
326,if,1367
397," ",1367
0,(,0
366,isset,1367
0,(,0
317,$this,1367
390,->,1367
313,entityUpdates,1367
0,[,0
317,$oid,1367
0,],0
0,),0
0,),0
397," ",1367
0,{,0
397,"
      ",1367
365,unset,1368
0,(,0
317,$this,1368
390,->,1368
313,entityUpdates,1368
0,[,0
317,$oid,1368
0,],0
0,),0
0,;,0
397,"
    ",1368
0,},0
397,"

    ",1369
326,if,1371
397," ",1371
0,(,0
0,!,0
366,isset,1371
0,(,0
317,$this,1371
390,->,1371
313,entityDeletions,1371
0,[,0
317,$oid,1371
0,],0
0,),0
0,),0
397," ",1371
0,{,0
397,"
      ",1371
317,$this,1372
390,->,1372
313,entityDeletions,1372
0,[,0
317,$oid,1372
0,],0
397," ",1372
0,=,0
397," ",1372
317,$entity,1372
0,;,0
397,"
      ",1372
317,$this,1373
390,->,1373
313,entityStates,1373
0,[,0
317,$oid,1373
0,],0
397," ",1373
0,=,0
397," ",1373
313,self,1373
402,::,1373
313,STATE_REMOVED,1373
0,;,0
397,"
    ",1373
0,},0
397,"
  ",1374
0,},0
397,"

  ",1375
393,"/**
   * Checks whether an entity is registered as removed/deleted with the unit
   * of work.
   *
   * @param object $entity
   *
   * @return boolean
   */",1377
397,"
  ",1384
362,public,1385
397," ",1385
347,function,1385
397," ",1385
313,isScheduledForDelete,1385
0,(,0
317,$entity,1385
0,),0
397,"
  ",1385
0,{,0
397,"
    ",1386
350,return,1387
397," ",1387
366,isset,1387
0,(,0
317,$this,1387
390,->,1387
313,entityDeletions,1387
0,[,0
313,spl_object_hash,1387
0,(,0
317,$entity,1387
0,),0
0,],0
0,),0
0,;,0
397,"
  ",1387
0,},0
397,"

  ",1388
393,"/**
   * Checks whether an entity is scheduled for insertion, update or deletion.
   *
   * @param object $entity
   *
   * @return boolean
   */",1390
397,"
  ",1396
362,public,1397
397," ",1397
347,function,1397
397," ",1397
313,isEntityScheduled,1397
0,(,0
317,$entity,1397
0,),0
397,"
  ",1397
0,{,0
397,"
    ",1398
317,$oid,1399
397," ",1399
0,=,0
397," ",1399
313,spl_object_hash,1399
0,(,0
317,$entity,1399
0,),0
0,;,0
397,"

    ",1399
350,return,1401
397," ",1401
366,isset,1401
0,(,0
317,$this,1401
390,->,1401
313,entityInsertions,1401
0,[,0
317,$oid,1401
0,],0
0,),0
397,"
      ",1401
285,||,1402
397," ",1402
366,isset,1402
0,(,0
317,$this,1402
390,->,1402
313,entityUpdates,1402
0,[,0
317,$oid,1402
0,],0
0,),0
397,"
      ",1402
285,||,1403
397," ",1403
366,isset,1403
0,(,0
317,$this,1403
390,->,1403
313,entityDeletions,1403
0,[,0
317,$oid,1403
0,],0
0,),0
0,;,0
397,"
  ",1403
0,},0
397,"

  ",1404
393,"/**
   * INTERNAL:
   * Registers an entity in the identity map.
   * Note that entities in a hierarchy are registered with the class name of
   * the root entity.
   *
   * @param object $entity The entity to register.
   *
   * @return boolean TRUE if the registration was successful, FALSE if the identity of
   *                 the entity in question is already managed.
   *
   * @throws ORMInvalidArgumentException
   * @ignore
   *
   */",1406
397,"
  ",1420
362,public,1421
397," ",1421
347,function,1421
397," ",1421
313,addToIdentityMap,1421
0,(,0
317,$entity,1421
0,),0
397,"
  ",1421
0,{,0
397,"
    ",1422
317,$classMetadata,1423
397," ",1423
0,=,0
397," ",1423
317,$this,1423
390,->,1423
313,em,1423
390,->,1423
313,getClassMetadata,1423
0,(,0
313,get_class,1423
0,(,0
317,$entity,1423
0,),0
0,),0
0,;,0
397,"
    ",1423
317,$idHash,1424
397," ",1424
0,=,0
397," ",1424
313,implode,1424
0,(,0
320,"' '",1424
0,",",0
397," ",1424
317,$this,1424
390,->,1424
313,entityIdentifiers,1424
0,[,0
313,spl_object_hash,1424
0,(,0
317,$entity,1424
0,),0
0,],0
0,),0
0,;,0
397,"

    ",1424
326,if,1426
397," ",1426
0,(,0
317,$idHash,1426
397," ",1426
291,===,1426
397," ",1426
320,'',1426
0,),0
397," ",1426
0,{,0
397,"
      ",1426
258,throw,1427
397," ",1427
313,ORMInvalidArgumentException,1427
402,::,1427
313,entityWithoutIdentity,1427
0,(,0
317,$classMetadata,1427
390,->,1427
313,name,1427
0,",",0
397," ",1427
317,$entity,1427
0,),0
0,;,0
397,"
    ",1427
0,},0
397,"

    ",1428
317,$className,1430
397," ",1430
0,=,0
397," ",1430
317,$classMetadata,1430
390,->,1430
313,rootEntityName,1430
0,;,0
397,"

    ",1430
326,if,1432
397," ",1432
0,(,0
366,isset,1432
0,(,0
317,$this,1432
390,->,1432
313,identityMap,1432
0,[,0
317,$className,1432
0,],0
0,[,0
317,$idHash,1432
0,],0
0,),0
0,),0
397," ",1432
0,{,0
397,"
      ",1432
350,return,1433
397," ",1433
313,false,1433
0,;,0
397,"
    ",1433
0,},0
397,"

    ",1434
317,$this,1436
390,->,1436
313,identityMap,1436
0,[,0
317,$className,1436
0,],0
0,[,0
317,$idHash,1436
0,],0
397," ",1436
0,=,0
397," ",1436
317,$entity,1436
0,;,0
397,"

    ",1436
350,return,1438
397," ",1438
313,true,1438
0,;,0
397,"
  ",1438
0,},0
397,"

  ",1439
393,"/**
   * Gets the state of an entity with regard to the current unit of work.
   *
   * @param object $entity
   * @param int|null $assume The state to assume if the state is not yet known (not MANAGED or REMOVED).
   *                         This parameter can be set to improve performance of entity state detection
   *                         by potentially avoiding a database lookup if the distinction between NEW and DETACHED
   *                         is either known or does not matter for the caller of the method.
   *
   * @return int The entity state.
   */",1441
397,"
  ",1451
362,public,1452
397," ",1452
347,function,1452
397," ",1452
313,getEntityState,1452
0,(,0
317,$entity,1452
0,",",0
397," ",1452
317,$assume,1452
397," ",1452
0,=,0
397," ",1452
313,null,1452
0,),0
397,"
  ",1452
0,{,0
397,"
    ",1453
317,$oid,1454
397," ",1454
0,=,0
397," ",1454
313,spl_object_hash,1454
0,(,0
317,$entity,1454
0,),0
0,;,0
397,"

    ",1454
326,if,1456
397," ",1456
0,(,0
366,isset,1456
0,(,0
317,$this,1456
390,->,1456
313,entityStates,1456
0,[,0
317,$oid,1456
0,],0
0,),0
0,),0
397," ",1456
0,{,0
397,"
      ",1456
350,return,1457
397," ",1457
317,$this,1457
390,->,1457
313,entityStates,1457
0,[,0
317,$oid,1457
0,],0
0,;,0
397,"
    ",1457
0,},0
397,"

    ",1458
326,if,1460
397," ",1460
0,(,0
317,$assume,1460
397," ",1460
292,!==,1460
397," ",1460
313,null,1460
0,),0
397," ",1460
0,{,0
397,"
      ",1460
350,return,1461
397," ",1461
317,$assume,1461
0,;,0
397,"
    ",1461
0,},0
397,"

    ",1462
392,"// State can only be NEW or DETACHED, because MANAGED/REMOVED states are known.",1464
397,"
    ",1464
392,"// Note that you can not remember the NEW or DETACHED state in _entityStates since",1465
397,"
    ",1465
392,"// the UoW does not hold references to such objects and the object hash can be reused.",1466
397,"
    ",1466
392,"// More generally because the state may ""change"" between NEW/DETACHED without the UoW being aware of it.",1467
397,"
    ",1467
317,$class,1468
397," ",1468
0,=,0
397," ",1468
317,$this,1468
390,->,1468
313,em,1468
390,->,1468
313,getClassMetadata,1468
0,(,0
313,get_class,1468
0,(,0
317,$entity,1468
0,),0
0,),0
0,;,0
397,"
    ",1468
317,$id,1469
397," ",1469
0,=,0
397," ",1469
317,$class,1469
390,->,1469
313,getIdentifierValues,1469
0,(,0
317,$entity,1469
0,),0
0,;,0
397,"

    ",1469
326,if,1471
397," ",1471
0,(,0
0,!,0
317,$id,1471
0,),0
397," ",1471
0,{,0
397,"
      ",1471
350,return,1472
397," ",1472
313,self,1472
402,::,1472
313,STATE_NEW,1472
0,;,0
397,"
    ",1472
0,},0
397,"

    ",1473
326,if,1475
397," ",1475
0,(,0
317,$class,1475
390,->,1475
313,containsForeignIdentifier,1475
0,),0
397," ",1475
0,{,0
397,"
      ",1475
317,$id,1476
397," ",1476
0,=,0
397," ",1476
317,$this,1476
390,->,1476
313,identifierFlattener,1476
390,->,1476
313,flattenIdentifier,1476
0,(,0
317,$class,1476
0,",",0
397," ",1476
317,$id,1476
0,),0
0,;,0
397,"
    ",1476
0,},0
397,"

    ",1477
339,switch,1479
397," ",1479
0,(,0
313,true,1479
0,),0
397," ",1479
0,{,0
397,"
      ",1479
341,case,1480
397," ",1480
0,(,0
317,$class,1480
390,->,1480
313,isIdentifierNatural,1480
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",1480
392,"// Check for a version field, if available, to avoid a db lookup.",1481
397,"
        ",1481
326,if,1482
397," ",1482
0,(,0
317,$class,1482
390,->,1482
313,isVersioned,1482
0,),0
397," ",1482
0,{,0
397,"
          ",1482
350,return,1483
397," ",1483
0,(,0
317,$class,1483
390,->,1483
313,getFieldValue,1483
0,(,0
317,$entity,1483
0,",",0
397," ",1483
317,$class,1483
390,->,1483
313,versionField,1483
0,),0
0,),0
397,"
            ",1483
0,?,0
397," ",1484
313,self,1484
402,::,1484
313,STATE_DETACHED,1484
397,"
            ",1484
0,:,0
397," ",1485
313,self,1485
402,::,1485
313,STATE_NEW,1485
0,;,0
397,"
        ",1485
0,},0
397,"

        ",1486
392,"// Last try before db lookup: check the identity map.",1488
397,"
        ",1488
326,if,1489
397," ",1489
0,(,0
317,$this,1489
390,->,1489
313,tryGetById,1489
0,(,0
317,$id,1489
0,",",0
397," ",1489
317,$class,1489
390,->,1489
313,rootEntityName,1489
0,),0
0,),0
397," ",1489
0,{,0
397,"
          ",1489
350,return,1490
397," ",1490
313,self,1490
402,::,1490
313,STATE_DETACHED,1490
0,;,0
397,"
        ",1490
0,},0
397,"

        ",1491
392,"// db lookup",1493
397,"
        ",1493
326,if,1494
397," ",1494
0,(,0
317,$this,1494
390,->,1494
313,getEntityPersister,1494
0,(,0
317,$class,1494
390,->,1494
313,name,1494
0,),0
390,->,1494
313,exists,1494
0,(,0
317,$entity,1494
0,),0
0,),0
397," ",1494
0,{,0
397,"
          ",1494
350,return,1495
397," ",1495
313,self,1495
402,::,1495
313,STATE_DETACHED,1495
0,;,0
397,"
        ",1495
0,},0
397,"

        ",1496
350,return,1498
397," ",1498
313,self,1498
402,::,1498
313,STATE_NEW,1498
0,;,0
397,"

      ",1498
341,case,1500
397," ",1500
0,(,0
0,!,0
317,$class,1500
390,->,1500
313,idGenerator,1500
390,->,1500
313,isPostInsertGenerator,1500
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",1500
392,"// if we have a pre insert generator we can't be sure that having an id",1501
397,"
        ",1501
392,"// really means that the entity exists. We have to verify this through",1502
397,"
        ",1502
392,"// the last resort: a db lookup",1503
397,"

        ",1503
392,"// Last try before db lookup: check the identity map.",1505
397,"
        ",1505
326,if,1506
397," ",1506
0,(,0
317,$this,1506
390,->,1506
313,tryGetById,1506
0,(,0
317,$id,1506
0,",",0
397," ",1506
317,$class,1506
390,->,1506
313,rootEntityName,1506
0,),0
0,),0
397," ",1506
0,{,0
397,"
          ",1506
350,return,1507
397," ",1507
313,self,1507
402,::,1507
313,STATE_DETACHED,1507
0,;,0
397,"
        ",1507
0,},0
397,"

        ",1508
392,"// db lookup",1510
397,"
        ",1510
326,if,1511
397," ",1511
0,(,0
317,$this,1511
390,->,1511
313,getEntityPersister,1511
0,(,0
317,$class,1511
390,->,1511
313,name,1511
0,),0
390,->,1511
313,exists,1511
0,(,0
317,$entity,1511
0,),0
0,),0
397," ",1511
0,{,0
397,"
          ",1511
350,return,1512
397," ",1512
313,self,1512
402,::,1512
313,STATE_DETACHED,1512
0,;,0
397,"
        ",1512
0,},0
397,"

        ",1513
350,return,1515
397," ",1515
313,self,1515
402,::,1515
313,STATE_NEW,1515
0,;,0
397,"

      ",1515
342,default,1517
0,:,0
397,"
        ",1517
350,return,1518
397," ",1518
313,self,1518
402,::,1518
313,STATE_DETACHED,1518
0,;,0
397,"
    ",1518
0,},0
397,"
  ",1519
0,},0
397,"

  ",1520
393,"/**
   * INTERNAL:
   * Removes an entity from the identity map. This effectively detaches the
   * entity from the persistence management of Doctrine.
   *
   * @param object $entity
   *
   * @return boolean
   *
   * @throws ORMInvalidArgumentException
   * @ignore
   *
   */",1522
397,"
  ",1534
362,public,1535
397," ",1535
347,function,1535
397," ",1535
313,removeFromIdentityMap,1535
0,(,0
317,$entity,1535
0,),0
397,"
  ",1535
0,{,0
397,"
    ",1536
317,$oid,1537
397," ",1537
0,=,0
397," ",1537
313,spl_object_hash,1537
0,(,0
317,$entity,1537
0,),0
0,;,0
397,"
    ",1537
317,$classMetadata,1538
397," ",1538
0,=,0
397," ",1538
317,$this,1538
390,->,1538
313,em,1538
390,->,1538
313,getClassMetadata,1538
0,(,0
313,get_class,1538
0,(,0
317,$entity,1538
0,),0
0,),0
0,;,0
397,"
    ",1538
317,$idHash,1539
397," ",1539
0,=,0
397," ",1539
313,implode,1539
0,(,0
320,"' '",1539
0,",",0
397," ",1539
317,$this,1539
390,->,1539
313,entityIdentifiers,1539
0,[,0
317,$oid,1539
0,],0
0,),0
0,;,0
397,"

    ",1539
326,if,1541
397," ",1541
0,(,0
317,$idHash,1541
397," ",1541
291,===,1541
397," ",1541
320,'',1541
0,),0
397," ",1541
0,{,0
397,"
      ",1541
258,throw,1542
397," ",1542
313,ORMInvalidArgumentException,1542
402,::,1542
313,entityHasNoIdentity,1542
0,(,0
317,$entity,1542
0,",",0
397," ",1542
320,"""remove from identity map""",1542
0,),0
0,;,0
397,"
    ",1542
0,},0
397,"

    ",1543
317,$className,1545
397," ",1545
0,=,0
397," ",1545
317,$classMetadata,1545
390,->,1545
313,rootEntityName,1545
0,;,0
397,"

    ",1545
326,if,1547
397," ",1547
0,(,0
366,isset,1547
0,(,0
317,$this,1547
390,->,1547
313,identityMap,1547
0,[,0
317,$className,1547
0,],0
0,[,0
317,$idHash,1547
0,],0
0,),0
0,),0
397," ",1547
0,{,0
397,"
      ",1547
365,unset,1548
0,(,0
317,$this,1548
390,->,1548
313,identityMap,1548
0,[,0
317,$className,1548
0,],0
0,[,0
317,$idHash,1548
0,],0
0,),0
0,;,0
397,"
      ",1548
365,unset,1549
0,(,0
317,$this,1549
390,->,1549
313,readOnlyObjects,1549
0,[,0
317,$oid,1549
0,],0
0,),0
0,;,0
397,"

      ",1549
392,"//$this->entityStates[$oid] = self::STATE_DETACHED;",1551
397,"

      ",1551
350,return,1553
397," ",1553
313,true,1553
0,;,0
397,"
    ",1553
0,},0
397,"

    ",1554
350,return,1556
397," ",1556
313,false,1556
0,;,0
397,"
  ",1556
0,},0
397,"

  ",1557
393,"/**
   * INTERNAL:
   * Gets an entity in the identity map by its identifier hash.
   *
   * @param string $idHash
   * @param string $rootClassName
   *
   * @return object
   * @ignore
   *
   */",1559
397,"
  ",1569
362,public,1570
397," ",1570
347,function,1570
397," ",1570
313,getByIdHash,1570
0,(,0
317,$idHash,1570
0,",",0
397," ",1570
317,$rootClassName,1570
0,),0
397,"
  ",1570
0,{,0
397,"
    ",1571
350,return,1572
397," ",1572
317,$this,1572
390,->,1572
313,identityMap,1572
0,[,0
317,$rootClassName,1572
0,],0
0,[,0
317,$idHash,1572
0,],0
0,;,0
397,"
  ",1572
0,},0
397,"

  ",1573
393,"/**
   * INTERNAL:
   * Tries to get an entity by its identifier hash. If no entity is found for
   * the given hash, FALSE is returned.
   *
   * @param mixed $idHash (must be possible to cast it to string)
   * @param string $rootClassName
   *
   * @return object|bool The found entity or FALSE.
   * @ignore
   *
   */",1575
397,"
  ",1586
362,public,1587
397," ",1587
347,function,1587
397," ",1587
313,tryGetByIdHash,1587
0,(,0
317,$idHash,1587
0,",",0
397," ",1587
317,$rootClassName,1587
0,),0
397,"
  ",1587
0,{,0
397,"
    ",1588
317,$stringIdHash,1589
397," ",1589
0,=,0
397," ",1589
301,(string),1589
397," ",1589
317,$idHash,1589
0,;,0
397,"

    ",1589
326,if,1591
397," ",1591
0,(,0
366,isset,1591
0,(,0
317,$this,1591
390,->,1591
313,identityMap,1591
0,[,0
317,$rootClassName,1591
0,],0
0,[,0
317,$stringIdHash,1591
0,],0
0,),0
0,),0
397," ",1591
0,{,0
397,"
      ",1591
350,return,1592
397," ",1592
317,$this,1592
390,->,1592
313,identityMap,1592
0,[,0
317,$rootClassName,1592
0,],0
0,[,0
317,$stringIdHash,1592
0,],0
0,;,0
397,"
    ",1592
0,},0
397,"

    ",1593
350,return,1595
397," ",1595
313,false,1595
0,;,0
397,"
  ",1595
0,},0
397,"

  ",1596
393,"/**
   * Checks whether an entity is registered in the identity map of this UnitOfWork.
   *
   * @param object $entity
   *
   * @return boolean
   */",1598
397,"
  ",1604
362,public,1605
397," ",1605
347,function,1605
397," ",1605
313,isInIdentityMap,1605
0,(,0
317,$entity,1605
0,),0
397,"
  ",1605
0,{,0
397,"
    ",1606
317,$oid,1607
397," ",1607
0,=,0
397," ",1607
313,spl_object_hash,1607
0,(,0
317,$entity,1607
0,),0
0,;,0
397,"

    ",1607
326,if,1609
397," ",1609
0,(,0
0,!,0
366,isset,1609
0,(,0
317,$this,1609
390,->,1609
313,entityIdentifiers,1609
0,[,0
317,$oid,1609
0,],0
0,),0
0,),0
397," ",1609
0,{,0
397,"
      ",1609
350,return,1610
397," ",1610
313,false,1610
0,;,0
397,"
    ",1610
0,},0
397,"

    ",1611
317,$classMetadata,1613
397," ",1613
0,=,0
397," ",1613
317,$this,1613
390,->,1613
313,em,1613
390,->,1613
313,getClassMetadata,1613
0,(,0
313,get_class,1613
0,(,0
317,$entity,1613
0,),0
0,),0
0,;,0
397,"
    ",1613
317,$idHash,1614
397," ",1614
0,=,0
397," ",1614
313,implode,1614
0,(,0
320,"' '",1614
0,",",0
397," ",1614
317,$this,1614
390,->,1614
313,entityIdentifiers,1614
0,[,0
317,$oid,1614
0,],0
0,),0
0,;,0
397,"

    ",1614
326,if,1616
397," ",1616
0,(,0
317,$idHash,1616
397," ",1616
291,===,1616
397," ",1616
320,'',1616
0,),0
397," ",1616
0,{,0
397,"
      ",1616
350,return,1617
397," ",1617
313,false,1617
0,;,0
397,"
    ",1617
0,},0
397,"

    ",1618
350,return,1620
397," ",1620
366,isset,1620
0,(,0
317,$this,1620
390,->,1620
313,identityMap,1620
0,[,0
317,$classMetadata,1620
390,->,1620
313,rootEntityName,1620
0,],0
0,[,0
317,$idHash,1620
0,],0
0,),0
0,;,0
397,"
  ",1620
0,},0
397,"

  ",1621
393,"/**
   * INTERNAL:
   * Checks whether an identifier hash exists in the identity map.
   *
   * @param string $idHash
   * @param string $rootClassName
   *
   * @return boolean
   * @ignore
   *
   */",1623
397,"
  ",1633
362,public,1634
397," ",1634
347,function,1634
397," ",1634
313,containsIdHash,1634
0,(,0
317,$idHash,1634
0,",",0
397," ",1634
317,$rootClassName,1634
0,),0
397,"
  ",1634
0,{,0
397,"
    ",1635
350,return,1636
397," ",1636
366,isset,1636
0,(,0
317,$this,1636
390,->,1636
313,identityMap,1636
0,[,0
317,$rootClassName,1636
0,],0
0,[,0
317,$idHash,1636
0,],0
0,),0
0,;,0
397,"
  ",1636
0,},0
397,"

  ",1637
393,"/**
   * Persists an entity as part of the current unit of work.
   *
   * @param object $entity The entity to persist.
   *
   * @return void
   */",1639
397,"
  ",1645
362,public,1646
397," ",1646
347,function,1646
397," ",1646
313,persist,1646
0,(,0
317,$entity,1646
0,),0
397,"
  ",1646
0,{,0
397,"
    ",1647
317,$visited,1648
397," ",1648
0,=,0
397," ",1648
377,array,1648
0,(,0
0,),0
0,;,0
397,"

    ",1648
317,$this,1650
390,->,1650
313,doPersist,1650
0,(,0
317,$entity,1650
0,",",0
397," ",1650
317,$visited,1650
0,),0
0,;,0
397,"
  ",1650
0,},0
397,"

  ",1651
393,"/**
   * Persists an entity as part of the current unit of work.
   *
   * This method is internally called during persist() cascades as it tracks
   * the already visited entities to prevent infinite recursions.
   *
   * @param object $entity The entity to persist.
   * @param array $visited The already visited entities.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws UnexpectedValueException
   */",1653
397,"
  ",1666
360,private,1667
397," ",1667
347,function,1667
397," ",1667
313,doPersist,1667
0,(,0
317,$entity,1667
0,",",0
397," ",1667
377,array,1667
397," ",1667
288,&,1667
317,$visited,1667
0,),0
397,"
  ",1667
0,{,0
397,"
    ",1668
317,$oid,1669
397," ",1669
0,=,0
397," ",1669
313,spl_object_hash,1669
0,(,0
317,$entity,1669
0,),0
0,;,0
397,"

    ",1669
326,if,1671
397," ",1671
0,(,0
366,isset,1671
0,(,0
317,$visited,1671
0,[,0
317,$oid,1671
0,],0
0,),0
0,),0
397," ",1671
0,{,0
397,"
      ",1671
350,return,1672
0,;,0
397," ",1672
392,"// Prevent infinite recursion",1672
397,"
    ",1672
0,},0
397,"

    ",1673
317,$visited,1675
0,[,0
317,$oid,1675
0,],0
397," ",1675
0,=,0
397," ",1675
317,$entity,1675
0,;,0
397," ",1675
392,"// Mark visited",1675
397,"

    ",1675
317,$class,1677
397," ",1677
0,=,0
397," ",1677
317,$this,1677
390,->,1677
313,em,1677
390,->,1677
313,getClassMetadata,1677
0,(,0
313,get_class,1677
0,(,0
317,$entity,1677
0,),0
0,),0
0,;,0
397,"

    ",1677
392,"// We assume NEW, so DETACHED entities result in an exception on flush (constraint violation).",1679
397,"
    ",1679
392,"// If we would detect DETACHED here we would throw an exception anyway with the same",1680
397,"
    ",1680
392,"// consequences (not recoverable/programming error), so just assuming NEW here",1681
397,"
    ",1681
392,"// lets us avoid some database lookups for entities with natural identifiers.",1682
397,"
    ",1682
317,$entityState,1683
397," ",1683
0,=,0
397," ",1683
317,$this,1683
390,->,1683
313,getEntityState,1683
0,(,0
317,$entity,1683
0,",",0
397," ",1683
313,self,1683
402,::,1683
313,STATE_NEW,1683
0,),0
0,;,0
397,"

    ",1683
339,switch,1685
397," ",1685
0,(,0
317,$entityState,1685
0,),0
397," ",1685
0,{,0
397,"
      ",1685
341,case,1686
397," ",1686
313,self,1686
402,::,1686
313,STATE_MANAGED,1686
0,:,0
397,"
        ",1686
392,"// Nothing to do, except if policy is ""deferred explicit""",1687
397,"
        ",1687
326,if,1688
397," ",1688
0,(,0
317,$class,1688
390,->,1688
313,isChangeTrackingDeferredExplicit,1688
0,(,0
0,),0
0,),0
397," ",1688
0,{,0
397,"
          ",1688
317,$this,1689
390,->,1689
313,scheduleForDirtyCheck,1689
0,(,0
317,$entity,1689
0,),0
0,;,0
397,"
        ",1689
0,},0
397,"
        ",1690
344,break,1691
0,;,0
397,"

      ",1691
341,case,1693
397," ",1693
313,self,1693
402,::,1693
313,STATE_NEW,1693
0,:,0
397,"
        ",1693
317,$this,1694
390,->,1694
313,persistNew,1694
0,(,0
317,$class,1694
0,",",0
397," ",1694
317,$entity,1694
0,),0
0,;,0
397,"
        ",1694
344,break,1695
0,;,0
397,"

      ",1695
341,case,1697
397," ",1697
313,self,1697
402,::,1697
313,STATE_REMOVED,1697
0,:,0
397,"
        ",1697
392,"// Entity becomes managed again",1698
397,"
        ",1698
365,unset,1699
0,(,0
317,$this,1699
390,->,1699
313,entityDeletions,1699
0,[,0
317,$oid,1699
0,],0
0,),0
0,;,0
397,"
        ",1699
317,$this,1700
390,->,1700
313,addToIdentityMap,1700
0,(,0
317,$entity,1700
0,),0
0,;,0
397,"

        ",1700
317,$this,1702
390,->,1702
313,entityStates,1702
0,[,0
317,$oid,1702
0,],0
397," ",1702
0,=,0
397," ",1702
313,self,1702
402,::,1702
313,STATE_MANAGED,1702
0,;,0
397,"
        ",1702
344,break,1703
0,;,0
397,"

      ",1703
341,case,1705
397," ",1705
313,self,1705
402,::,1705
313,STATE_DETACHED,1705
0,:,0
397,"
        ",1705
392,"// Can actually not happen right now since we assume STATE_NEW.",1706
397,"
        ",1706
258,throw,1707
397," ",1707
313,ORMInvalidArgumentException,1707
402,::,1707
313,detachedEntityCannot,1707
0,(,0
317,$entity,1707
0,",",0
397," ",1707
320,"""persisted""",1707
0,),0
0,;,0
397,"

      ",1707
342,default,1709
0,:,0
397,"
        ",1709
258,throw,1710
397," ",1710
324,new,1710
397," ",1710
313,UnexpectedValueException,1710
0,(,0
0,"""",0
319,"Unexpected entity state: ",1710
317,$entityState,1710
319,.,1710
0,"""",0
397," ",1710
0,.,0
397," ",1710
313,self,1710
402,::,1710
313,objToStr,1710
0,(,0
317,$entity,1710
0,),0
0,),0
0,;,0
397,"
    ",1710
0,},0
397,"

    ",1711
317,$this,1713
390,->,1713
313,cascadePersist,1713
0,(,0
317,$entity,1713
0,",",0
397," ",1713
317,$visited,1713
0,),0
0,;,0
397,"
  ",1713
0,},0
397,"

  ",1714
393,"/**
   * Deletes an entity as part of the current unit of work.
   *
   * @param object $entity The entity to remove.
   *
   * @return void
   */",1716
397,"
  ",1722
362,public,1723
397," ",1723
347,function,1723
397," ",1723
313,remove,1723
0,(,0
317,$entity,1723
0,),0
397,"
  ",1723
0,{,0
397,"
    ",1724
317,$visited,1725
397," ",1725
0,=,0
397," ",1725
377,array,1725
0,(,0
0,),0
0,;,0
397,"

    ",1725
317,$this,1727
390,->,1727
313,doRemove,1727
0,(,0
317,$entity,1727
0,",",0
397," ",1727
317,$visited,1727
0,),0
0,;,0
397,"
  ",1727
0,},0
397,"

  ",1728
393,"/**
   * Deletes an entity as part of the current unit of work.
   *
   * This method is internally called during delete() cascades as it tracks
   * the already visited entities to prevent infinite recursions.
   *
   * @param object $entity The entity to delete.
   * @param array $visited The map of the already visited entities.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the instance is a detached entity.
   * @throws UnexpectedValueException
   */",1730
397,"
  ",1743
360,private,1744
397," ",1744
347,function,1744
397," ",1744
313,doRemove,1744
0,(,0
317,$entity,1744
0,",",0
397," ",1744
377,array,1744
397," ",1744
288,&,1744
317,$visited,1744
0,),0
397,"
  ",1744
0,{,0
397,"
    ",1745
317,$oid,1746
397," ",1746
0,=,0
397," ",1746
313,spl_object_hash,1746
0,(,0
317,$entity,1746
0,),0
0,;,0
397,"

    ",1746
326,if,1748
397," ",1748
0,(,0
366,isset,1748
0,(,0
317,$visited,1748
0,[,0
317,$oid,1748
0,],0
0,),0
0,),0
397," ",1748
0,{,0
397,"
      ",1748
350,return,1749
0,;,0
397," ",1749
392,"// Prevent infinite recursion",1749
397,"
    ",1749
0,},0
397,"

    ",1750
317,$visited,1752
0,[,0
317,$oid,1752
0,],0
397," ",1752
0,=,0
397," ",1752
317,$entity,1752
0,;,0
397," ",1752
392,"// mark visited",1752
397,"

    ",1752
392,"// Cascade first, because scheduleForDelete() removes the entity from the identity map, which",1754
397,"
    ",1754
392,"// can cause problems when a lazy proxy has to be initialized for the cascade operation.",1755
397,"
    ",1755
317,$this,1756
390,->,1756
313,cascadeRemove,1756
0,(,0
317,$entity,1756
0,",",0
397," ",1756
317,$visited,1756
0,),0
0,;,0
397,"

    ",1756
317,$class,1758
397," ",1758
0,=,0
397," ",1758
317,$this,1758
390,->,1758
313,em,1758
390,->,1758
313,getClassMetadata,1758
0,(,0
313,get_class,1758
0,(,0
317,$entity,1758
0,),0
0,),0
0,;,0
397,"
    ",1758
317,$entityState,1759
397," ",1759
0,=,0
397," ",1759
317,$this,1759
390,->,1759
313,getEntityState,1759
0,(,0
317,$entity,1759
0,),0
0,;,0
397,"

    ",1759
339,switch,1761
397," ",1761
0,(,0
317,$entityState,1761
0,),0
397," ",1761
0,{,0
397,"
      ",1761
341,case,1762
397," ",1762
313,self,1762
402,::,1762
313,STATE_NEW,1762
0,:,0
397,"
      ",1762
341,case,1763
397," ",1763
313,self,1763
402,::,1763
313,STATE_REMOVED,1763
0,:,0
397,"
        ",1763
392,"// nothing to do",1764
397,"
        ",1764
344,break,1765
0,;,0
397,"

      ",1765
341,case,1767
397," ",1767
313,self,1767
402,::,1767
313,STATE_MANAGED,1767
0,:,0
397,"
        ",1767
317,$invoke,1768
397," ",1768
0,=,0
397," ",1768
317,$this,1768
390,->,1768
313,listenersInvoker,1768
390,->,1768
313,getSubscribedSystems,1768
0,(,0
317,$class,1768
0,",",0
397," ",1768
313,Events,1768
402,::,1768
313,preRemove,1768
0,),0
0,;,0
397,"

        ",1768
326,if,1770
397," ",1770
0,(,0
317,$invoke,1770
397," ",1770
292,!==,1770
397," ",1770
313,ListenersInvoker,1770
402,::,1770
313,INVOKE_NONE,1770
0,),0
397," ",1770
0,{,0
397,"
          ",1770
317,$this,1771
390,->,1771
313,listenersInvoker,1771
390,->,1771
313,invoke,1771
0,(,0
317,$class,1771
0,",",0
397," ",1771
313,Events,1771
402,::,1771
313,preRemove,1771
0,",",0
397," ",1771
317,$entity,1771
0,",",0
397,"
            ",1771
324,new,1772
397," ",1772
313,LifecycleEventArgs,1772
0,(,0
317,$entity,1772
0,",",0
397," ",1772
317,$this,1772
390,->,1772
313,em,1772
0,),0
0,",",0
397," ",1772
317,$invoke,1772
0,),0
0,;,0
397,"
        ",1772
0,},0
397,"

        ",1773
317,$this,1775
390,->,1775
313,scheduleForDelete,1775
0,(,0
317,$entity,1775
0,),0
0,;,0
397,"
        ",1775
344,break,1776
0,;,0
397,"

      ",1776
341,case,1778
397," ",1778
313,self,1778
402,::,1778
313,STATE_DETACHED,1778
0,:,0
397,"
        ",1778
258,throw,1779
397," ",1779
313,ORMInvalidArgumentException,1779
402,::,1779
313,detachedEntityCannot,1779
0,(,0
317,$entity,1779
0,",",0
397," ",1779
320,"""removed""",1779
0,),0
0,;,0
397,"
      ",1779
342,default,1780
0,:,0
397,"
        ",1780
258,throw,1781
397," ",1781
324,new,1781
397," ",1781
313,UnexpectedValueException,1781
0,(,0
0,"""",0
319,"Unexpected entity state: ",1781
317,$entityState,1781
319,.,1781
0,"""",0
397," ",1781
0,.,0
397," ",1781
313,self,1781
402,::,1781
313,objToStr,1781
0,(,0
317,$entity,1781
0,),0
0,),0
0,;,0
397,"
    ",1781
0,},0
397,"

  ",1782
0,},0
397,"

  ",1784
393,"/**
   * Merges the state of the given detached entity into this UnitOfWork.
   *
   * @param object $entity
   *
   * @return object The managed copy of the entity.
   *
   * @throws OptimisticLockException If the entity uses optimistic locking through a version
   *         attribute and the version check against the managed copy fails.
   *
   * @todo Require active transaction!? OptimisticLockException may result in undefined state!?
   */",1786
397,"
  ",1797
362,public,1798
397," ",1798
347,function,1798
397," ",1798
313,merge,1798
0,(,0
317,$entity,1798
0,),0
397,"
  ",1798
0,{,0
397,"
    ",1799
317,$visited,1800
397," ",1800
0,=,0
397," ",1800
377,array,1800
0,(,0
0,),0
0,;,0
397,"

    ",1800
350,return,1802
397," ",1802
317,$this,1802
390,->,1802
313,doMerge,1802
0,(,0
317,$entity,1802
0,",",0
397," ",1802
317,$visited,1802
0,),0
0,;,0
397,"
  ",1802
0,},0
397,"

  ",1803
393,"/**
   * Executes a merge operation on an entity.
   *
   * @param object $entity
   * @param array $visited
   * @param object|null $prevManagedCopy
   * @param array|null $assoc
   *
   * @return object The managed copy of the entity.
   *
   * @throws OptimisticLockException If the entity uses optimistic locking through a version
   *         attribute and the version check against the managed copy fails.
   * @throws ORMInvalidArgumentException If the entity instance is NEW.
   * @throws EntityNotFoundException
   */",1805
397,"
  ",1819
360,private,1820
397," ",1820
347,function,1820
397," ",1820
313,doMerge,1820
0,(,0
317,$entity,1820
0,",",0
397," ",1820
377,array,1820
397," ",1820
288,&,1820
317,$visited,1820
0,",",0
397," ",1820
317,$prevManagedCopy,1820
397," ",1820
0,=,0
397," ",1820
313,null,1820
0,",",0
397," ",1820
317,$assoc,1820
397," ",1820
0,=,0
397," ",1820
313,null,1820
0,),0
397,"
  ",1820
0,{,0
397,"
    ",1821
317,$oid,1822
397," ",1822
0,=,0
397," ",1822
313,spl_object_hash,1822
0,(,0
317,$entity,1822
0,),0
0,;,0
397,"

    ",1822
326,if,1824
397," ",1824
0,(,0
366,isset,1824
0,(,0
317,$visited,1824
0,[,0
317,$oid,1824
0,],0
0,),0
0,),0
397," ",1824
0,{,0
397,"
      ",1824
317,$managedCopy,1825
397," ",1825
0,=,0
397," ",1825
317,$visited,1825
0,[,0
317,$oid,1825
0,],0
0,;,0
397,"

      ",1825
326,if,1827
397," ",1827
0,(,0
317,$prevManagedCopy,1827
397," ",1827
292,!==,1827
397," ",1827
313,null,1827
0,),0
397," ",1827
0,{,0
397,"
        ",1827
317,$this,1828
390,->,1828
313,updateAssociationWithMergedEntity,1828
0,(,0
317,$entity,1828
0,",",0
397," ",1828
317,$assoc,1828
0,",",0
397," ",1828
317,$prevManagedCopy,1828
0,",",0
397," ",1828
317,$managedCopy,1828
0,),0
0,;,0
397,"
      ",1828
0,},0
397,"

      ",1829
350,return,1831
397," ",1831
317,$managedCopy,1831
0,;,0
397,"
    ",1831
0,},0
397,"

    ",1832
317,$class,1834
397," ",1834
0,=,0
397," ",1834
317,$this,1834
390,->,1834
313,em,1834
390,->,1834
313,getClassMetadata,1834
0,(,0
313,get_class,1834
0,(,0
317,$entity,1834
0,),0
0,),0
0,;,0
397,"

    ",1834
392,"// First we assume DETACHED, although it can still be NEW but we can avoid",1836
397,"
    ",1836
392,"// an extra db-roundtrip this way. If it is not MANAGED but has an identity,",1837
397,"
    ",1837
392,"// we need to fetch it from the db anyway in order to merge.",1838
397,"
    ",1838
392,"// MANAGED entities are ignored by the merge operation.",1839
397,"
    ",1839
317,$managedCopy,1840
397," ",1840
0,=,0
397," ",1840
317,$entity,1840
0,;,0
397,"

    ",1840
326,if,1842
397," ",1842
0,(,0
317,$this,1842
390,->,1842
313,getEntityState,1842
0,(,0
317,$entity,1842
0,",",0
397," ",1842
313,self,1842
402,::,1842
313,STATE_DETACHED,1842
0,),0
397," ",1842
292,!==,1842
397," ",1842
313,self,1842
402,::,1842
313,STATE_MANAGED,1842
0,),0
397," ",1842
0,{,0
397,"
      ",1842
392,"// Try to look the entity up in the identity map.",1843
397,"
      ",1843
317,$id,1844
397," ",1844
0,=,0
397," ",1844
317,$class,1844
390,->,1844
313,getIdentifierValues,1844
0,(,0
317,$entity,1844
0,),0
0,;,0
397,"

      ",1844
392,"// If there is no ID, it is actually NEW.",1846
397,"
      ",1846
326,if,1847
397," ",1847
0,(,0
0,!,0
317,$id,1847
0,),0
397," ",1847
0,{,0
397,"
        ",1847
317,$managedCopy,1848
397," ",1848
0,=,0
397," ",1848
317,$this,1848
390,->,1848
313,newInstance,1848
0,(,0
317,$class,1848
0,),0
0,;,0
397,"

        ",1848
317,$this,1850
390,->,1850
313,persistNew,1850
0,(,0
317,$class,1850
0,",",0
397," ",1850
317,$managedCopy,1850
0,),0
0,;,0
397,"
      ",1850
0,},0
397," ",1851
310,else,1851
397," ",1851
0,{,0
397,"
        ",1851
317,$flatId,1852
397," ",1852
0,=,0
397," ",1852
0,(,0
317,$class,1852
390,->,1852
313,containsForeignIdentifier,1852
0,),0
397,"
          ",1852
0,?,0
397," ",1853
317,$this,1853
390,->,1853
313,identifierFlattener,1853
390,->,1853
313,flattenIdentifier,1853
0,(,0
317,$class,1853
0,",",0
397," ",1853
317,$id,1853
0,),0
397,"
          ",1853
0,:,0
397," ",1854
317,$id,1854
0,;,0
397,"

        ",1854
317,$managedCopy,1856
397," ",1856
0,=,0
397," ",1856
317,$this,1856
390,->,1856
313,tryGetById,1856
0,(,0
317,$flatId,1856
0,",",0
397," ",1856
317,$class,1856
390,->,1856
313,rootEntityName,1856
0,),0
0,;,0
397,"

        ",1856
326,if,1858
397," ",1858
0,(,0
317,$managedCopy,1858
0,),0
397," ",1858
0,{,0
397,"
          ",1858
392,"// We have the entity in-memory already, just make sure its not removed.",1859
397,"
          ",1859
326,if,1860
397," ",1860
0,(,0
317,$this,1860
390,->,1860
313,getEntityState,1860
0,(,0
317,$managedCopy,1860
0,),0
397," ",1860
289,==,1860
397," ",1860
313,self,1860
402,::,1860
313,STATE_REMOVED,1860
0,),0
397," ",1860
0,{,0
397,"
            ",1860
258,throw,1861
397," ",1861
313,ORMInvalidArgumentException,1861
402,::,1861
313,entityIsRemoved,1861
0,(,0
317,$managedCopy,1861
0,",",0
397," ",1861
320,"""merge""",1861
0,),0
0,;,0
397,"
          ",1861
0,},0
397,"
        ",1862
0,},0
397," ",1863
310,else,1863
397," ",1863
0,{,0
397,"
          ",1863
392,"// We need to fetch the managed copy in order to merge.",1864
397,"
          ",1864
317,$managedCopy,1865
397," ",1865
0,=,0
397," ",1865
317,$this,1865
390,->,1865
313,em,1865
390,->,1865
313,find,1865
0,(,0
317,$class,1865
390,->,1865
313,name,1865
0,",",0
397," ",1865
317,$flatId,1865
0,),0
0,;,0
397,"
        ",1865
0,},0
397,"

        ",1866
326,if,1868
397," ",1868
0,(,0
317,$managedCopy,1868
397," ",1868
291,===,1868
397," ",1868
313,null,1868
0,),0
397," ",1868
0,{,0
397,"
          ",1868
392,"// If the identifier is ASSIGNED, it is NEW, otherwise an error",1869
397,"
          ",1869
392,"// since the managed entity was not found.",1870
397,"
          ",1870
326,if,1871
397," ",1871
0,(,0
0,!,0
317,$class,1871
390,->,1871
313,isIdentifierNatural,1871
0,(,0
0,),0
0,),0
397," ",1871
0,{,0
397,"
            ",1871
258,throw,1872
397," ",1872
313,EntityNotFoundException,1872
402,::,1872
313,fromClassNameAndIdentifier,1872
0,(,0
397,"
              ",1872
317,$class,1873
390,->,1873
313,getName,1873
0,(,0
0,),0
0,",",0
397,"
              ",1873
317,$this,1874
390,->,1874
313,identifierFlattener,1874
390,->,1874
313,flattenIdentifier,1874
0,(,0
317,$class,1874
0,",",0
397," ",1874
317,$id,1874
0,),0
397,"
            ",1874
0,),0
0,;,0
397,"
          ",1875
0,},0
397,"

          ",1876
317,$managedCopy,1878
397," ",1878
0,=,0
397," ",1878
317,$this,1878
390,->,1878
313,newInstance,1878
0,(,0
317,$class,1878
0,),0
0,;,0
397,"
          ",1878
317,$class,1879
390,->,1879
313,setIdentifierValues,1879
0,(,0
317,$managedCopy,1879
0,",",0
397," ",1879
317,$id,1879
0,),0
0,;,0
397,"

          ",1879
317,$this,1881
390,->,1881
313,persistNew,1881
0,(,0
317,$class,1881
0,",",0
397," ",1881
317,$managedCopy,1881
0,),0
0,;,0
397,"
        ",1881
0,},0
397,"
      ",1882
0,},0
397,"

      ",1883
326,if,1885
397," ",1885
0,(,0
317,$class,1885
390,->,1885
313,isVersioned,1885
397," ",1885
286,&&,1885
397," ",1885
317,$this,1885
390,->,1885
313,isLoaded,1885
0,(,0
317,$managedCopy,1885
0,),0
397," ",1885
286,&&,1885
397," ",1885
317,$this,1885
390,->,1885
313,isLoaded,1885
0,(,0
317,$entity,1885
0,),0
0,),0
397," ",1885
0,{,0
397,"
        ",1885
317,$reflField,1886
397," ",1886
0,=,0
397," ",1886
317,$class,1886
390,->,1886
313,reflFields,1886
0,[,0
317,$class,1886
390,->,1886
313,versionField,1886
0,],0
0,;,0
397,"
        ",1886
317,$managedCopyVersion,1887
397," ",1887
0,=,0
397," ",1887
317,$reflField,1887
390,->,1887
313,getValue,1887
0,(,0
317,$managedCopy,1887
0,),0
0,;,0
397,"
        ",1887
317,$entityVersion,1888
397," ",1888
0,=,0
397," ",1888
317,$reflField,1888
390,->,1888
313,getValue,1888
0,(,0
317,$entity,1888
0,),0
0,;,0
397,"

        ",1888
392,"// Throw exception if versions don't match.",1890
397,"
        ",1890
326,if,1891
397," ",1891
0,(,0
317,$managedCopyVersion,1891
397," ",1891
290,!=,1891
397," ",1891
317,$entityVersion,1891
0,),0
397," ",1891
0,{,0
397,"
          ",1891
258,throw,1892
397," ",1892
313,OptimisticLockException,1892
402,::,1892
313,lockFailedVersionMismatch,1892
0,(,0
317,$entity,1892
0,",",0
397," ",1892
317,$entityVersion,1892
0,",",0
397," ",1892
317,$managedCopyVersion,1892
0,),0
0,;,0
397,"
        ",1892
0,},0
397,"
      ",1893
0,},0
397,"

      ",1894
317,$visited,1896
0,[,0
317,$oid,1896
0,],0
397," ",1896
0,=,0
397," ",1896
317,$managedCopy,1896
0,;,0
397," ",1896
392,"// mark visited",1896
397,"

      ",1896
326,if,1898
397," ",1898
0,(,0
317,$this,1898
390,->,1898
313,isLoaded,1898
0,(,0
317,$entity,1898
0,),0
0,),0
397," ",1898
0,{,0
397,"
        ",1898
326,if,1899
397," ",1899
0,(,0
317,$managedCopy,1899
397," ",1899
298,instanceof,1899
397," ",1899
313,Proxy,1899
397," ",1899
286,&&,1899
397," ",1899
0,!,0
317,$managedCopy,1899
390,->,1899
313,__isInitialized,1899
0,(,0
0,),0
0,),0
397," ",1899
0,{,0
397,"
          ",1899
317,$managedCopy,1900
390,->,1900
313,__load,1900
0,(,0
0,),0
0,;,0
397,"
        ",1900
0,},0
397,"

        ",1901
317,$this,1903
390,->,1903
313,mergeEntityStateIntoManagedCopy,1903
0,(,0
317,$entity,1903
0,",",0
397," ",1903
317,$managedCopy,1903
0,),0
0,;,0
397,"
      ",1903
0,},0
397,"

      ",1904
326,if,1906
397," ",1906
0,(,0
317,$class,1906
390,->,1906
313,isChangeTrackingDeferredExplicit,1906
0,(,0
0,),0
0,),0
397," ",1906
0,{,0
397,"
        ",1906
317,$this,1907
390,->,1907
313,scheduleForDirtyCheck,1907
0,(,0
317,$entity,1907
0,),0
0,;,0
397,"
      ",1907
0,},0
397,"
    ",1908
0,},0
397,"

    ",1909
326,if,1911
397," ",1911
0,(,0
317,$prevManagedCopy,1911
397," ",1911
292,!==,1911
397," ",1911
313,null,1911
0,),0
397," ",1911
0,{,0
397,"
      ",1911
317,$this,1912
390,->,1912
313,updateAssociationWithMergedEntity,1912
0,(,0
317,$entity,1912
0,",",0
397," ",1912
317,$assoc,1912
0,",",0
397," ",1912
317,$prevManagedCopy,1912
0,",",0
397," ",1912
317,$managedCopy,1912
0,),0
0,;,0
397,"
    ",1912
0,},0
397,"

    ",1913
392,"// Mark the managed copy visited as well",1915
397,"
    ",1915
317,$visited,1916
0,[,0
313,spl_object_hash,1916
0,(,0
317,$managedCopy,1916
0,),0
0,],0
397," ",1916
0,=,0
397," ",1916
317,$managedCopy,1916
0,;,0
397,"

    ",1916
317,$this,1918
390,->,1918
313,cascadeMerge,1918
0,(,0
317,$entity,1918
0,",",0
397," ",1918
317,$managedCopy,1918
0,",",0
397," ",1918
317,$visited,1918
0,),0
0,;,0
397,"

    ",1918
350,return,1920
397," ",1920
317,$managedCopy,1920
0,;,0
397,"
  ",1920
0,},0
397,"

  ",1921
393,"/**
   * Tests if an entity is loaded - must either be a loaded proxy or not a proxy
   *
   * @param object $entity
   *
   * @return bool
   */",1923
397,"
  ",1929
360,private,1930
397," ",1930
347,function,1930
397," ",1930
313,isLoaded,1930
0,(,0
317,$entity,1930
0,),0
397,"
  ",1930
0,{,0
397,"
    ",1931
350,return,1932
397," ",1932
0,!,0
0,(,0
317,$entity,1932
397," ",1932
298,instanceof,1932
397," ",1932
313,Proxy,1932
0,),0
397," ",1932
285,||,1932
397," ",1932
317,$entity,1932
390,->,1932
313,__isInitialized,1932
0,(,0
0,),0
0,;,0
397,"
  ",1932
0,},0
397,"

  ",1933
393,"/**
   * Sets/adds associated managed copies into the previous entity's association field
   *
   * @param object $entity
   * @param array $association
   * @param object $previousManagedCopy
   * @param object $managedCopy
   *
   * @return void
   */",1935
397,"
  ",1944
360,private,1945
397," ",1945
347,function,1945
397," ",1945
313,updateAssociationWithMergedEntity,1945
0,(,0
317,$entity,1945
0,",",0
397," ",1945
377,array,1945
397," ",1945
317,$association,1945
0,",",0
397," ",1945
317,$previousManagedCopy,1945
0,",",0
397," ",1945
317,$managedCopy,1945
0,),0
397,"
  ",1945
0,{,0
397,"
    ",1946
317,$assocField,1947
397," ",1947
0,=,0
397," ",1947
317,$association,1947
0,[,0
320,'fieldName',1947
0,],0
0,;,0
397,"
    ",1947
317,$prevClass,1948
397," ",1948
0,=,0
397," ",1948
317,$this,1948
390,->,1948
313,em,1948
390,->,1948
313,getClassMetadata,1948
0,(,0
313,get_class,1948
0,(,0
317,$previousManagedCopy,1948
0,),0
0,),0
0,;,0
397,"

    ",1948
326,if,1950
397," ",1950
0,(,0
317,$association,1950
0,[,0
320,'type',1950
0,],0
397," ",1950
287,&,1950
397," ",1950
313,ClassMetadata,1950
402,::,1950
313,TO_ONE,1950
0,),0
397," ",1950
0,{,0
397,"
      ",1950
317,$prevClass,1951
390,->,1951
313,reflFields,1951
0,[,0
317,$assocField,1951
0,],0
390,->,1951
313,setValue,1951
0,(,0
317,$previousManagedCopy,1951
0,",",0
397," ",1951
317,$managedCopy,1951
0,),0
0,;,0
397,"

      ",1951
350,return,1953
0,;,0
397,"
    ",1953
0,},0
397,"

    ",1954
317,$value,1956
397," ",1956
0,=,0
397," ",1956
317,$prevClass,1956
390,->,1956
313,reflFields,1956
0,[,0
317,$assocField,1956
0,],0
390,->,1956
313,getValue,1956
0,(,0
317,$previousManagedCopy,1956
0,),0
0,;,0
397,"
    ",1956
317,$value,1957
0,[,0
0,],0
397," ",1957
0,=,0
397," ",1957
317,$managedCopy,1957
0,;,0
397,"

    ",1957
326,if,1959
397," ",1959
0,(,0
317,$association,1959
0,[,0
320,'type',1959
0,],0
397," ",1959
289,==,1959
397," ",1959
313,ClassMetadata,1959
402,::,1959
313,ONE_TO_MANY,1959
0,),0
397," ",1959
0,{,0
397,"
      ",1959
317,$class,1960
397," ",1960
0,=,0
397," ",1960
317,$this,1960
390,->,1960
313,em,1960
390,->,1960
313,getClassMetadata,1960
0,(,0
313,get_class,1960
0,(,0
317,$entity,1960
0,),0
0,),0
0,;,0
397,"

      ",1960
317,$class,1962
390,->,1962
313,reflFields,1962
0,[,0
317,$association,1962
0,[,0
320,'mappedBy',1962
0,],0
0,],0
390,->,1962
313,setValue,1962
0,(,0
317,$managedCopy,1962
0,",",0
397," ",1962
317,$previousManagedCopy,1962
0,),0
0,;,0
397,"
    ",1962
0,},0
397,"
  ",1963
0,},0
397,"

  ",1964
393,"/**
   * Detaches an entity from the persistence management. It's persistence will
   * no longer be managed by Doctrine.
   *
   * @param object $entity The entity to detach.
   *
   * @return void
   */",1966
397,"
  ",1973
362,public,1974
397," ",1974
347,function,1974
397," ",1974
313,detach,1974
0,(,0
317,$entity,1974
0,),0
397,"
  ",1974
0,{,0
397,"
    ",1975
317,$visited,1976
397," ",1976
0,=,0
397," ",1976
377,array,1976
0,(,0
0,),0
0,;,0
397,"

    ",1976
317,$this,1978
390,->,1978
313,doDetach,1978
0,(,0
317,$entity,1978
0,",",0
397," ",1978
317,$visited,1978
0,),0
0,;,0
397,"
  ",1978
0,},0
397,"

  ",1979
393,"/**
   * Executes a detach operation on the given entity.
   *
   * @param object $entity
   * @param array $visited
   * @param boolean $noCascade if true, don't cascade detach operation.
   *
   * @return void
   */",1981
397,"
  ",1989
360,private,1990
397," ",1990
347,function,1990
397," ",1990
313,doDetach,1990
0,(,0
317,$entity,1990
0,",",0
397," ",1990
377,array,1990
397," ",1990
288,&,1990
317,$visited,1990
0,",",0
397," ",1990
317,$noCascade,1990
397," ",1990
0,=,0
397," ",1990
313,false,1990
0,),0
397,"
  ",1990
0,{,0
397,"
    ",1991
317,$oid,1992
397," ",1992
0,=,0
397," ",1992
313,spl_object_hash,1992
0,(,0
317,$entity,1992
0,),0
0,;,0
397,"

    ",1992
326,if,1994
397," ",1994
0,(,0
366,isset,1994
0,(,0
317,$visited,1994
0,[,0
317,$oid,1994
0,],0
0,),0
0,),0
397," ",1994
0,{,0
397,"
      ",1994
350,return,1995
0,;,0
397," ",1995
392,"// Prevent infinite recursion",1995
397,"
    ",1995
0,},0
397,"

    ",1996
317,$visited,1998
0,[,0
317,$oid,1998
0,],0
397," ",1998
0,=,0
397," ",1998
317,$entity,1998
0,;,0
397," ",1998
392,"// mark visited",1998
397,"

    ",1998
339,switch,2000
397," ",2000
0,(,0
317,$this,2000
390,->,2000
313,getEntityState,2000
0,(,0
317,$entity,2000
0,",",0
397," ",2000
313,self,2000
402,::,2000
313,STATE_DETACHED,2000
0,),0
0,),0
397," ",2000
0,{,0
397,"
      ",2000
341,case,2001
397," ",2001
313,self,2001
402,::,2001
313,STATE_MANAGED,2001
0,:,0
397,"
        ",2001
326,if,2002
397," ",2002
0,(,0
317,$this,2002
390,->,2002
313,isInIdentityMap,2002
0,(,0
317,$entity,2002
0,),0
0,),0
397," ",2002
0,{,0
397,"
          ",2002
317,$this,2003
390,->,2003
313,removeFromIdentityMap,2003
0,(,0
317,$entity,2003
0,),0
0,;,0
397,"
        ",2003
0,},0
397,"

        ",2004
365,unset,2006
0,(,0
397,"
          ",2006
317,$this,2007
390,->,2007
313,entityInsertions,2007
0,[,0
317,$oid,2007
0,],0
0,",",0
397,"
          ",2007
317,$this,2008
390,->,2008
313,entityUpdates,2008
0,[,0
317,$oid,2008
0,],0
0,",",0
397,"
          ",2008
317,$this,2009
390,->,2009
313,entityDeletions,2009
0,[,0
317,$oid,2009
0,],0
0,",",0
397,"
          ",2009
317,$this,2010
390,->,2010
313,entityIdentifiers,2010
0,[,0
317,$oid,2010
0,],0
0,",",0
397,"
          ",2010
317,$this,2011
390,->,2011
313,entityStates,2011
0,[,0
317,$oid,2011
0,],0
0,",",0
397,"
          ",2011
317,$this,2012
390,->,2012
313,originalEntityData,2012
0,[,0
317,$oid,2012
0,],0
397,"
        ",2012
0,),0
0,;,0
397,"
        ",2013
344,break,2014
0,;,0
397,"
      ",2014
341,case,2015
397," ",2015
313,self,2015
402,::,2015
313,STATE_NEW,2015
0,:,0
397,"
      ",2015
341,case,2016
397," ",2016
313,self,2016
402,::,2016
313,STATE_DETACHED,2016
0,:,0
397,"
        ",2016
350,return,2017
0,;,0
397,"
    ",2017
0,},0
397,"

    ",2018
326,if,2020
397," ",2020
0,(,0
0,!,0
317,$noCascade,2020
0,),0
397," ",2020
0,{,0
397,"
      ",2020
317,$this,2021
390,->,2021
313,cascadeDetach,2021
0,(,0
317,$entity,2021
0,",",0
397," ",2021
317,$visited,2021
0,),0
0,;,0
397,"
    ",2021
0,},0
397,"
  ",2022
0,},0
397,"

  ",2023
393,"/**
   * Refreshes the state of the given entity from the database, overwriting
   * any local, unpersisted changes.
   *
   * @param object $entity The entity to refresh.
   *
   * @return void
   *
   * @throws InvalidArgumentException If the entity is not MANAGED.
   */",2025
397,"
  ",2034
362,public,2035
397," ",2035
347,function,2035
397," ",2035
313,refresh,2035
0,(,0
317,$entity,2035
0,),0
397,"
  ",2035
0,{,0
397,"
    ",2036
317,$visited,2037
397," ",2037
0,=,0
397," ",2037
377,array,2037
0,(,0
0,),0
0,;,0
397,"

    ",2037
317,$this,2039
390,->,2039
313,doRefresh,2039
0,(,0
317,$entity,2039
0,",",0
397," ",2039
317,$visited,2039
0,),0
0,;,0
397,"
  ",2039
0,},0
397,"

  ",2040
393,"/**
   * Executes a refresh operation on an entity.
   *
   * @param object $entity The entity to refresh.
   * @param array $visited The already visited entities during cascades.
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException If the entity is not MANAGED.
   */",2042
397,"
  ",2051
360,private,2052
397," ",2052
347,function,2052
397," ",2052
313,doRefresh,2052
0,(,0
317,$entity,2052
0,",",0
397," ",2052
377,array,2052
397," ",2052
288,&,2052
317,$visited,2052
0,),0
397,"
  ",2052
0,{,0
397,"
    ",2053
317,$oid,2054
397," ",2054
0,=,0
397," ",2054
313,spl_object_hash,2054
0,(,0
317,$entity,2054
0,),0
0,;,0
397,"

    ",2054
326,if,2056
397," ",2056
0,(,0
366,isset,2056
0,(,0
317,$visited,2056
0,[,0
317,$oid,2056
0,],0
0,),0
0,),0
397," ",2056
0,{,0
397,"
      ",2056
350,return,2057
0,;,0
397," ",2057
392,"// Prevent infinite recursion",2057
397,"
    ",2057
0,},0
397,"

    ",2058
317,$visited,2060
0,[,0
317,$oid,2060
0,],0
397," ",2060
0,=,0
397," ",2060
317,$entity,2060
0,;,0
397," ",2060
392,"// mark visited",2060
397,"

    ",2060
317,$class,2062
397," ",2062
0,=,0
397," ",2062
317,$this,2062
390,->,2062
313,em,2062
390,->,2062
313,getClassMetadata,2062
0,(,0
313,get_class,2062
0,(,0
317,$entity,2062
0,),0
0,),0
0,;,0
397,"

    ",2062
326,if,2064
397," ",2064
0,(,0
317,$this,2064
390,->,2064
313,getEntityState,2064
0,(,0
317,$entity,2064
0,),0
397," ",2064
292,!==,2064
397," ",2064
313,self,2064
402,::,2064
313,STATE_MANAGED,2064
0,),0
397," ",2064
0,{,0
397,"
      ",2064
258,throw,2065
397," ",2065
313,ORMInvalidArgumentException,2065
402,::,2065
313,entityNotManaged,2065
0,(,0
317,$entity,2065
0,),0
0,;,0
397,"
    ",2065
0,},0
397,"

    ",2066
317,$this,2068
390,->,2068
313,getEntityPersister,2068
0,(,0
317,$class,2068
390,->,2068
313,name,2068
0,),0
390,->,2068
313,refresh,2068
0,(,0
397,"
      ",2068
313,array_combine,2069
0,(,0
317,$class,2069
390,->,2069
313,getIdentifierFieldNames,2069
0,(,0
0,),0
0,",",0
397," ",2069
317,$this,2069
390,->,2069
313,entityIdentifiers,2069
0,[,0
317,$oid,2069
0,],0
0,),0
0,",",0
397,"
      ",2069
317,$entity,2070
397,"
    ",2070
0,),0
0,;,0
397,"

    ",2071
317,$this,2073
390,->,2073
313,cascadeRefresh,2073
0,(,0
317,$entity,2073
0,",",0
397," ",2073
317,$visited,2073
0,),0
0,;,0
397,"
  ",2073
0,},0
397,"

  ",2074
393,"/**
   * Cascades a refresh operation to associated entities.
   *
   * @param object $entity
   * @param array $visited
   *
   * @return void
   */",2076
397,"
  ",2083
360,private,2084
397," ",2084
347,function,2084
397," ",2084
313,cascadeRefresh,2084
0,(,0
317,$entity,2084
0,",",0
397," ",2084
377,array,2084
397," ",2084
288,&,2084
317,$visited,2084
0,),0
397,"
  ",2084
0,{,0
397,"
    ",2085
317,$class,2086
397," ",2086
0,=,0
397," ",2086
317,$this,2086
390,->,2086
313,em,2086
390,->,2086
313,getClassMetadata,2086
0,(,0
313,get_class,2086
0,(,0
317,$entity,2086
0,),0
0,),0
0,;,0
397,"

    ",2086
317,$associationMappings,2088
397," ",2088
0,=,0
397," ",2088
313,array_filter,2088
0,(,0
397,"
      ",2088
317,$class,2089
390,->,2089
313,associationMappings,2089
0,",",0
397,"
      ",2089
347,function,2090
397," ",2090
0,(,0
317,$assoc,2090
0,),0
397," ",2090
0,{,0
397,"
        ",2090
350,return,2091
397," ",2091
317,$assoc,2091
0,[,0
320,'isCascadeRefresh',2091
0,],0
0,;,0
397,"
      ",2091
0,},0
397,"
    ",2092
0,),0
0,;,0
397,"

    ",2093
334,foreach,2095
397," ",2095
0,(,0
317,$associationMappings,2095
397," ",2095
338,as,2095
397," ",2095
317,$assoc,2095
0,),0
397," ",2095
0,{,0
397,"
      ",2095
317,$relatedEntities,2096
397," ",2096
0,=,0
397," ",2096
317,$class,2096
390,->,2096
313,reflFields,2096
0,[,0
317,$assoc,2096
0,[,0
320,'fieldName',2096
0,],0
0,],0
390,->,2096
313,getValue,2096
0,(,0
317,$entity,2096
0,),0
0,;,0
397,"

      ",2096
339,switch,2098
397," ",2098
0,(,0
313,true,2098
0,),0
397," ",2098
0,{,0
397,"
        ",2098
341,case,2099
397," ",2099
0,(,0
317,$relatedEntities,2099
397," ",2099
298,instanceof,2099
397," ",2099
313,PersistentCollection,2099
0,),0
0,:,0
397,"
          ",2099
392,"// Unwrap so that foreach() does not initialize",2100
397,"
          ",2100
317,$relatedEntities,2101
397," ",2101
0,=,0
397," ",2101
317,$relatedEntities,2101
390,->,2101
313,unwrap,2101
0,(,0
0,),0
0,;,0
397,"
        ",2101
392,"// break; is commented intentionally!",2102
397,"

        ",2102
341,case,2104
397," ",2104
0,(,0
317,$relatedEntities,2104
397," ",2104
298,instanceof,2104
397," ",2104
313,Collection,2104
0,),0
0,:,0
397,"
        ",2104
341,case,2105
397," ",2105
0,(,0
313,is_array,2105
0,(,0
317,$relatedEntities,2105
0,),0
0,),0
0,:,0
397,"
          ",2105
334,foreach,2106
397," ",2106
0,(,0
317,$relatedEntities,2106
397," ",2106
338,as,2106
397," ",2106
317,$relatedEntity,2106
0,),0
397," ",2106
0,{,0
397,"
            ",2106
317,$this,2107
390,->,2107
313,doRefresh,2107
0,(,0
317,$relatedEntity,2107
0,",",0
397," ",2107
317,$visited,2107
0,),0
0,;,0
397,"
          ",2107
0,},0
397,"
          ",2108
344,break,2109
0,;,0
397,"

        ",2109
341,case,2111
397," ",2111
0,(,0
317,$relatedEntities,2111
397," ",2111
292,!==,2111
397," ",2111
313,null,2111
0,),0
0,:,0
397,"
          ",2111
317,$this,2112
390,->,2112
313,doRefresh,2112
0,(,0
317,$relatedEntities,2112
0,",",0
397," ",2112
317,$visited,2112
0,),0
0,;,0
397,"
          ",2112
344,break,2113
0,;,0
397,"

        ",2113
342,default,2115
0,:,0
397,"
          ",2115
392,"// Do nothing",2116
397,"
      ",2116
0,},0
397,"
    ",2117
0,},0
397,"
  ",2118
0,},0
397,"

  ",2119
393,"/**
   * Cascades a detach operation to associated entities.
   *
   * @param object $entity
   * @param array $visited
   *
   * @return void
   */",2121
397,"
  ",2128
360,private,2129
397," ",2129
347,function,2129
397," ",2129
313,cascadeDetach,2129
0,(,0
317,$entity,2129
0,",",0
397," ",2129
377,array,2129
397," ",2129
288,&,2129
317,$visited,2129
0,),0
397,"
  ",2129
0,{,0
397,"
    ",2130
317,$class,2131
397," ",2131
0,=,0
397," ",2131
317,$this,2131
390,->,2131
313,em,2131
390,->,2131
313,getClassMetadata,2131
0,(,0
313,get_class,2131
0,(,0
317,$entity,2131
0,),0
0,),0
0,;,0
397,"

    ",2131
317,$associationMappings,2133
397," ",2133
0,=,0
397," ",2133
313,array_filter,2133
0,(,0
397,"
      ",2133
317,$class,2134
390,->,2134
313,associationMappings,2134
0,",",0
397,"
      ",2134
347,function,2135
397," ",2135
0,(,0
317,$assoc,2135
0,),0
397," ",2135
0,{,0
397,"
        ",2135
350,return,2136
397," ",2136
317,$assoc,2136
0,[,0
320,'isCascadeDetach',2136
0,],0
0,;,0
397,"
      ",2136
0,},0
397,"
    ",2137
0,),0
0,;,0
397,"

    ",2138
334,foreach,2140
397," ",2140
0,(,0
317,$associationMappings,2140
397," ",2140
338,as,2140
397," ",2140
317,$assoc,2140
0,),0
397," ",2140
0,{,0
397,"
      ",2140
317,$relatedEntities,2141
397," ",2141
0,=,0
397," ",2141
317,$class,2141
390,->,2141
313,reflFields,2141
0,[,0
317,$assoc,2141
0,[,0
320,'fieldName',2141
0,],0
0,],0
390,->,2141
313,getValue,2141
0,(,0
317,$entity,2141
0,),0
0,;,0
397,"

      ",2141
339,switch,2143
397," ",2143
0,(,0
313,true,2143
0,),0
397," ",2143
0,{,0
397,"
        ",2143
341,case,2144
397," ",2144
0,(,0
317,$relatedEntities,2144
397," ",2144
298,instanceof,2144
397," ",2144
313,PersistentCollection,2144
0,),0
0,:,0
397,"
          ",2144
392,"// Unwrap so that foreach() does not initialize",2145
397,"
          ",2145
317,$relatedEntities,2146
397," ",2146
0,=,0
397," ",2146
317,$relatedEntities,2146
390,->,2146
313,unwrap,2146
0,(,0
0,),0
0,;,0
397,"
        ",2146
392,"// break; is commented intentionally!",2147
397,"

        ",2147
341,case,2149
397," ",2149
0,(,0
317,$relatedEntities,2149
397," ",2149
298,instanceof,2149
397," ",2149
313,Collection,2149
0,),0
0,:,0
397,"
        ",2149
341,case,2150
397," ",2150
0,(,0
313,is_array,2150
0,(,0
317,$relatedEntities,2150
0,),0
0,),0
0,:,0
397,"
          ",2150
334,foreach,2151
397," ",2151
0,(,0
317,$relatedEntities,2151
397," ",2151
338,as,2151
397," ",2151
317,$relatedEntity,2151
0,),0
397," ",2151
0,{,0
397,"
            ",2151
317,$this,2152
390,->,2152
313,doDetach,2152
0,(,0
317,$relatedEntity,2152
0,",",0
397," ",2152
317,$visited,2152
0,),0
0,;,0
397,"
          ",2152
0,},0
397,"
          ",2153
344,break,2154
0,;,0
397,"

        ",2154
341,case,2156
397," ",2156
0,(,0
317,$relatedEntities,2156
397," ",2156
292,!==,2156
397," ",2156
313,null,2156
0,),0
0,:,0
397,"
          ",2156
317,$this,2157
390,->,2157
313,doDetach,2157
0,(,0
317,$relatedEntities,2157
0,",",0
397," ",2157
317,$visited,2157
0,),0
0,;,0
397,"
          ",2157
344,break,2158
0,;,0
397,"

        ",2158
342,default,2160
0,:,0
397,"
          ",2160
392,"// Do nothing",2161
397,"
      ",2161
0,},0
397,"
    ",2162
0,},0
397,"
  ",2163
0,},0
397,"

  ",2164
393,"/**
   * Cascades a merge operation to associated entities.
   *
   * @param object $entity
   * @param object $managedCopy
   * @param array $visited
   *
   * @return void
   */",2166
397,"
  ",2174
360,private,2175
397," ",2175
347,function,2175
397," ",2175
313,cascadeMerge,2175
0,(,0
317,$entity,2175
0,",",0
397," ",2175
317,$managedCopy,2175
0,",",0
397," ",2175
377,array,2175
397," ",2175
288,&,2175
317,$visited,2175
0,),0
397,"
  ",2175
0,{,0
397,"
    ",2176
317,$class,2177
397," ",2177
0,=,0
397," ",2177
317,$this,2177
390,->,2177
313,em,2177
390,->,2177
313,getClassMetadata,2177
0,(,0
313,get_class,2177
0,(,0
317,$entity,2177
0,),0
0,),0
0,;,0
397,"

    ",2177
317,$associationMappings,2179
397," ",2179
0,=,0
397," ",2179
313,array_filter,2179
0,(,0
397,"
      ",2179
317,$class,2180
390,->,2180
313,associationMappings,2180
0,",",0
397,"
      ",2180
347,function,2181
397," ",2181
0,(,0
317,$assoc,2181
0,),0
397," ",2181
0,{,0
397,"
        ",2181
350,return,2182
397," ",2182
317,$assoc,2182
0,[,0
320,'isCascadeMerge',2182
0,],0
0,;,0
397,"
      ",2182
0,},0
397,"
    ",2183
0,),0
0,;,0
397,"

    ",2184
334,foreach,2186
397," ",2186
0,(,0
317,$associationMappings,2186
397," ",2186
338,as,2186
397," ",2186
317,$assoc,2186
0,),0
397," ",2186
0,{,0
397,"
      ",2186
317,$relatedEntities,2187
397," ",2187
0,=,0
397," ",2187
317,$class,2187
390,->,2187
313,reflFields,2187
0,[,0
317,$assoc,2187
0,[,0
320,'fieldName',2187
0,],0
0,],0
390,->,2187
313,getValue,2187
0,(,0
317,$entity,2187
0,),0
0,;,0
397,"

      ",2187
326,if,2189
397," ",2189
0,(,0
317,$relatedEntities,2189
397," ",2189
298,instanceof,2189
397," ",2189
313,Collection,2189
0,),0
397," ",2189
0,{,0
397,"
        ",2189
326,if,2190
397," ",2190
0,(,0
317,$relatedEntities,2190
397," ",2190
291,===,2190
397," ",2190
317,$class,2190
390,->,2190
313,reflFields,2190
0,[,0
317,$assoc,2190
0,[,0
320,'fieldName',2190
0,],0
0,],0
390,->,2190
313,getValue,2190
0,(,0
317,$managedCopy,2190
0,),0
0,),0
397," ",2190
0,{,0
397,"
          ",2190
345,continue,2191
0,;,0
397,"
        ",2191
0,},0
397,"

        ",2192
326,if,2194
397," ",2194
0,(,0
317,$relatedEntities,2194
397," ",2194
298,instanceof,2194
397," ",2194
313,PersistentCollection,2194
0,),0
397," ",2194
0,{,0
397,"
          ",2194
392,"// Unwrap so that foreach() does not initialize",2195
397,"
          ",2195
317,$relatedEntities,2196
397," ",2196
0,=,0
397," ",2196
317,$relatedEntities,2196
390,->,2196
313,unwrap,2196
0,(,0
0,),0
0,;,0
397,"
        ",2196
0,},0
397,"

        ",2197
334,foreach,2199
397," ",2199
0,(,0
317,$relatedEntities,2199
397," ",2199
338,as,2199
397," ",2199
317,$relatedEntity,2199
0,),0
397," ",2199
0,{,0
397,"
          ",2199
317,$this,2200
390,->,2200
313,doMerge,2200
0,(,0
317,$relatedEntity,2200
0,",",0
397," ",2200
317,$visited,2200
0,",",0
397," ",2200
317,$managedCopy,2200
0,",",0
397," ",2200
317,$assoc,2200
0,),0
0,;,0
397,"
        ",2200
0,},0
397,"
      ",2201
0,},0
397," ",2202
310,else,2202
397," ",2202
0,{,0
397,"
        ",2202
326,if,2203
397," ",2203
0,(,0
317,$relatedEntities,2203
397," ",2203
292,!==,2203
397," ",2203
313,null,2203
0,),0
397," ",2203
0,{,0
397,"
          ",2203
317,$this,2204
390,->,2204
313,doMerge,2204
0,(,0
317,$relatedEntities,2204
0,",",0
397," ",2204
317,$visited,2204
0,",",0
397," ",2204
317,$managedCopy,2204
0,",",0
397," ",2204
317,$assoc,2204
0,),0
0,;,0
397,"
        ",2204
0,},0
397,"
      ",2205
0,},0
397,"
    ",2206
0,},0
397,"
  ",2207
0,},0
397,"

  ",2208
393,"/**
   * Cascades the save operation to associated entities.
   *
   * @param object $entity
   * @param array $visited
   *
   * @return void
   */",2210
397,"
  ",2217
360,private,2218
397," ",2218
347,function,2218
397," ",2218
313,cascadePersist,2218
0,(,0
317,$entity,2218
0,",",0
397," ",2218
377,array,2218
397," ",2218
288,&,2218
317,$visited,2218
0,),0
397,"
  ",2218
0,{,0
397,"
    ",2219
317,$class,2220
397," ",2220
0,=,0
397," ",2220
317,$this,2220
390,->,2220
313,em,2220
390,->,2220
313,getClassMetadata,2220
0,(,0
313,get_class,2220
0,(,0
317,$entity,2220
0,),0
0,),0
0,;,0
397,"

    ",2220
317,$associationMappings,2222
397," ",2222
0,=,0
397," ",2222
313,array_filter,2222
0,(,0
397,"
      ",2222
317,$class,2223
390,->,2223
313,associationMappings,2223
0,",",0
397,"
      ",2223
347,function,2224
397," ",2224
0,(,0
317,$assoc,2224
0,),0
397," ",2224
0,{,0
397,"
        ",2224
350,return,2225
397," ",2225
317,$assoc,2225
0,[,0
320,'isCascadePersist',2225
0,],0
0,;,0
397,"
      ",2225
0,},0
397,"
    ",2226
0,),0
0,;,0
397,"

    ",2227
334,foreach,2229
397," ",2229
0,(,0
317,$associationMappings,2229
397," ",2229
338,as,2229
397," ",2229
317,$assoc,2229
0,),0
397," ",2229
0,{,0
397,"
      ",2229
317,$relatedEntities,2230
397," ",2230
0,=,0
397," ",2230
317,$class,2230
390,->,2230
313,reflFields,2230
0,[,0
317,$assoc,2230
0,[,0
320,'fieldName',2230
0,],0
0,],0
390,->,2230
313,getValue,2230
0,(,0
317,$entity,2230
0,),0
0,;,0
397,"

      ",2230
339,switch,2232
397," ",2232
0,(,0
313,true,2232
0,),0
397," ",2232
0,{,0
397,"
        ",2232
341,case,2233
397," ",2233
0,(,0
317,$relatedEntities,2233
397," ",2233
298,instanceof,2233
397," ",2233
313,PersistentCollection,2233
0,),0
0,:,0
397,"
          ",2233
392,"// Unwrap so that foreach() does not initialize",2234
397,"
          ",2234
317,$relatedEntities,2235
397," ",2235
0,=,0
397," ",2235
317,$relatedEntities,2235
390,->,2235
313,unwrap,2235
0,(,0
0,),0
0,;,0
397,"
        ",2235
392,"// break; is commented intentionally!",2236
397,"

        ",2236
341,case,2238
397," ",2238
0,(,0
317,$relatedEntities,2238
397," ",2238
298,instanceof,2238
397," ",2238
313,Collection,2238
0,),0
0,:,0
397,"
        ",2238
341,case,2239
397," ",2239
0,(,0
313,is_array,2239
0,(,0
317,$relatedEntities,2239
0,),0
0,),0
0,:,0
397,"
          ",2239
326,if,2240
397," ",2240
0,(,0
0,(,0
317,$assoc,2240
0,[,0
320,'type',2240
0,],0
397," ",2240
287,&,2240
397," ",2240
313,ClassMetadata,2240
402,::,2240
313,TO_MANY,2240
0,),0
397," ",2240
294,<=,2240
397," ",2240
311,0,2240
0,),0
397," ",2240
0,{,0
397,"
            ",2240
258,throw,2241
397," ",2241
313,ORMInvalidArgumentException,2241
402,::,2241
313,invalidAssociation,2241
0,(,0
397,"
              ",2241
317,$this,2242
390,->,2242
313,em,2242
390,->,2242
313,getClassMetadata,2242
0,(,0
317,$assoc,2242
0,[,0
320,'targetEntity',2242
0,],0
0,),0
0,",",0
397,"
              ",2242
317,$assoc,2243
0,",",0
397,"
              ",2243
317,$relatedEntities,2244
397,"
            ",2244
0,),0
0,;,0
397,"
          ",2245
0,},0
397,"

          ",2246
334,foreach,2248
397," ",2248
0,(,0
317,$relatedEntities,2248
397," ",2248
338,as,2248
397," ",2248
317,$relatedEntity,2248
0,),0
397," ",2248
0,{,0
397,"
            ",2248
317,$this,2249
390,->,2249
313,doPersist,2249
0,(,0
317,$relatedEntity,2249
0,",",0
397," ",2249
317,$visited,2249
0,),0
0,;,0
397,"
          ",2249
0,},0
397,"

          ",2250
344,break,2252
0,;,0
397,"

        ",2252
341,case,2254
397," ",2254
0,(,0
317,$relatedEntities,2254
397," ",2254
292,!==,2254
397," ",2254
313,null,2254
0,),0
0,:,0
397,"
          ",2254
326,if,2255
397," ",2255
0,(,0
0,!,0
317,$relatedEntities,2255
397," ",2255
298,instanceof,2255
397," ",2255
317,$assoc,2255
0,[,0
320,'targetEntity',2255
0,],0
0,),0
397," ",2255
0,{,0
397,"
            ",2255
258,throw,2256
397," ",2256
313,ORMInvalidArgumentException,2256
402,::,2256
313,invalidAssociation,2256
0,(,0
397,"
              ",2256
317,$this,2257
390,->,2257
313,em,2257
390,->,2257
313,getClassMetadata,2257
0,(,0
317,$assoc,2257
0,[,0
320,'targetEntity',2257
0,],0
0,),0
0,",",0
397,"
              ",2257
317,$assoc,2258
0,",",0
397,"
              ",2258
317,$relatedEntities,2259
397,"
            ",2259
0,),0
0,;,0
397,"
          ",2260
0,},0
397,"

          ",2261
317,$this,2263
390,->,2263
313,doPersist,2263
0,(,0
317,$relatedEntities,2263
0,",",0
397," ",2263
317,$visited,2263
0,),0
0,;,0
397,"
          ",2263
344,break,2264
0,;,0
397,"

        ",2264
342,default,2266
0,:,0
397,"
          ",2266
392,"// Do nothing",2267
397,"
      ",2267
0,},0
397,"
    ",2268
0,},0
397,"
  ",2269
0,},0
397,"

  ",2270
393,"/**
   * Cascades the delete operation to associated entities.
   *
   * @param object $entity
   * @param array $visited
   *
   * @return void
   */",2272
397,"
  ",2279
360,private,2280
397," ",2280
347,function,2280
397," ",2280
313,cascadeRemove,2280
0,(,0
317,$entity,2280
0,",",0
397," ",2280
377,array,2280
397," ",2280
288,&,2280
317,$visited,2280
0,),0
397,"
  ",2280
0,{,0
397,"
    ",2281
317,$class,2282
397," ",2282
0,=,0
397," ",2282
317,$this,2282
390,->,2282
313,em,2282
390,->,2282
313,getClassMetadata,2282
0,(,0
313,get_class,2282
0,(,0
317,$entity,2282
0,),0
0,),0
0,;,0
397,"

    ",2282
317,$associationMappings,2284
397," ",2284
0,=,0
397," ",2284
313,array_filter,2284
0,(,0
397,"
      ",2284
317,$class,2285
390,->,2285
313,associationMappings,2285
0,",",0
397,"
      ",2285
347,function,2286
397," ",2286
0,(,0
317,$assoc,2286
0,),0
397," ",2286
0,{,0
397,"
        ",2286
350,return,2287
397," ",2287
317,$assoc,2287
0,[,0
320,'isCascadeRemove',2287
0,],0
0,;,0
397,"
      ",2287
0,},0
397,"
    ",2288
0,),0
0,;,0
397,"

    ",2289
317,$entitiesToCascade,2291
397," ",2291
0,=,0
397," ",2291
377,array,2291
0,(,0
0,),0
0,;,0
397,"

    ",2291
334,foreach,2293
397," ",2293
0,(,0
317,$associationMappings,2293
397," ",2293
338,as,2293
397," ",2293
317,$assoc,2293
0,),0
397," ",2293
0,{,0
397,"
      ",2293
326,if,2294
397," ",2294
0,(,0
317,$entity,2294
397," ",2294
298,instanceof,2294
397," ",2294
313,Proxy,2294
397," ",2294
286,&&,2294
397," ",2294
0,!,0
317,$entity,2294
390,->,2294
313,__isInitialized__,2294
0,),0
397," ",2294
0,{,0
397,"
        ",2294
317,$entity,2295
390,->,2295
313,__load,2295
0,(,0
0,),0
0,;,0
397,"
      ",2295
0,},0
397,"

      ",2296
317,$relatedEntities,2298
397," ",2298
0,=,0
397," ",2298
317,$class,2298
390,->,2298
313,reflFields,2298
0,[,0
317,$assoc,2298
0,[,0
320,'fieldName',2298
0,],0
0,],0
390,->,2298
313,getValue,2298
0,(,0
317,$entity,2298
0,),0
0,;,0
397,"

      ",2298
339,switch,2300
397," ",2300
0,(,0
313,true,2300
0,),0
397," ",2300
0,{,0
397,"
        ",2300
341,case,2301
397," ",2301
0,(,0
317,$relatedEntities,2301
397," ",2301
298,instanceof,2301
397," ",2301
313,Collection,2301
0,),0
0,:,0
397,"
        ",2301
341,case,2302
397," ",2302
0,(,0
313,is_array,2302
0,(,0
317,$relatedEntities,2302
0,),0
0,),0
0,:,0
397,"
          ",2302
392,"// If its a PersistentCollection initialization is intended! No unwrap!",2303
397,"
          ",2303
334,foreach,2304
397," ",2304
0,(,0
317,$relatedEntities,2304
397," ",2304
338,as,2304
397," ",2304
317,$relatedEntity,2304
0,),0
397," ",2304
0,{,0
397,"
            ",2304
317,$entitiesToCascade,2305
0,[,0
0,],0
397," ",2305
0,=,0
397," ",2305
317,$relatedEntity,2305
0,;,0
397,"
          ",2305
0,},0
397,"
          ",2306
344,break,2307
0,;,0
397,"

        ",2307
341,case,2309
397," ",2309
0,(,0
317,$relatedEntities,2309
397," ",2309
292,!==,2309
397," ",2309
313,null,2309
0,),0
0,:,0
397,"
          ",2309
317,$entitiesToCascade,2310
0,[,0
0,],0
397," ",2310
0,=,0
397," ",2310
317,$relatedEntities,2310
0,;,0
397,"
          ",2310
344,break,2311
0,;,0
397,"

        ",2311
342,default,2313
0,:,0
397,"
          ",2313
392,"// Do nothing",2314
397,"
      ",2314
0,},0
397,"
    ",2315
0,},0
397,"

    ",2316
334,foreach,2318
397," ",2318
0,(,0
317,$entitiesToCascade,2318
397," ",2318
338,as,2318
397," ",2318
317,$relatedEntity,2318
0,),0
397," ",2318
0,{,0
397,"
      ",2318
317,$this,2319
390,->,2319
313,doRemove,2319
0,(,0
317,$relatedEntity,2319
0,",",0
397," ",2319
317,$visited,2319
0,),0
0,;,0
397,"
    ",2319
0,},0
397,"
  ",2320
0,},0
397,"

  ",2321
393,"/**
   * Acquire a lock on the given entity.
   *
   * @param object $entity
   * @param int $lockMode
   * @param int $lockVersion
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   * @throws TransactionRequiredException
   * @throws OptimisticLockException
   */",2323
397,"
  ",2335
362,public,2336
397," ",2336
347,function,2336
397," ",2336
313,lock,2336
0,(,0
317,$entity,2336
0,",",0
397," ",2336
317,$lockMode,2336
0,",",0
397," ",2336
317,$lockVersion,2336
397," ",2336
0,=,0
397," ",2336
313,null,2336
0,),0
397,"
  ",2336
0,{,0
397,"
    ",2337
326,if,2338
397," ",2338
0,(,0
317,$entity,2338
397," ",2338
291,===,2338
397," ",2338
313,null,2338
0,),0
397," ",2338
0,{,0
397,"
      ",2338
258,throw,2339
397," ",2339
324,new,2339
397," ",2339
314,"\InvalidArgumentException",2339
0,(,0
320,"""No entity passed to UnitOfWork#lock().""",2339
0,),0
0,;,0
397,"
    ",2339
0,},0
397,"

    ",2340
326,if,2342
397," ",2342
0,(,0
317,$this,2342
390,->,2342
313,getEntityState,2342
0,(,0
317,$entity,2342
0,",",0
397," ",2342
313,self,2342
402,::,2342
313,STATE_DETACHED,2342
0,),0
397," ",2342
290,!=,2342
397," ",2342
313,self,2342
402,::,2342
313,STATE_MANAGED,2342
0,),0
397," ",2342
0,{,0
397,"
      ",2342
258,throw,2343
397," ",2343
313,ORMInvalidArgumentException,2343
402,::,2343
313,entityNotManaged,2343
0,(,0
317,$entity,2343
0,),0
0,;,0
397,"
    ",2343
0,},0
397,"

    ",2344
317,$class,2346
397," ",2346
0,=,0
397," ",2346
317,$this,2346
390,->,2346
313,em,2346
390,->,2346
313,getClassMetadata,2346
0,(,0
313,get_class,2346
0,(,0
317,$entity,2346
0,),0
0,),0
0,;,0
397,"

    ",2346
339,switch,2348
397," ",2348
0,(,0
313,true,2348
0,),0
397," ",2348
0,{,0
397,"
      ",2348
341,case,2349
397," ",2349
313,LockMode,2349
402,::,2349
313,OPTIMISTIC,2349
397," ",2349
291,===,2349
397," ",2349
317,$lockMode,2349
0,:,0
397,"
        ",2349
326,if,2350
397," ",2350
0,(,0
0,!,0
317,$class,2350
390,->,2350
313,isVersioned,2350
0,),0
397," ",2350
0,{,0
397,"
          ",2350
258,throw,2351
397," ",2351
313,OptimisticLockException,2351
402,::,2351
313,notVersioned,2351
0,(,0
317,$class,2351
390,->,2351
313,name,2351
0,),0
0,;,0
397,"
        ",2351
0,},0
397,"

        ",2352
326,if,2354
397," ",2354
0,(,0
317,$lockVersion,2354
397," ",2354
291,===,2354
397," ",2354
313,null,2354
0,),0
397," ",2354
0,{,0
397,"
          ",2354
350,return,2355
0,;,0
397,"
        ",2355
0,},0
397,"

        ",2356
326,if,2358
397," ",2358
0,(,0
317,$entity,2358
397," ",2358
298,instanceof,2358
397," ",2358
313,Proxy,2358
397," ",2358
286,&&,2358
397," ",2358
0,!,0
317,$entity,2358
390,->,2358
313,__isInitialized__,2358
0,),0
397," ",2358
0,{,0
397,"
          ",2358
317,$entity,2359
390,->,2359
313,__load,2359
0,(,0
0,),0
0,;,0
397,"
        ",2359
0,},0
397,"

        ",2360
317,$entityVersion,2362
397," ",2362
0,=,0
397," ",2362
317,$class,2362
390,->,2362
313,reflFields,2362
0,[,0
317,$class,2362
390,->,2362
313,versionField,2362
0,],0
390,->,2362
313,getValue,2362
0,(,0
317,$entity,2362
0,),0
0,;,0
397,"

        ",2362
326,if,2364
397," ",2364
0,(,0
317,$entityVersion,2364
397," ",2364
290,!=,2364
397," ",2364
317,$lockVersion,2364
0,),0
397," ",2364
0,{,0
397,"
          ",2364
258,throw,2365
397," ",2365
313,OptimisticLockException,2365
402,::,2365
313,lockFailedVersionMismatch,2365
0,(,0
317,$entity,2365
0,",",0
397," ",2365
317,$lockVersion,2365
0,",",0
397," ",2365
317,$entityVersion,2365
0,),0
0,;,0
397,"
        ",2365
0,},0
397,"

        ",2366
344,break,2368
0,;,0
397,"

      ",2368
341,case,2370
397," ",2370
313,LockMode,2370
402,::,2370
313,NONE,2370
397," ",2370
291,===,2370
397," ",2370
317,$lockMode,2370
0,:,0
397,"
      ",2370
341,case,2371
397," ",2371
313,LockMode,2371
402,::,2371
313,PESSIMISTIC_READ,2371
397," ",2371
291,===,2371
397," ",2371
317,$lockMode,2371
0,:,0
397,"
      ",2371
341,case,2372
397," ",2372
313,LockMode,2372
402,::,2372
313,PESSIMISTIC_WRITE,2372
397," ",2372
291,===,2372
397," ",2372
317,$lockMode,2372
0,:,0
397,"
        ",2372
326,if,2373
397," ",2373
0,(,0
0,!,0
317,$this,2373
390,->,2373
313,em,2373
390,->,2373
313,getConnection,2373
0,(,0
0,),0
390,->,2373
313,isTransactionActive,2373
0,(,0
0,),0
0,),0
397," ",2373
0,{,0
397,"
          ",2373
258,throw,2374
397," ",2374
313,TransactionRequiredException,2374
402,::,2374
313,transactionRequired,2374
0,(,0
0,),0
0,;,0
397,"
        ",2374
0,},0
397,"

        ",2375
317,$oid,2377
397," ",2377
0,=,0
397," ",2377
313,spl_object_hash,2377
0,(,0
317,$entity,2377
0,),0
0,;,0
397,"

        ",2377
317,$this,2379
390,->,2379
313,getEntityPersister,2379
0,(,0
317,$class,2379
390,->,2379
313,name,2379
0,),0
390,->,2379
313,lock,2379
0,(,0
397,"
          ",2379
313,array_combine,2380
0,(,0
317,$class,2380
390,->,2380
313,getIdentifierFieldNames,2380
0,(,0
0,),0
0,",",0
397," ",2380
317,$this,2380
390,->,2380
313,entityIdentifiers,2380
0,[,0
317,$oid,2380
0,],0
0,),0
0,",",0
397,"
          ",2380
317,$lockMode,2381
397,"
        ",2381
0,),0
0,;,0
397,"
        ",2382
344,break,2383
0,;,0
397,"

      ",2383
342,default,2385
0,:,0
397,"
        ",2385
392,"// Do nothing",2386
397,"
    ",2386
0,},0
397,"
  ",2387
0,},0
397,"

  ",2388
393,"/**
   * Gets the CommitOrderCalculator used by the UnitOfWork to order commits.
   *
   * @return \Doctrine\ORM\Internal\CommitOrderCalculator
   */",2390
397,"
  ",2394
362,public,2395
397," ",2395
347,function,2395
397," ",2395
313,getCommitOrderCalculator,2395
0,(,0
0,),0
397,"
  ",2395
0,{,0
397,"
    ",2396
326,if,2397
397," ",2397
0,(,0
317,$this,2397
390,->,2397
313,commitOrderCalculator,2397
397," ",2397
291,===,2397
397," ",2397
313,null,2397
0,),0
397," ",2397
0,{,0
397,"
      ",2397
317,$this,2398
390,->,2398
313,commitOrderCalculator,2398
397," ",2398
0,=,0
397," ",2398
324,new,2398
397," ",2398
316,"Internal\CommitOrderCalculator",2398
0,;,0
397,"
    ",2398
0,},0
397,"

    ",2399
350,return,2401
397," ",2401
317,$this,2401
390,->,2401
313,commitOrderCalculator,2401
0,;,0
397,"
  ",2401
0,},0
397,"

  ",2402
393,"/**
   * Clears the UnitOfWork.
   *
   * @param string|null $entityName if given, only entities of this type will get detached.
   *
   * @return void
   */",2404
397,"
  ",2410
362,public,2411
397," ",2411
347,function,2411
397," ",2411
313,clear,2411
0,(,0
317,$entityName,2411
397," ",2411
0,=,0
397," ",2411
313,null,2411
0,),0
397,"
  ",2411
0,{,0
397,"
    ",2412
326,if,2413
397," ",2413
0,(,0
317,$entityName,2413
397," ",2413
291,===,2413
397," ",2413
313,null,2413
0,),0
397," ",2413
0,{,0
397,"
      ",2413
317,$this,2414
390,->,2414
313,identityMap,2414
397," ",2414
0,=,0
397,"
      ",2414
317,$this,2415
390,->,2415
313,entityIdentifiers,2415
397," ",2415
0,=,0
397,"
      ",2415
317,$this,2416
390,->,2416
313,originalEntityData,2416
397," ",2416
0,=,0
397,"
      ",2416
317,$this,2417
390,->,2417
313,entityChangeSets,2417
397," ",2417
0,=,0
397,"
      ",2417
317,$this,2418
390,->,2418
313,entityStates,2418
397," ",2418
0,=,0
397,"
      ",2418
317,$this,2419
390,->,2419
313,scheduledForSynchronization,2419
397," ",2419
0,=,0
397,"
      ",2419
317,$this,2420
390,->,2420
313,entityInsertions,2420
397," ",2420
0,=,0
397,"
      ",2420
317,$this,2421
390,->,2421
313,entityUpdates,2421
397," ",2421
0,=,0
397,"
      ",2421
317,$this,2422
390,->,2422
313,entityDeletions,2422
397," ",2422
0,=,0
397,"
      ",2422
317,$this,2423
390,->,2423
313,collectionDeletions,2423
397," ",2423
0,=,0
397,"
      ",2423
317,$this,2424
390,->,2424
313,collectionUpdates,2424
397," ",2424
0,=,0
397,"
      ",2424
317,$this,2425
390,->,2425
313,extraUpdates,2425
397," ",2425
0,=,0
397,"
      ",2425
317,$this,2426
390,->,2426
313,readOnlyObjects,2426
397," ",2426
0,=,0
397,"
      ",2426
317,$this,2427
390,->,2427
313,visitedCollections,2427
397," ",2427
0,=,0
397,"
      ",2427
317,$this,2428
390,->,2428
313,orphanRemovals,2428
397," ",2428
0,=,0
397," ",2428
377,array,2428
0,(,0
0,),0
0,;,0
397,"

      ",2428
326,if,2430
397," ",2430
0,(,0
317,$this,2430
390,->,2430
313,commitOrderCalculator,2430
397," ",2430
292,!==,2430
397," ",2430
313,null,2430
0,),0
397," ",2430
0,{,0
397,"
        ",2430
317,$this,2431
390,->,2431
313,commitOrderCalculator,2431
390,->,2431
313,clear,2431
0,(,0
0,),0
0,;,0
397,"
      ",2431
0,},0
397,"
    ",2432
0,},0
397," ",2433
310,else,2433
397," ",2433
0,{,0
397,"
      ",2433
317,$visited,2434
397," ",2434
0,=,0
397," ",2434
377,array,2434
0,(,0
0,),0
0,;,0
397,"

      ",2434
334,foreach,2436
397," ",2436
0,(,0
317,$this,2436
390,->,2436
313,identityMap,2436
397," ",2436
338,as,2436
397," ",2436
317,$className,2436
397," ",2436
269,=>,2436
397," ",2436
317,$entities,2436
0,),0
397," ",2436
0,{,0
397,"
        ",2436
326,if,2437
397," ",2437
0,(,0
317,$className,2437
397," ",2437
292,!==,2437
397," ",2437
317,$entityName,2437
0,),0
397," ",2437
0,{,0
397,"
          ",2437
345,continue,2438
0,;,0
397,"
        ",2438
0,},0
397,"

        ",2439
334,foreach,2441
397," ",2441
0,(,0
317,$entities,2441
397," ",2441
338,as,2441
397," ",2441
317,$entity,2441
0,),0
397," ",2441
0,{,0
397,"
          ",2441
317,$this,2442
390,->,2442
313,doDetach,2442
0,(,0
317,$entity,2442
0,",",0
397," ",2442
317,$visited,2442
0,",",0
397," ",2442
313,false,2442
0,),0
0,;,0
397,"
        ",2442
0,},0
397,"
      ",2443
0,},0
397,"
    ",2444
0,},0
397,"

    ",2445
326,if,2447
397," ",2447
0,(,0
317,$this,2447
390,->,2447
313,evm,2447
390,->,2447
313,hasListeners,2447
0,(,0
313,Events,2447
402,::,2447
313,onClear,2447
0,),0
0,),0
397," ",2447
0,{,0
397,"
      ",2447
317,$this,2448
390,->,2448
313,evm,2448
390,->,2448
313,dispatchEvent,2448
0,(,0
313,Events,2448
402,::,2448
313,onClear,2448
0,",",0
397," ",2448
324,new,2448
397," ",2448
316,"Event\OnClearEventArgs",2448
0,(,0
317,$this,2448
390,->,2448
313,em,2448
0,",",0
397," ",2448
317,$entityName,2448
0,),0
0,),0
0,;,0
397,"
    ",2448
0,},0
397,"
  ",2449
0,},0
397,"

  ",2450
393,"/**
   * INTERNAL:
   * Schedules an orphaned entity for removal. The remove() operation will be
   * invoked on that entity at the beginning of the next commit of this
   * UnitOfWork.
   *
   * @param object $entity
   *
   * @return void
   * @ignore
   *
   */",2452
397,"
  ",2463
362,public,2464
397," ",2464
347,function,2464
397," ",2464
313,scheduleOrphanRemoval,2464
0,(,0
317,$entity,2464
0,),0
397,"
  ",2464
0,{,0
397,"
    ",2465
317,$this,2466
390,->,2466
313,orphanRemovals,2466
0,[,0
313,spl_object_hash,2466
0,(,0
317,$entity,2466
0,),0
0,],0
397," ",2466
0,=,0
397," ",2466
317,$entity,2466
0,;,0
397,"
  ",2466
0,},0
397,"

  ",2467
393,"/**
   * INTERNAL:
   * Schedules a complete collection for removal when this UnitOfWork commits.
   *
   * @param PersistentCollection $coll
   *
   * @return void
   */",2469
397,"
  ",2476
362,public,2477
397," ",2477
347,function,2477
397," ",2477
313,scheduleCollectionDeletion,2477
0,(,0
313,PersistentCollection,2477
397," ",2477
317,$coll,2477
0,),0
397,"
  ",2477
0,{,0
397,"
    ",2478
317,$coid,2479
397," ",2479
0,=,0
397," ",2479
313,spl_object_hash,2479
0,(,0
317,$coll,2479
0,),0
0,;,0
397,"

    ",2479
392,"// TODO: if $coll is already scheduled for recreation ... what to do?",2481
397,"
    ",2481
392,"// Just remove $coll from the scheduled recreations?",2482
397,"
    ",2482
326,if,2483
397," ",2483
0,(,0
366,isset,2483
0,(,0
317,$this,2483
390,->,2483
313,collectionUpdates,2483
0,[,0
317,$coid,2483
0,],0
0,),0
0,),0
397," ",2483
0,{,0
397,"
      ",2483
365,unset,2484
0,(,0
317,$this,2484
390,->,2484
313,collectionUpdates,2484
0,[,0
317,$coid,2484
0,],0
0,),0
0,;,0
397,"
    ",2484
0,},0
397,"

    ",2485
317,$this,2487
390,->,2487
313,collectionDeletions,2487
0,[,0
317,$coid,2487
0,],0
397," ",2487
0,=,0
397," ",2487
317,$coll,2487
0,;,0
397,"
  ",2487
0,},0
397,"

  ",2488
393,"/**
   * @param PersistentCollection $coll
   *
   * @return bool
   */",2490
397,"
  ",2494
362,public,2495
397," ",2495
347,function,2495
397," ",2495
313,isCollectionScheduledForDeletion,2495
0,(,0
313,PersistentCollection,2495
397," ",2495
317,$coll,2495
0,),0
397,"
  ",2495
0,{,0
397,"
    ",2496
350,return,2497
397," ",2497
366,isset,2497
0,(,0
317,$this,2497
390,->,2497
313,collectionDeletions,2497
0,[,0
313,spl_object_hash,2497
0,(,0
317,$coll,2497
0,),0
0,],0
0,),0
0,;,0
397,"
  ",2497
0,},0
397,"

  ",2498
393,"/**
   * @param ClassMetadata $class
   *
   * @return \Doctrine\Common\Persistence\ObjectManagerAware|object
   */",2500
397,"
  ",2504
360,private,2505
397," ",2505
347,function,2505
397," ",2505
313,newInstance,2505
0,(,0
317,$class,2505
0,),0
397,"
  ",2505
0,{,0
397,"
    ",2506
317,$entity,2507
397," ",2507
0,=,0
397," ",2507
317,$class,2507
390,->,2507
313,newInstance,2507
0,(,0
0,),0
0,;,0
397,"

    ",2507
326,if,2509
397," ",2509
0,(,0
317,$entity,2509
397," ",2509
298,instanceof,2509
397," ",2509
314,"\Doctrine\Common\Persistence\ObjectManagerAware",2509
0,),0
397," ",2509
0,{,0
397,"
      ",2509
317,$entity,2510
390,->,2510
313,injectObjectManager,2510
0,(,0
317,$this,2510
390,->,2510
313,em,2510
0,",",0
397," ",2510
317,$class,2510
0,),0
0,;,0
397,"
    ",2510
0,},0
397,"

    ",2511
350,return,2513
397," ",2513
317,$entity,2513
0,;,0
397,"
  ",2513
0,},0
397,"

  ",2514
393,"/**
   * INTERNAL:
   * Creates an entity. Used for reconstitution of persistent entities.
   *
   * Internal note: Highly performance-sensitive method.
   *
   * @param string $className The name of the entity class.
   * @param array $data The data for the entity.
   * @param array $hints Any hints to account for during reconstitution/lookup of the entity.
   *
   * @return object The managed entity instance.
   *
   * @ignore
   *
   * @todo Rename: getOrCreateEntity
   */",2516
397,"
  ",2531
362,public,2532
397," ",2532
347,function,2532
397," ",2532
313,createEntity,2532
0,(,0
317,$className,2532
0,",",0
397," ",2532
377,array,2532
397," ",2532
317,$data,2532
0,",",0
397," ",2532
288,&,2532
317,$hints,2532
397," ",2532
0,=,0
397," ",2532
377,array,2532
0,(,0
0,),0
0,),0
397,"
  ",2532
0,{,0
397,"
    ",2533
317,$class,2534
397," ",2534
0,=,0
397," ",2534
317,$this,2534
390,->,2534
313,em,2534
390,->,2534
313,getClassMetadata,2534
0,(,0
317,$className,2534
0,),0
0,;,0
397,"
    ",2534
392,"//$isReadOnly = isset($hints[Query::HINT_READ_ONLY]);",2535
397,"

    ",2535
317,$id,2537
397," ",2537
0,=,0
397," ",2537
317,$this,2537
390,->,2537
313,identifierFlattener,2537
390,->,2537
313,flattenIdentifier,2537
0,(,0
317,$class,2537
0,",",0
397," ",2537
317,$data,2537
0,),0
0,;,0
397,"
    ",2537
317,$idHash,2538
397," ",2538
0,=,0
397," ",2538
313,implode,2538
0,(,0
320,"' '",2538
0,",",0
397," ",2538
317,$id,2538
0,),0
0,;,0
397,"

    ",2538
326,if,2540
397," ",2540
0,(,0
366,isset,2540
0,(,0
317,$this,2540
390,->,2540
313,identityMap,2540
0,[,0
317,$class,2540
390,->,2540
313,rootEntityName,2540
0,],0
0,[,0
317,$idHash,2540
0,],0
0,),0
0,),0
397," ",2540
0,{,0
397,"
      ",2540
317,$entity,2541
397," ",2541
0,=,0
397," ",2541
317,$this,2541
390,->,2541
313,identityMap,2541
0,[,0
317,$class,2541
390,->,2541
313,rootEntityName,2541
0,],0
0,[,0
317,$idHash,2541
0,],0
0,;,0
397,"
      ",2541
317,$oid,2542
397," ",2542
0,=,0
397," ",2542
313,spl_object_hash,2542
0,(,0
317,$entity,2542
0,),0
0,;,0
397,"

      ",2542
326,if,2544
397," ",2544
0,(,0
397,"
        ",2544
366,isset,2545
0,(,0
317,$hints,2545
0,[,0
313,Query,2545
402,::,2545
313,HINT_REFRESH,2545
0,],0
0,),0
397,"
        ",2545
286,&&,2546
397," ",2546
366,isset,2546
0,(,0
317,$hints,2546
0,[,0
313,Query,2546
402,::,2546
313,HINT_REFRESH_ENTITY,2546
0,],0
0,),0
397,"
        ",2546
286,&&,2547
397," ",2547
0,(,0
317,$unmanagedProxy,2547
397," ",2547
0,=,0
397," ",2547
317,$hints,2547
0,[,0
313,Query,2547
402,::,2547
313,HINT_REFRESH_ENTITY,2547
0,],0
0,),0
397," ",2547
292,!==,2547
397," ",2547
317,$entity,2547
397,"
        ",2547
286,&&,2548
397," ",2548
317,$unmanagedProxy,2548
397," ",2548
298,instanceof,2548
397," ",2548
313,Proxy,2548
397,"
        ",2548
286,&&,2549
397," ",2549
317,$this,2549
390,->,2549
313,isIdentifierEquals,2549
0,(,0
317,$unmanagedProxy,2549
0,",",0
397," ",2549
317,$entity,2549
0,),0
397,"
      ",2549
0,),0
397," ",2550
0,{,0
397,"
        ",2550
392,"// DDC-1238 - we have a managed instance, but it isn't the provided one.",2551
397,"
        ",2551
392,"// Therefore we clear its identifier. Also, we must re-fetch metadata since the",2552
397,"
        ",2552
392,"// refreshed object may be anything",2553
397,"

        ",2553
334,foreach,2555
397," ",2555
0,(,0
317,$class,2555
390,->,2555
313,identifier,2555
397," ",2555
338,as,2555
397," ",2555
317,$fieldName,2555
0,),0
397," ",2555
0,{,0
397,"
          ",2555
317,$class,2556
390,->,2556
313,reflFields,2556
0,[,0
317,$fieldName,2556
0,],0
390,->,2556
313,setValue,2556
0,(,0
317,$unmanagedProxy,2556
0,",",0
397," ",2556
313,null,2556
0,),0
0,;,0
397,"
        ",2556
0,},0
397,"

        ",2557
350,return,2559
397," ",2559
317,$unmanagedProxy,2559
0,;,0
397,"
      ",2559
0,},0
397,"

      ",2560
326,if,2562
397," ",2562
0,(,0
317,$entity,2562
397," ",2562
298,instanceof,2562
397," ",2562
313,Proxy,2562
397," ",2562
286,&&,2562
397," ",2562
0,!,0
317,$entity,2562
390,->,2562
313,__isInitialized,2562
0,(,0
0,),0
0,),0
397," ",2562
0,{,0
397,"
        ",2562
317,$entity,2563
390,->,2563
313,__setInitialized,2563
0,(,0
313,true,2563
0,),0
0,;,0
397,"

        ",2563
317,$overrideLocalValues,2565
397," ",2565
0,=,0
397," ",2565
313,true,2565
0,;,0
397,"

        ",2565
326,if,2567
397," ",2567
0,(,0
317,$entity,2567
397," ",2567
298,instanceof,2567
397," ",2567
313,NotifyPropertyChanged,2567
0,),0
397," ",2567
0,{,0
397,"
          ",2567
317,$entity,2568
390,->,2568
313,addPropertyChangedListener,2568
0,(,0
317,$this,2568
0,),0
0,;,0
397,"
        ",2568
0,},0
397,"
      ",2569
0,},0
397," ",2570
310,else,2570
397," ",2570
0,{,0
397,"
        ",2570
317,$overrideLocalValues,2571
397," ",2571
0,=,0
397," ",2571
366,isset,2571
0,(,0
317,$hints,2571
0,[,0
313,Query,2571
402,::,2571
313,HINT_REFRESH,2571
0,],0
0,),0
0,;,0
397,"

        ",2571
392,"// If only a specific entity is set to refresh, check that it's the one",2573
397,"
        ",2573
326,if,2574
397," ",2574
0,(,0
366,isset,2574
0,(,0
317,$hints,2574
0,[,0
313,Query,2574
402,::,2574
313,HINT_REFRESH_ENTITY,2574
0,],0
0,),0
0,),0
397," ",2574
0,{,0
397,"
          ",2574
317,$overrideLocalValues,2575
397," ",2575
0,=,0
397," ",2575
317,$hints,2575
0,[,0
313,Query,2575
402,::,2575
313,HINT_REFRESH_ENTITY,2575
0,],0
397," ",2575
291,===,2575
397," ",2575
317,$entity,2575
0,;,0
397,"
        ",2575
0,},0
397,"
      ",2576
0,},0
397,"

      ",2577
326,if,2579
397," ",2579
0,(,0
317,$overrideLocalValues,2579
0,),0
397," ",2579
0,{,0
397,"
        ",2579
392,"// inject ObjectManager upon refresh.",2580
397,"
        ",2580
326,if,2581
397," ",2581
0,(,0
317,$entity,2581
397," ",2581
298,instanceof,2581
397," ",2581
313,ObjectManagerAware,2581
0,),0
397," ",2581
0,{,0
397,"
          ",2581
317,$entity,2582
390,->,2582
313,injectObjectManager,2582
0,(,0
317,$this,2582
390,->,2582
313,em,2582
0,",",0
397," ",2582
317,$class,2582
0,),0
0,;,0
397,"
        ",2582
0,},0
397,"

        ",2583
317,$this,2585
390,->,2585
313,originalEntityData,2585
0,[,0
317,$oid,2585
0,],0
397," ",2585
0,=,0
397," ",2585
317,$data,2585
0,;,0
397,"
      ",2585
0,},0
397,"
    ",2586
0,},0
397," ",2587
310,else,2587
397," ",2587
0,{,0
397,"
      ",2587
317,$entity,2588
397," ",2588
0,=,0
397," ",2588
317,$this,2588
390,->,2588
313,newInstance,2588
0,(,0
317,$class,2588
0,),0
0,;,0
397,"
      ",2588
317,$oid,2589
397," ",2589
0,=,0
397," ",2589
313,spl_object_hash,2589
0,(,0
317,$entity,2589
0,),0
0,;,0
397,"

      ",2589
317,$this,2591
390,->,2591
313,entityIdentifiers,2591
0,[,0
317,$oid,2591
0,],0
397," ",2591
0,=,0
397," ",2591
317,$id,2591
0,;,0
397,"
      ",2591
317,$this,2592
390,->,2592
313,entityStates,2592
0,[,0
317,$oid,2592
0,],0
397," ",2592
0,=,0
397," ",2592
313,self,2592
402,::,2592
313,STATE_MANAGED,2592
0,;,0
397,"
      ",2592
317,$this,2593
390,->,2593
313,originalEntityData,2593
0,[,0
317,$oid,2593
0,],0
397," ",2593
0,=,0
397," ",2593
317,$data,2593
0,;,0
397,"

      ",2593
317,$this,2595
390,->,2595
313,identityMap,2595
0,[,0
317,$class,2595
390,->,2595
313,rootEntityName,2595
0,],0
0,[,0
317,$idHash,2595
0,],0
397," ",2595
0,=,0
397," ",2595
317,$entity,2595
0,;,0
397,"

      ",2595
326,if,2597
397," ",2597
0,(,0
317,$entity,2597
397," ",2597
298,instanceof,2597
397," ",2597
313,NotifyPropertyChanged,2597
0,),0
397," ",2597
0,{,0
397,"
        ",2597
317,$entity,2598
390,->,2598
313,addPropertyChangedListener,2598
0,(,0
317,$this,2598
0,),0
0,;,0
397,"
      ",2598
0,},0
397,"

      ",2599
317,$overrideLocalValues,2601
397," ",2601
0,=,0
397," ",2601
313,true,2601
0,;,0
397,"
    ",2601
0,},0
397,"

    ",2602
326,if,2604
397," ",2604
0,(,0
0,!,0
317,$overrideLocalValues,2604
0,),0
397," ",2604
0,{,0
397,"
      ",2604
350,return,2605
397," ",2605
317,$entity,2605
0,;,0
397,"
    ",2605
0,},0
397,"

    ",2606
334,foreach,2608
397," ",2608
0,(,0
317,$data,2608
397," ",2608
338,as,2608
397," ",2608
317,$field,2608
397," ",2608
269,=>,2608
397," ",2608
317,$value,2608
0,),0
397," ",2608
0,{,0
397,"
      ",2608
326,if,2609
397," ",2609
0,(,0
366,isset,2609
0,(,0
317,$class,2609
390,->,2609
313,fieldMappings,2609
0,[,0
317,$field,2609
0,],0
0,),0
0,),0
397," ",2609
0,{,0
397,"
        ",2609
317,$class,2610
390,->,2610
313,reflFields,2610
0,[,0
317,$field,2610
0,],0
390,->,2610
313,setValue,2610
0,(,0
317,$entity,2610
0,",",0
397," ",2610
317,$value,2610
0,),0
0,;,0
397,"
      ",2610
0,},0
397,"
    ",2611
0,},0
397,"

    ",2612
392,"// Loading the entity right here, if its in the eager loading map get rid of it there.",2614
397,"
    ",2614
365,unset,2615
0,(,0
317,$this,2615
390,->,2615
313,eagerLoadingEntities,2615
0,[,0
317,$class,2615
390,->,2615
313,rootEntityName,2615
0,],0
0,[,0
317,$idHash,2615
0,],0
0,),0
0,;,0
397,"

    ",2615
326,if,2617
397," ",2617
0,(,0
366,isset,2617
0,(,0
317,$this,2617
390,->,2617
313,eagerLoadingEntities,2617
0,[,0
317,$class,2617
390,->,2617
313,rootEntityName,2617
0,],0
0,),0
397," ",2617
286,&&,2617
397," ",2617
0,!,0
317,$this,2617
390,->,2617
313,eagerLoadingEntities,2617
0,[,0
317,$class,2617
390,->,2617
313,rootEntityName,2617
0,],0
0,),0
397," ",2617
0,{,0
397,"
      ",2617
365,unset,2618
0,(,0
317,$this,2618
390,->,2618
313,eagerLoadingEntities,2618
0,[,0
317,$class,2618
390,->,2618
313,rootEntityName,2618
0,],0
0,),0
0,;,0
397,"
    ",2618
0,},0
397,"

    ",2619
392,"// Properly initialize any unfetched associations, if partial objects are not allowed.",2621
397,"
    ",2621
326,if,2622
397," ",2622
0,(,0
366,isset,2622
0,(,0
317,$hints,2622
0,[,0
313,Query,2622
402,::,2622
313,HINT_FORCE_PARTIAL_LOAD,2622
0,],0
0,),0
0,),0
397," ",2622
0,{,0
397,"
      ",2622
350,return,2623
397," ",2623
317,$entity,2623
0,;,0
397,"
    ",2623
0,},0
397,"

    ",2624
334,foreach,2626
397," ",2626
0,(,0
317,$class,2626
390,->,2626
313,associationMappings,2626
397," ",2626
338,as,2626
397," ",2626
317,$field,2626
397," ",2626
269,=>,2626
397," ",2626
317,$assoc,2626
0,),0
397," ",2626
0,{,0
397,"
      ",2626
392,"// Check if the association is not among the fetch-joined associations already.",2627
397,"
      ",2627
326,if,2628
397," ",2628
0,(,0
366,isset,2628
0,(,0
317,$hints,2628
0,[,0
320,'fetchAlias',2628
0,],0
0,),0
397," ",2628
286,&&,2628
397," ",2628
366,isset,2628
0,(,0
317,$hints,2628
0,[,0
320,'fetched',2628
0,],0
0,[,0
317,$hints,2628
0,[,0
320,'fetchAlias',2628
0,],0
0,],0
0,[,0
317,$field,2628
0,],0
0,),0
0,),0
397," ",2628
0,{,0
397,"
        ",2628
345,continue,2629
0,;,0
397,"
      ",2629
0,},0
397,"

      ",2630
317,$targetClass,2632
397," ",2632
0,=,0
397," ",2632
317,$this,2632
390,->,2632
313,em,2632
390,->,2632
313,getClassMetadata,2632
0,(,0
317,$assoc,2632
0,[,0
320,'targetEntity',2632
0,],0
0,),0
0,;,0
397,"

      ",2632
339,switch,2634
397," ",2634
0,(,0
313,true,2634
0,),0
397," ",2634
0,{,0
397,"
        ",2634
341,case,2635
397," ",2635
0,(,0
317,$assoc,2635
0,[,0
320,'type',2635
0,],0
397," ",2635
287,&,2635
397," ",2635
313,ClassMetadata,2635
402,::,2635
313,TO_ONE,2635
0,),0
0,:,0
397,"
          ",2635
326,if,2636
397," ",2636
0,(,0
0,!,0
317,$assoc,2636
0,[,0
320,'isOwningSide',2636
0,],0
0,),0
397," ",2636
0,{,0
397,"

            ",2636
392,"// use the given entity association",2638
397,"
            ",2638
326,if,2639
397," ",2639
0,(,0
366,isset,2639
0,(,0
317,$data,2639
0,[,0
317,$field,2639
0,],0
0,),0
397," ",2639
286,&&,2639
397," ",2639
313,is_object,2639
0,(,0
317,$data,2639
0,[,0
317,$field,2639
0,],0
0,),0
397," ",2639
286,&&,2639
397," ",2639
366,isset,2639
0,(,0
317,$this,2639
390,->,2639
313,entityStates,2639
0,[,0
313,spl_object_hash,2639
0,(,0
317,$data,2639
0,[,0
317,$field,2639
0,],0
0,),0
0,],0
0,),0
0,),0
397," ",2639
0,{,0
397,"

              ",2639
317,$this,2641
390,->,2641
313,originalEntityData,2641
0,[,0
317,$oid,2641
0,],0
0,[,0
317,$field,2641
0,],0
397," ",2641
0,=,0
397," ",2641
317,$data,2641
0,[,0
317,$field,2641
0,],0
0,;,0
397,"

              ",2641
317,$class,2643
390,->,2643
313,reflFields,2643
0,[,0
317,$field,2643
0,],0
390,->,2643
313,setValue,2643
0,(,0
317,$entity,2643
0,",",0
397," ",2643
317,$data,2643
0,[,0
317,$field,2643
0,],0
0,),0
0,;,0
397,"
              ",2643
317,$targetClass,2644
390,->,2644
313,reflFields,2644
0,[,0
317,$assoc,2644
0,[,0
320,'mappedBy',2644
0,],0
0,],0
390,->,2644
313,setValue,2644
0,(,0
317,$data,2644
0,[,0
317,$field,2644
0,],0
0,",",0
397," ",2644
317,$entity,2644
0,),0
0,;,0
397,"

              ",2644
345,continue,2646
397," ",2646
311,2,2646
0,;,0
397,"
            ",2646
0,},0
397,"

            ",2647
392,"// Inverse side of x-to-one can never be lazy",2649
397,"
            ",2649
317,$class,2650
390,->,2650
313,reflFields,2650
0,[,0
317,$field,2650
0,],0
390,->,2650
313,setValue,2650
0,(,0
317,$entity,2650
0,",",0
397,"
              ",2650
317,$this,2651
390,->,2651
313,getEntityPersister,2651
0,(,0
317,$assoc,2651
0,[,0
320,'targetEntity',2651
0,],0
0,),0
390,->,2651
313,loadOneToOneEntity,2651
0,(,0
317,$assoc,2651
0,",",0
397," ",2651
317,$entity,2651
0,),0
0,),0
0,;,0
397,"

            ",2651
345,continue,2653
397," ",2653
311,2,2653
0,;,0
397,"
          ",2653
0,},0
397,"

          ",2654
392,"// use the entity association",2656
397,"
          ",2656
326,if,2657
397," ",2657
0,(,0
366,isset,2657
0,(,0
317,$data,2657
0,[,0
317,$field,2657
0,],0
0,),0
397," ",2657
286,&&,2657
397," ",2657
313,is_object,2657
0,(,0
317,$data,2657
0,[,0
317,$field,2657
0,],0
0,),0
397," ",2657
286,&&,2657
397," ",2657
366,isset,2657
0,(,0
317,$this,2657
390,->,2657
313,entityStates,2657
0,[,0
313,spl_object_hash,2657
0,(,0
317,$data,2657
0,[,0
317,$field,2657
0,],0
0,),0
0,],0
0,),0
0,),0
397," ",2657
0,{,0
397,"
            ",2657
317,$class,2658
390,->,2658
313,reflFields,2658
0,[,0
317,$field,2658
0,],0
390,->,2658
313,setValue,2658
0,(,0
317,$entity,2658
0,",",0
397," ",2658
317,$data,2658
0,[,0
317,$field,2658
0,],0
0,),0
0,;,0
397,"
            ",2658
317,$this,2659
390,->,2659
313,originalEntityData,2659
0,[,0
317,$oid,2659
0,],0
0,[,0
317,$field,2659
0,],0
397," ",2659
0,=,0
397," ",2659
317,$data,2659
0,[,0
317,$field,2659
0,],0
0,;,0
397,"

            ",2659
345,continue,2661
0,;,0
397,"
          ",2661
0,},0
397,"

          ",2662
317,$associatedId,2664
397," ",2664
0,=,0
397," ",2664
377,array,2664
0,(,0
0,),0
0,;,0
397,"

          ",2664
392,"// TODO: Is this even computed right in all cases of composite keys?",2666
397,"
          ",2666
334,foreach,2667
397," ",2667
0,(,0
317,$assoc,2667
0,[,0
320,'targetToSourceKeyColumns',2667
0,],0
397," ",2667
338,as,2667
397," ",2667
317,$targetColumn,2667
397," ",2667
269,=>,2667
397," ",2667
317,$srcColumn,2667
0,),0
397," ",2667
0,{,0
397,"
            ",2667
317,$joinColumnValue,2668
397," ",2668
0,=,0
397," ",2668
366,isset,2668
0,(,0
317,$data,2668
0,[,0
317,$srcColumn,2668
0,],0
0,),0
397," ",2668
0,?,0
397," ",2668
317,$data,2668
0,[,0
317,$srcColumn,2668
0,],0
397," ",2668
0,:,0
397," ",2668
313,null,2668
0,;,0
397,"

            ",2668
326,if,2670
397," ",2670
0,(,0
317,$joinColumnValue,2670
397," ",2670
292,!==,2670
397," ",2670
313,null,2670
0,),0
397," ",2670
0,{,0
397,"
              ",2670
326,if,2671
397," ",2671
0,(,0
317,$targetClass,2671
390,->,2671
313,containsForeignIdentifier,2671
0,),0
397," ",2671
0,{,0
397,"
                ",2671
317,$associatedId,2672
0,[,0
317,$targetClass,2672
390,->,2672
313,getFieldForColumn,2672
0,(,0
317,$targetColumn,2672
0,),0
0,],0
397," ",2672
0,=,0
397," ",2672
317,$joinColumnValue,2672
0,;,0
397,"
              ",2672
0,},0
397," ",2673
310,else,2673
397," ",2673
0,{,0
397,"
                ",2673
317,$associatedId,2674
0,[,0
317,$targetClass,2674
390,->,2674
313,fieldNames,2674
0,[,0
317,$targetColumn,2674
0,],0
0,],0
397," ",2674
0,=,0
397," ",2674
317,$joinColumnValue,2674
0,;,0
397,"
              ",2674
0,},0
397,"
            ",2675
0,},0
397," ",2676
309,elseif,2676
397," ",2676
0,(,0
317,$targetClass,2676
390,->,2676
313,containsForeignIdentifier,2676
397,"
              ",2676
286,&&,2677
397," ",2677
313,in_array,2677
0,(,0
317,$targetClass,2677
390,->,2677
313,getFieldForColumn,2677
0,(,0
317,$targetColumn,2677
0,),0
0,",",0
397," ",2677
317,$targetClass,2677
390,->,2677
313,identifier,2677
0,",",0
397," ",2677
313,true,2677
0,),0
397,"
            ",2677
0,),0
397," ",2678
0,{,0
397,"
              ",2678
392,"// the missing key is part of target's entity primary key",2679
397,"
              ",2679
317,$associatedId,2680
397," ",2680
0,=,0
397," ",2680
377,array,2680
0,(,0
0,),0
0,;,0
397,"
              ",2680
344,break,2681
0,;,0
397,"
            ",2681
0,},0
397,"
          ",2682
0,},0
397,"

          ",2683
326,if,2685
397," ",2685
0,(,0
0,!,0
317,$associatedId,2685
0,),0
397," ",2685
0,{,0
397,"
            ",2685
392,"// Foreign key is NULL",2686
397,"
            ",2686
317,$class,2687
390,->,2687
313,reflFields,2687
0,[,0
317,$field,2687
0,],0
390,->,2687
313,setValue,2687
0,(,0
317,$entity,2687
0,",",0
397," ",2687
313,null,2687
0,),0
0,;,0
397,"
            ",2687
317,$this,2688
390,->,2688
313,originalEntityData,2688
0,[,0
317,$oid,2688
0,],0
0,[,0
317,$field,2688
0,],0
397," ",2688
0,=,0
397," ",2688
313,null,2688
0,;,0
397,"

            ",2688
345,continue,2690
0,;,0
397,"
          ",2690
0,},0
397,"

          ",2691
326,if,2693
397," ",2693
0,(,0
0,!,0
366,isset,2693
0,(,0
317,$hints,2693
0,[,0
320,'fetchMode',2693
0,],0
0,[,0
317,$class,2693
390,->,2693
313,name,2693
0,],0
0,[,0
317,$field,2693
0,],0
0,),0
0,),0
397," ",2693
0,{,0
397,"
            ",2693
317,$hints,2694
0,[,0
320,'fetchMode',2694
0,],0
0,[,0
317,$class,2694
390,->,2694
313,name,2694
0,],0
0,[,0
317,$field,2694
0,],0
397," ",2694
0,=,0
397," ",2694
317,$assoc,2694
0,[,0
320,'fetch',2694
0,],0
0,;,0
397,"
          ",2694
0,},0
397,"

          ",2695
392,"// Foreign key is set",2697
397,"
          ",2697
392,"// Check identity map first",2698
397,"
          ",2698
392,"// FIXME: Can break easily with composite keys if join column values are in",2699
397,"
          ",2699
392,"//        wrong order. The correct order is the one in ClassMetadata#identifier.",2700
397,"
          ",2700
317,$relatedIdHash,2701
397," ",2701
0,=,0
397," ",2701
313,implode,2701
0,(,0
320,"' '",2701
0,",",0
397," ",2701
317,$associatedId,2701
0,),0
0,;,0
397,"

          ",2701
339,switch,2703
397," ",2703
0,(,0
313,true,2703
0,),0
397," ",2703
0,{,0
397,"
            ",2703
341,case,2704
397," ",2704
0,(,0
366,isset,2704
0,(,0
317,$this,2704
390,->,2704
313,identityMap,2704
0,[,0
317,$targetClass,2704
390,->,2704
313,rootEntityName,2704
0,],0
0,[,0
317,$relatedIdHash,2704
0,],0
0,),0
0,),0
0,:,0
397,"
              ",2704
317,$newValue,2705
397," ",2705
0,=,0
397," ",2705
317,$this,2705
390,->,2705
313,identityMap,2705
0,[,0
317,$targetClass,2705
390,->,2705
313,rootEntityName,2705
0,],0
0,[,0
317,$relatedIdHash,2705
0,],0
0,;,0
397,"

              ",2705
392,"// If this is an uninitialized proxy, we are deferring eager loads,",2707
397,"
              ",2707
392,"// this association is marked as eager fetch, and its an uninitialized proxy (wtf!)",2708
397,"
              ",2708
392,"// then we can append this entity for eager loading!",2709
397,"
              ",2709
326,if,2710
397," ",2710
0,(,0
317,$hints,2710
0,[,0
320,'fetchMode',2710
0,],0
0,[,0
317,$class,2710
390,->,2710
313,name,2710
0,],0
0,[,0
317,$field,2710
0,],0
397," ",2710
289,==,2710
397," ",2710
313,ClassMetadata,2710
402,::,2710
313,FETCH_EAGER,2710
397," ",2710
286,&&,2710
397,"
                ",2710
366,isset,2711
0,(,0
317,$hints,2711
0,[,0
313,self,2711
402,::,2711
313,HINT_DEFEREAGERLOAD,2711
0,],0
0,),0
397," ",2711
286,&&,2711
397,"
                ",2711
0,!,0
317,$targetClass,2712
390,->,2712
313,isIdentifierComposite,2712
397," ",2712
286,&&,2712
397,"
                ",2712
317,$newValue,2713
397," ",2713
298,instanceof,2713
397," ",2713
313,Proxy,2713
397," ",2713
286,&&,2713
397,"
                ",2713
317,$newValue,2714
390,->,2714
313,__isInitialized__,2714
397," ",2714
291,===,2714
397," ",2714
313,false,2714
0,),0
397," ",2714
0,{,0
397,"

                ",2714
317,$this,2716
390,->,2716
313,eagerLoadingEntities,2716
0,[,0
317,$targetClass,2716
390,->,2716
313,rootEntityName,2716
0,],0
0,[,0
317,$relatedIdHash,2716
0,],0
397," ",2716
0,=,0
397," ",2716
313,current,2716
0,(,0
317,$associatedId,2716
0,),0
0,;,0
397,"
              ",2716
0,},0
397,"

              ",2717
344,break,2719
0,;,0
397,"

            ",2719
341,case,2721
397," ",2721
0,(,0
317,$targetClass,2721
390,->,2721
313,subClasses,2721
0,),0
0,:,0
397,"
              ",2721
392,"// If it might be a subtype, it can not be lazy. There isn't even",2722
397,"
              ",2722
392,"// a way to solve this with deferred eager loading, which means putting",2723
397,"
              ",2723
392,"// an entity with subclasses at a *-to-one location is really bad! (performance-wise)",2724
397,"
              ",2724
317,$newValue,2725
397," ",2725
0,=,0
397," ",2725
317,$this,2725
390,->,2725
313,getEntityPersister,2725
0,(,0
317,$assoc,2725
0,[,0
320,'targetEntity',2725
0,],0
0,),0
390,->,2725
313,loadOneToOneEntity,2725
0,(,0
317,$assoc,2725
0,",",0
397," ",2725
317,$entity,2725
0,",",0
397,"
                ",2725
317,$associatedId,2726
0,),0
0,;,0
397,"
              ",2726
344,break,2727
0,;,0
397,"

            ",2727
342,default,2729
0,:,0
397,"
              ",2729
339,switch,2730
397," ",2730
0,(,0
313,true,2730
0,),0
397," ",2730
0,{,0
397,"
                ",2730
392,"// We are negating the condition here. Other cases will assume it is valid!",2731
397,"
                ",2731
341,case,2732
397," ",2732
0,(,0
317,$hints,2732
0,[,0
320,'fetchMode',2732
0,],0
0,[,0
317,$class,2732
390,->,2732
313,name,2732
0,],0
0,[,0
317,$field,2732
0,],0
397," ",2732
292,!==,2732
397," ",2732
313,ClassMetadata,2732
402,::,2732
313,FETCH_EAGER,2732
0,),0
0,:,0
397,"
                  ",2732
317,$newValue,2733
397," ",2733
0,=,0
397," ",2733
317,$this,2733
390,->,2733
313,em,2733
390,->,2733
313,getProxyFactory,2733
0,(,0
0,),0
390,->,2733
313,getProxy,2733
0,(,0
317,$assoc,2733
0,[,0
320,'targetEntity',2733
0,],0
0,",",0
397," ",2733
317,$associatedId,2733
0,),0
0,;,0
397,"
                  ",2733
344,break,2734
0,;,0
397,"

                ",2734
392,"// Deferred eager load only works for single identifier classes",2736
397,"
                ",2736
341,case,2737
397," ",2737
0,(,0
366,isset,2737
0,(,0
317,$hints,2737
0,[,0
313,self,2737
402,::,2737
313,HINT_DEFEREAGERLOAD,2737
0,],0
0,),0
397," ",2737
286,&&,2737
397," ",2737
0,!,0
317,$targetClass,2737
390,->,2737
313,isIdentifierComposite,2737
0,),0
0,:,0
397,"
                  ",2737
392,"// TODO: Is there a faster approach?",2738
397,"
                  ",2738
317,$this,2739
390,->,2739
313,eagerLoadingEntities,2739
0,[,0
317,$targetClass,2739
390,->,2739
313,rootEntityName,2739
0,],0
0,[,0
317,$relatedIdHash,2739
0,],0
397," ",2739
0,=,0
397," ",2739
313,current,2739
0,(,0
317,$associatedId,2739
0,),0
0,;,0
397,"

                  ",2739
317,$newValue,2741
397," ",2741
0,=,0
397," ",2741
317,$this,2741
390,->,2741
313,em,2741
390,->,2741
313,getProxyFactory,2741
0,(,0
0,),0
390,->,2741
313,getProxy,2741
0,(,0
317,$assoc,2741
0,[,0
320,'targetEntity',2741
0,],0
0,",",0
397," ",2741
317,$associatedId,2741
0,),0
0,;,0
397,"
                  ",2741
344,break,2742
0,;,0
397,"

                ",2742
342,default,2744
0,:,0
397,"
                  ",2744
392,"// TODO: This is very imperformant, ignore it?",2745
397,"
                  ",2745
317,$newValue,2746
397," ",2746
0,=,0
397," ",2746
317,$this,2746
390,->,2746
313,em,2746
390,->,2746
313,find,2746
0,(,0
317,$assoc,2746
0,[,0
320,'targetEntity',2746
0,],0
0,",",0
397," ",2746
317,$associatedId,2746
0,),0
0,;,0
397,"
                  ",2746
344,break,2747
0,;,0
397,"
              ",2747
0,},0
397,"

              ",2748
392,"// PERF: Inlined & optimized code from UnitOfWork#registerManaged()",2750
397,"
              ",2750
317,$newValueOid,2751
397," ",2751
0,=,0
397," ",2751
313,spl_object_hash,2751
0,(,0
317,$newValue,2751
0,),0
0,;,0
397,"
              ",2751
317,$this,2752
390,->,2752
313,entityIdentifiers,2752
0,[,0
317,$newValueOid,2752
0,],0
397," ",2752
0,=,0
397," ",2752
317,$associatedId,2752
0,;,0
397,"
              ",2752
317,$this,2753
390,->,2753
313,identityMap,2753
0,[,0
317,$targetClass,2753
390,->,2753
313,rootEntityName,2753
0,],0
0,[,0
317,$relatedIdHash,2753
0,],0
397," ",2753
0,=,0
397," ",2753
317,$newValue,2753
0,;,0
397,"

              ",2753
326,if,2755
397," ",2755
0,(,0
397,"
                ",2755
317,$newValue,2756
397," ",2756
298,instanceof,2756
397," ",2756
313,NotifyPropertyChanged,2756
397," ",2756
286,&&,2756
397,"
                ",2756
0,(,0
0,!,0
317,$newValue,2757
397," ",2757
298,instanceof,2757
397," ",2757
313,Proxy,2757
397," ",2757
285,||,2757
397," ",2757
317,$newValue,2757
390,->,2757
313,__isInitialized,2757
0,(,0
0,),0
0,),0
397,"
              ",2757
0,),0
397," ",2758
0,{,0
397,"
                ",2758
317,$newValue,2759
390,->,2759
313,addPropertyChangedListener,2759
0,(,0
317,$this,2759
0,),0
0,;,0
397,"
              ",2759
0,},0
397,"
              ",2760
317,$this,2761
390,->,2761
313,entityStates,2761
0,[,0
317,$newValueOid,2761
0,],0
397," ",2761
0,=,0
397," ",2761
313,self,2761
402,::,2761
313,STATE_MANAGED,2761
0,;,0
397,"
              ",2761
392,"// make sure that when an proxy is then finally loaded, $this->originalEntityData is set also!",2762
397,"
              ",2762
344,break,2763
0,;,0
397,"
          ",2763
0,},0
397,"

          ",2764
317,$this,2766
390,->,2766
313,originalEntityData,2766
0,[,0
317,$oid,2766
0,],0
0,[,0
317,$field,2766
0,],0
397," ",2766
0,=,0
397," ",2766
317,$newValue,2766
0,;,0
397,"
          ",2766
317,$class,2767
390,->,2767
313,reflFields,2767
0,[,0
317,$field,2767
0,],0
390,->,2767
313,setValue,2767
0,(,0
317,$entity,2767
0,",",0
397," ",2767
317,$newValue,2767
0,),0
0,;,0
397,"

          ",2767
326,if,2769
397," ",2769
0,(,0
317,$assoc,2769
0,[,0
320,'inversedBy',2769
0,],0
397," ",2769
286,&&,2769
397," ",2769
317,$assoc,2769
0,[,0
320,'type',2769
0,],0
397," ",2769
287,&,2769
397," ",2769
313,ClassMetadata,2769
402,::,2769
313,ONE_TO_ONE,2769
0,),0
397," ",2769
0,{,0
397,"
            ",2769
317,$inverseAssoc,2770
397," ",2770
0,=,0
397," ",2770
317,$targetClass,2770
390,->,2770
313,associationMappings,2770
0,[,0
317,$assoc,2770
0,[,0
320,'inversedBy',2770
0,],0
0,],0
0,;,0
397,"
            ",2770
317,$targetClass,2771
390,->,2771
313,reflFields,2771
0,[,0
317,$inverseAssoc,2771
0,[,0
320,'fieldName',2771
0,],0
0,],0
390,->,2771
313,setValue,2771
0,(,0
317,$newValue,2771
0,",",0
397," ",2771
317,$entity,2771
0,),0
0,;,0
397,"
          ",2771
0,},0
397,"

          ",2772
344,break,2774
0,;,0
397,"

        ",2774
342,default,2776
0,:,0
397,"
          ",2776
392,"// Ignore if its a cached collection",2777
397,"
          ",2777
326,if,2778
397," ",2778
0,(,0
366,isset,2778
0,(,0
317,$hints,2778
0,[,0
313,Query,2778
402,::,2778
313,HINT_CACHE_ENABLED,2778
0,],0
0,),0
397," ",2778
286,&&,2778
397," ",2778
317,$class,2778
390,->,2778
313,getFieldValue,2778
0,(,0
317,$entity,2778
0,",",0
397,"
              ",2778
317,$field,2779
0,),0
397," ",2779
298,instanceof,2779
397," ",2779
313,PersistentCollection,2779
0,),0
397," ",2779
0,{,0
397,"
            ",2779
344,break,2780
0,;,0
397,"
          ",2780
0,},0
397,"

          ",2781
392,"// use the given collection",2783
397,"
          ",2783
326,if,2784
397," ",2784
0,(,0
366,isset,2784
0,(,0
317,$data,2784
0,[,0
317,$field,2784
0,],0
0,),0
397," ",2784
286,&&,2784
397," ",2784
317,$data,2784
0,[,0
317,$field,2784
0,],0
397," ",2784
298,instanceof,2784
397," ",2784
313,PersistentCollection,2784
0,),0
397," ",2784
0,{,0
397,"

            ",2784
317,$data,2786
0,[,0
317,$field,2786
0,],0
390,->,2786
313,setOwner,2786
0,(,0
317,$entity,2786
0,",",0
397," ",2786
317,$assoc,2786
0,),0
0,;,0
397,"

            ",2786
317,$class,2788
390,->,2788
313,reflFields,2788
0,[,0
317,$field,2788
0,],0
390,->,2788
313,setValue,2788
0,(,0
317,$entity,2788
0,",",0
397," ",2788
317,$data,2788
0,[,0
317,$field,2788
0,],0
0,),0
0,;,0
397,"
            ",2788
317,$this,2789
390,->,2789
313,originalEntityData,2789
0,[,0
317,$oid,2789
0,],0
0,[,0
317,$field,2789
0,],0
397," ",2789
0,=,0
397," ",2789
317,$data,2789
0,[,0
317,$field,2789
0,],0
0,;,0
397,"

            ",2789
344,break,2791
0,;,0
397,"
          ",2791
0,},0
397,"

          ",2792
392,"// Inject collection",2794
397,"
          ",2794
317,$pColl,2795
397," ",2795
0,=,0
397," ",2795
324,new,2795
397," ",2795
313,PersistentCollection,2795
0,(,0
317,$this,2795
390,->,2795
313,em,2795
0,",",0
397," ",2795
317,$targetClass,2795
0,",",0
397," ",2795
324,new,2795
397," ",2795
313,ArrayCollection,2795
0,),0
0,;,0
397,"
          ",2795
317,$pColl,2796
390,->,2796
313,setOwner,2796
0,(,0
317,$entity,2796
0,",",0
397," ",2796
317,$assoc,2796
0,),0
0,;,0
397,"
          ",2796
317,$pColl,2797
390,->,2797
313,setInitialized,2797
0,(,0
313,false,2797
0,),0
0,;,0
397,"

          ",2797
317,$reflField,2799
397," ",2799
0,=,0
397," ",2799
317,$class,2799
390,->,2799
313,reflFields,2799
0,[,0
317,$field,2799
0,],0
0,;,0
397,"
          ",2799
317,$reflField,2800
390,->,2800
313,setValue,2800
0,(,0
317,$entity,2800
0,",",0
397," ",2800
317,$pColl,2800
0,),0
0,;,0
397,"

          ",2800
326,if,2802
397," ",2802
0,(,0
317,$assoc,2802
0,[,0
320,'fetch',2802
0,],0
397," ",2802
289,==,2802
397," ",2802
313,ClassMetadata,2802
402,::,2802
313,FETCH_EAGER,2802
0,),0
397," ",2802
0,{,0
397,"
            ",2802
317,$this,2803
390,->,2803
313,loadCollection,2803
0,(,0
317,$pColl,2803
0,),0
0,;,0
397,"
            ",2803
317,$pColl,2804
390,->,2804
313,takeSnapshot,2804
0,(,0
0,),0
0,;,0
397,"
          ",2804
0,},0
397,"

          ",2805
317,$this,2807
390,->,2807
313,originalEntityData,2807
0,[,0
317,$oid,2807
0,],0
0,[,0
317,$field,2807
0,],0
397," ",2807
0,=,0
397," ",2807
317,$pColl,2807
0,;,0
397,"
          ",2807
344,break,2808
0,;,0
397,"
      ",2808
0,},0
397,"
    ",2809
0,},0
397,"

    ",2810
326,if,2812
397," ",2812
0,(,0
317,$overrideLocalValues,2812
0,),0
397," ",2812
0,{,0
397,"
      ",2812
392,"// defer invoking of postLoad event to hydration complete step",2813
397,"
      ",2813
317,$this,2814
390,->,2814
313,hydrationCompleteHandler,2814
390,->,2814
313,deferPostLoadInvoking,2814
0,(,0
317,$class,2814
0,",",0
397," ",2814
317,$entity,2814
0,),0
0,;,0
397,"
    ",2814
0,},0
397,"

    ",2815
350,return,2817
397," ",2817
317,$entity,2817
0,;,0
397,"
  ",2817
0,},0
397,"

  ",2818
393,"/**
   * @return void
   */",2820
397,"
  ",2822
362,public,2823
397," ",2823
347,function,2823
397," ",2823
313,triggerEagerLoads,2823
0,(,0
0,),0
397,"
  ",2823
0,{,0
397,"
    ",2824
326,if,2825
397," ",2825
0,(,0
0,!,0
317,$this,2825
390,->,2825
313,eagerLoadingEntities,2825
0,),0
397," ",2825
0,{,0
397,"
      ",2825
350,return,2826
0,;,0
397,"
    ",2826
0,},0
397,"

    ",2827
392,"// avoid infinite recursion",2829
397,"
    ",2829
317,$eagerLoadingEntities,2830
397," ",2830
0,=,0
397," ",2830
317,$this,2830
390,->,2830
313,eagerLoadingEntities,2830
0,;,0
397,"
    ",2830
317,$this,2831
390,->,2831
313,eagerLoadingEntities,2831
397," ",2831
0,=,0
397," ",2831
377,array,2831
0,(,0
0,),0
0,;,0
397,"

    ",2831
334,foreach,2833
397," ",2833
0,(,0
317,$eagerLoadingEntities,2833
397," ",2833
338,as,2833
397," ",2833
317,$entityName,2833
397," ",2833
269,=>,2833
397," ",2833
317,$ids,2833
0,),0
397," ",2833
0,{,0
397,"
      ",2833
326,if,2834
397," ",2834
0,(,0
0,!,0
317,$ids,2834
0,),0
397," ",2834
0,{,0
397,"
        ",2834
345,continue,2835
0,;,0
397,"
      ",2835
0,},0
397,"

      ",2836
317,$class,2838
397," ",2838
0,=,0
397," ",2838
317,$this,2838
390,->,2838
313,em,2838
390,->,2838
313,getClassMetadata,2838
0,(,0
317,$entityName,2838
0,),0
0,;,0
397,"

      ",2838
317,$this,2840
390,->,2840
313,getEntityPersister,2840
0,(,0
317,$entityName,2840
0,),0
390,->,2840
313,loadAll,2840
0,(,0
397,"
        ",2840
313,array_combine,2841
0,(,0
317,$class,2841
390,->,2841
313,identifier,2841
0,",",0
397," ",2841
377,array,2841
0,(,0
313,array_values,2841
0,(,0
317,$ids,2841
0,),0
0,),0
0,),0
397,"
      ",2841
0,),0
0,;,0
397,"
    ",2842
0,},0
397,"
  ",2843
0,},0
397,"

  ",2844
393,"/**
   * Initializes (loads) an uninitialized persistent collection of an entity.
   *
   * @param \Doctrine\ORM\PersistentCollection $collection The collection to initialize.
   *
   * @return void
   *
   * @todo Maybe later move to EntityManager#initialize($proxyOrCollection). See DDC-733.
   */",2846
397,"
  ",2854
362,public,2855
397," ",2855
347,function,2855
397," ",2855
313,loadCollection,2855
0,(,0
313,PersistentCollection,2855
397," ",2855
317,$collection,2855
0,),0
397,"
  ",2855
0,{,0
397,"
    ",2856
317,$assoc,2857
397," ",2857
0,=,0
397," ",2857
317,$collection,2857
390,->,2857
313,getMapping,2857
0,(,0
0,),0
0,;,0
397,"
    ",2857
317,$persister,2858
397," ",2858
0,=,0
397," ",2858
317,$this,2858
390,->,2858
313,getEntityPersister,2858
0,(,0
317,$assoc,2858
0,[,0
320,'targetEntity',2858
0,],0
0,),0
0,;,0
397,"

    ",2858
339,switch,2860
397," ",2860
0,(,0
317,$assoc,2860
0,[,0
320,'type',2860
0,],0
0,),0
397," ",2860
0,{,0
397,"
      ",2860
341,case,2861
397," ",2861
313,ClassMetadata,2861
402,::,2861
313,ONE_TO_MANY,2861
0,:,0
397,"
        ",2861
317,$persister,2862
390,->,2862
313,loadOneToManyCollection,2862
0,(,0
317,$assoc,2862
0,",",0
397," ",2862
317,$collection,2862
390,->,2862
313,getOwner,2862
0,(,0
0,),0
0,",",0
397," ",2862
317,$collection,2862
0,),0
0,;,0
397,"
        ",2862
344,break,2863
0,;,0
397,"

      ",2863
341,case,2865
397," ",2865
313,ClassMetadata,2865
402,::,2865
313,MANY_TO_MANY,2865
0,:,0
397,"
        ",2865
317,$persister,2866
390,->,2866
313,loadManyToManyCollection,2866
0,(,0
317,$assoc,2866
0,",",0
397," ",2866
317,$collection,2866
390,->,2866
313,getOwner,2866
0,(,0
0,),0
0,",",0
397," ",2866
317,$collection,2866
0,),0
0,;,0
397,"
        ",2866
344,break,2867
0,;,0
397,"
    ",2867
0,},0
397,"

    ",2868
317,$collection,2870
390,->,2870
313,setInitialized,2870
0,(,0
313,true,2870
0,),0
0,;,0
397,"
  ",2870
0,},0
397,"

  ",2871
393,"/**
   * Gets the identity map of the UnitOfWork.
   *
   * @return array
   */",2873
397,"
  ",2877
362,public,2878
397," ",2878
347,function,2878
397," ",2878
313,getIdentityMap,2878
0,(,0
0,),0
397,"
  ",2878
0,{,0
397,"
    ",2879
350,return,2880
397," ",2880
317,$this,2880
390,->,2880
313,identityMap,2880
0,;,0
397,"
  ",2880
0,},0
397,"

  ",2881
393,"/**
   * Gets the original data of an entity. The original data is the data that was
   * present at the time the entity was reconstituted from the database.
   *
   * @param object $entity
   *
   * @return array
   */",2883
397,"
  ",2890
362,public,2891
397," ",2891
347,function,2891
397," ",2891
313,getOriginalEntityData,2891
0,(,0
317,$entity,2891
0,),0
397,"
  ",2891
0,{,0
397,"
    ",2892
317,$oid,2893
397," ",2893
0,=,0
397," ",2893
313,spl_object_hash,2893
0,(,0
317,$entity,2893
0,),0
0,;,0
397,"

    ",2893
326,if,2895
397," ",2895
0,(,0
366,isset,2895
0,(,0
317,$this,2895
390,->,2895
313,originalEntityData,2895
0,[,0
317,$oid,2895
0,],0
0,),0
0,),0
397," ",2895
0,{,0
397,"
      ",2895
350,return,2896
397," ",2896
317,$this,2896
390,->,2896
313,originalEntityData,2896
0,[,0
317,$oid,2896
0,],0
0,;,0
397,"
    ",2896
0,},0
397,"

    ",2897
350,return,2899
397," ",2899
377,array,2899
0,(,0
0,),0
0,;,0
397,"
  ",2899
0,},0
397,"

  ",2900
393,"/**
   * @param object $entity
   * @param array $data
   *
   * @return void
   * @ignore
   *
   */",2902
397,"
  ",2909
362,public,2910
397," ",2910
347,function,2910
397," ",2910
313,setOriginalEntityData,2910
0,(,0
317,$entity,2910
0,",",0
397," ",2910
377,array,2910
397," ",2910
317,$data,2910
0,),0
397,"
  ",2910
0,{,0
397,"
    ",2911
317,$this,2912
390,->,2912
313,originalEntityData,2912
0,[,0
313,spl_object_hash,2912
0,(,0
317,$entity,2912
0,),0
0,],0
397," ",2912
0,=,0
397," ",2912
317,$data,2912
0,;,0
397,"
  ",2912
0,},0
397,"

  ",2913
393,"/**
   * INTERNAL:
   * Sets a property value of the original data array of an entity.
   *
   * @param string $oid
   * @param string $property
   * @param mixed $value
   *
   * @return void
   * @ignore
   *
   */",2915
397,"
  ",2926
362,public,2927
397," ",2927
347,function,2927
397," ",2927
313,setOriginalEntityProperty,2927
0,(,0
317,$oid,2927
0,",",0
397," ",2927
317,$property,2927
0,",",0
397," ",2927
317,$value,2927
0,),0
397,"
  ",2927
0,{,0
397,"
    ",2928
317,$this,2929
390,->,2929
313,originalEntityData,2929
0,[,0
317,$oid,2929
0,],0
0,[,0
317,$property,2929
0,],0
397," ",2929
0,=,0
397," ",2929
317,$value,2929
0,;,0
397,"
  ",2929
0,},0
397,"

  ",2930
393,"/**
   * Gets the identifier of an entity.
   * The returned value is always an array of identifier values. If the entity
   * has a composite identifier then the identifier values are in the same
   * order as the identifier field names as returned by ClassMetadata#getIdentifierFieldNames().
   *
   * @param object $entity
   *
   * @return array The identifier values.
   */",2932
397,"
  ",2941
362,public,2942
397," ",2942
347,function,2942
397," ",2942
313,getEntityIdentifier,2942
0,(,0
317,$entity,2942
0,),0
397,"
  ",2942
0,{,0
397,"
    ",2943
350,return,2944
397," ",2944
317,$this,2944
390,->,2944
313,entityIdentifiers,2944
0,[,0
313,spl_object_hash,2944
0,(,0
317,$entity,2944
0,),0
0,],0
0,;,0
397,"
  ",2944
0,},0
397,"

  ",2945
393,"/**
   * Processes an entity instance to extract their identifier values.
   *
   * @param object $entity The entity instance.
   *
   * @return mixed A scalar value.
   *
   * @throws \Doctrine\ORM\ORMInvalidArgumentException
   */",2947
397,"
  ",2955
362,public,2956
397," ",2956
347,function,2956
397," ",2956
313,getSingleIdentifierValue,2956
0,(,0
317,$entity,2956
0,),0
397,"
  ",2956
0,{,0
397,"
    ",2957
317,$class,2958
397," ",2958
0,=,0
397," ",2958
317,$this,2958
390,->,2958
313,em,2958
390,->,2958
313,getClassMetadata,2958
0,(,0
313,get_class,2958
0,(,0
317,$entity,2958
0,),0
0,),0
0,;,0
397,"

    ",2958
326,if,2960
397," ",2960
0,(,0
317,$class,2960
390,->,2960
313,isIdentifierComposite,2960
0,),0
397," ",2960
0,{,0
397,"
      ",2960
258,throw,2961
397," ",2961
313,ORMInvalidArgumentException,2961
402,::,2961
313,invalidCompositeIdentifier,2961
0,(,0
0,),0
0,;,0
397,"
    ",2961
0,},0
397,"

    ",2962
317,$values,2964
397," ",2964
0,=,0
397," ",2964
317,$this,2964
390,->,2964
313,isInIdentityMap,2964
0,(,0
317,$entity,2964
0,),0
397,"
      ",2964
0,?,0
397," ",2965
317,$this,2965
390,->,2965
313,getEntityIdentifier,2965
0,(,0
317,$entity,2965
0,),0
397,"
      ",2965
0,:,0
397," ",2966
317,$class,2966
390,->,2966
313,getIdentifierValues,2966
0,(,0
317,$entity,2966
0,),0
0,;,0
397,"

    ",2966
350,return,2968
397," ",2968
366,isset,2968
0,(,0
317,$values,2968
0,[,0
317,$class,2968
390,->,2968
313,identifier,2968
0,[,0
311,0,2968
0,],0
0,],0
0,),0
397," ",2968
0,?,0
397," ",2968
317,$values,2968
0,[,0
317,$class,2968
390,->,2968
313,identifier,2968
0,[,0
311,0,2968
0,],0
0,],0
397," ",2968
0,:,0
397," ",2968
313,null,2968
0,;,0
397,"
  ",2968
0,},0
397,"

  ",2969
393,"/**
   * Tries to find an entity with the given identifier in the identity map of
   * this UnitOfWork.
   *
   * @param mixed $id The entity identifier to look for.
   * @param string $rootClassName The name of the root class of the mapped entity hierarchy.
   *
   * @return object|bool Returns the entity with the specified identifier if it exists in
   *                     this UnitOfWork, FALSE otherwise.
   */",2971
397,"
  ",2980
362,public,2981
397," ",2981
347,function,2981
397," ",2981
313,tryGetById,2981
0,(,0
317,$id,2981
0,",",0
397," ",2981
317,$rootClassName,2981
0,),0
397,"
  ",2981
0,{,0
397,"
    ",2982
317,$idHash,2983
397," ",2983
0,=,0
397," ",2983
313,implode,2983
0,(,0
320,"' '",2983
0,",",0
397," ",2983
302,(array),2983
397," ",2983
317,$id,2983
0,),0
0,;,0
397,"

    ",2983
326,if,2985
397," ",2985
0,(,0
366,isset,2985
0,(,0
317,$this,2985
390,->,2985
313,identityMap,2985
0,[,0
317,$rootClassName,2985
0,],0
0,[,0
317,$idHash,2985
0,],0
0,),0
0,),0
397," ",2985
0,{,0
397,"
      ",2985
350,return,2986
397," ",2986
317,$this,2986
390,->,2986
313,identityMap,2986
0,[,0
317,$rootClassName,2986
0,],0
0,[,0
317,$idHash,2986
0,],0
0,;,0
397,"
    ",2986
0,},0
397,"

    ",2987
350,return,2989
397," ",2989
313,false,2989
0,;,0
397,"
  ",2989
0,},0
397,"

  ",2990
393,"/**
   * Schedules an entity for dirty-checking at commit-time.
   *
   * @param object $entity The entity to schedule for dirty-checking.
   *
   * @return void
   *
   * @todo Rename: scheduleForSynchronization
   */",2992
397,"
  ",3000
362,public,3001
397," ",3001
347,function,3001
397," ",3001
313,scheduleForDirtyCheck,3001
0,(,0
317,$entity,3001
0,),0
397,"
  ",3001
0,{,0
397,"
    ",3002
317,$rootClassName,3003
397," ",3003
0,=,0
397," ",3003
317,$this,3003
390,->,3003
313,em,3003
390,->,3003
313,getClassMetadata,3003
0,(,0
313,get_class,3003
0,(,0
317,$entity,3003
0,),0
0,),0
390,->,3003
313,rootEntityName,3003
0,;,0
397,"

    ",3003
317,$this,3005
390,->,3005
313,scheduledForSynchronization,3005
0,[,0
317,$rootClassName,3005
0,],0
0,[,0
313,spl_object_hash,3005
0,(,0
317,$entity,3005
0,),0
0,],0
397," ",3005
0,=,0
397," ",3005
317,$entity,3005
0,;,0
397,"
  ",3005
0,},0
397,"

  ",3006
393,"/**
   * Checks whether the UnitOfWork has any pending insertions.
   *
   * @return boolean TRUE if this UnitOfWork has pending insertions, FALSE otherwise.
   */",3008
397,"
  ",3012
362,public,3013
397," ",3013
347,function,3013
397," ",3013
313,hasPendingInsertions,3013
0,(,0
0,),0
397,"
  ",3013
0,{,0
397,"
    ",3014
350,return,3015
397," ",3015
0,!,0
367,empty,3015
0,(,0
317,$this,3015
390,->,3015
313,entityInsertions,3015
0,),0
0,;,0
397,"
  ",3015
0,},0
397,"

  ",3016
393,"/**
   * Calculates the size of the UnitOfWork. The size of the UnitOfWork is the
   * number of entities in the identity map.
   *
   * @return integer
   */",3018
397,"
  ",3023
362,public,3024
397," ",3024
347,function,3024
397," ",3024
313,size,3024
0,(,0
0,),0
397,"
  ",3024
0,{,0
397,"
    ",3025
317,$countArray,3026
397," ",3026
0,=,0
397," ",3026
313,array_map,3026
0,(,0
347,function,3026
397," ",3026
0,(,0
317,$item,3026
0,),0
397," ",3026
0,{,0
397,"
      ",3026
350,return,3027
397," ",3027
313,count,3027
0,(,0
317,$item,3027
0,),0
0,;,0
397,"
    ",3027
0,},0
0,",",0
397," ",3028
317,$this,3028
390,->,3028
313,identityMap,3028
0,),0
0,;,0
397,"

    ",3028
350,return,3030
397," ",3030
313,array_sum,3030
0,(,0
317,$countArray,3030
0,),0
0,;,0
397,"
  ",3030
0,},0
397,"

  ",3031
393,"/**
   * Gets the EntityPersister for an Entity.
   *
   * @param string $entityName The name of the Entity.
   *
   * @return \Doctrine\ORM\Persisters\Entity\EntityPersister
   */",3033
397,"
  ",3039
362,public,3040
397," ",3040
347,function,3040
397," ",3040
313,getEntityPersister,3040
0,(,0
317,$entityName,3040
0,),0
397,"
  ",3040
0,{,0
397,"
    ",3041
326,if,3042
397," ",3042
0,(,0
366,isset,3042
0,(,0
317,$this,3042
390,->,3042
313,persisters,3042
0,[,0
317,$entityName,3042
0,],0
0,),0
0,),0
397," ",3042
0,{,0
397,"
      ",3042
350,return,3043
397," ",3043
317,$this,3043
390,->,3043
313,persisters,3043
0,[,0
317,$entityName,3043
0,],0
0,;,0
397,"
    ",3043
0,},0
397,"

    ",3044
317,$class,3046
397," ",3046
0,=,0
397," ",3046
317,$this,3046
390,->,3046
313,em,3046
390,->,3046
313,getClassMetadata,3046
0,(,0
317,$entityName,3046
0,),0
0,;,0
397,"

    ",3046
339,switch,3048
397," ",3048
0,(,0
313,true,3048
0,),0
397," ",3048
0,{,0
397,"
      ",3048
341,case,3049
397," ",3049
0,(,0
317,$class,3049
390,->,3049
313,isInheritanceTypeNone,3049
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3049
317,$persister,3050
397," ",3050
0,=,0
397," ",3050
324,new,3050
397," ",3050
313,BasicEntityPersister,3050
0,(,0
317,$this,3050
390,->,3050
313,em,3050
0,",",0
397," ",3050
317,$class,3050
0,),0
0,;,0
397,"
        ",3050
344,break,3051
0,;,0
397,"

      ",3051
341,case,3053
397," ",3053
0,(,0
317,$class,3053
390,->,3053
313,isInheritanceTypeSingleTable,3053
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3053
317,$persister,3054
397," ",3054
0,=,0
397," ",3054
324,new,3054
397," ",3054
313,SingleTablePersister,3054
0,(,0
317,$this,3054
390,->,3054
313,em,3054
0,",",0
397," ",3054
317,$class,3054
0,),0
0,;,0
397,"
        ",3054
344,break,3055
0,;,0
397,"

      ",3055
341,case,3057
397," ",3057
0,(,0
317,$class,3057
390,->,3057
313,isInheritanceTypeJoined,3057
0,(,0
0,),0
0,),0
0,:,0
397,"
        ",3057
317,$persister,3058
397," ",3058
0,=,0
397," ",3058
324,new,3058
397," ",3058
313,JoinedSubclassPersister,3058
0,(,0
317,$this,3058
390,->,3058
313,em,3058
0,",",0
397," ",3058
317,$class,3058
0,),0
0,;,0
397,"
        ",3058
344,break,3059
0,;,0
397,"

      ",3059
342,default,3061
0,:,0
397,"
        ",3061
258,throw,3062
397," ",3062
324,new,3062
397," ",3062
314,"\RuntimeException",3062
0,(,0
320,"'No persister found for entity.'",3062
0,),0
0,;,0
397,"
    ",3062
0,},0
397,"

    ",3063
326,if,3065
397," ",3065
0,(,0
317,$this,3065
390,->,3065
313,hasCache,3065
397," ",3065
286,&&,3065
397," ",3065
317,$class,3065
390,->,3065
313,cache,3065
397," ",3065
292,!==,3065
397," ",3065
313,null,3065
0,),0
397," ",3065
0,{,0
397,"
      ",3065
317,$persister,3066
397," ",3066
0,=,0
397," ",3066
317,$this,3066
390,->,3066
313,em,3066
390,->,3066
313,getConfiguration,3066
0,(,0
0,),0
397,"
        ",3066
390,->,3067
313,getSecondLevelCacheConfiguration,3067
0,(,0
0,),0
397,"
        ",3067
390,->,3068
313,getCacheFactory,3068
0,(,0
0,),0
397,"
        ",3068
390,->,3069
313,buildCachedEntityPersister,3069
0,(,0
317,$this,3069
390,->,3069
313,em,3069
0,",",0
397," ",3069
317,$persister,3069
0,",",0
397," ",3069
317,$class,3069
0,),0
0,;,0
397,"
    ",3069
0,},0
397,"

    ",3070
317,$this,3072
390,->,3072
313,persisters,3072
0,[,0
317,$entityName,3072
0,],0
397," ",3072
0,=,0
397," ",3072
317,$persister,3072
0,;,0
397,"

    ",3072
350,return,3074
397," ",3074
317,$this,3074
390,->,3074
313,persisters,3074
0,[,0
317,$entityName,3074
0,],0
0,;,0
397,"
  ",3074
0,},0
397,"

  ",3075
393,"/**
   * Gets a collection persister for a collection-valued association.
   *
   * @param array $association
   *
   * @return \Doctrine\ORM\Persisters\Collection\CollectionPersister
   */",3077
397,"
  ",3083
362,public,3084
397," ",3084
347,function,3084
397," ",3084
313,getCollectionPersister,3084
0,(,0
377,array,3084
397," ",3084
317,$association,3084
0,),0
397,"
  ",3084
0,{,0
397,"
    ",3085
317,$role,3086
397," ",3086
0,=,0
397," ",3086
366,isset,3086
0,(,0
317,$association,3086
0,[,0
320,'cache',3086
0,],0
0,),0
397,"
      ",3086
0,?,0
397," ",3087
317,$association,3087
0,[,0
320,'sourceEntity',3087
0,],0
397," ",3087
0,.,0
397," ",3087
320,'::',3087
397," ",3087
0,.,0
397," ",3087
317,$association,3087
0,[,0
320,'fieldName',3087
0,],0
397,"
      ",3087
0,:,0
397," ",3088
317,$association,3088
0,[,0
320,'type',3088
0,],0
0,;,0
397,"

    ",3088
326,if,3090
397," ",3090
0,(,0
366,isset,3090
0,(,0
317,$this,3090
390,->,3090
313,collectionPersisters,3090
0,[,0
317,$role,3090
0,],0
0,),0
0,),0
397," ",3090
0,{,0
397,"
      ",3090
350,return,3091
397," ",3091
317,$this,3091
390,->,3091
313,collectionPersisters,3091
0,[,0
317,$role,3091
0,],0
0,;,0
397,"
    ",3091
0,},0
397,"

    ",3092
317,$persister,3094
397," ",3094
0,=,0
397," ",3094
313,ClassMetadata,3094
402,::,3094
313,ONE_TO_MANY,3094
397," ",3094
291,===,3094
397," ",3094
317,$association,3094
0,[,0
320,'type',3094
0,],0
397,"
      ",3094
0,?,0
397," ",3095
324,new,3095
397," ",3095
313,OneToManyPersister,3095
0,(,0
317,$this,3095
390,->,3095
313,em,3095
0,),0
397,"
      ",3095
0,:,0
397," ",3096
324,new,3096
397," ",3096
313,ManyToManyPersister,3096
0,(,0
317,$this,3096
390,->,3096
313,em,3096
0,),0
0,;,0
397,"

    ",3096
326,if,3098
397," ",3098
0,(,0
317,$this,3098
390,->,3098
313,hasCache,3098
397," ",3098
286,&&,3098
397," ",3098
366,isset,3098
0,(,0
317,$association,3098
0,[,0
320,'cache',3098
0,],0
0,),0
0,),0
397," ",3098
0,{,0
397,"
      ",3098
317,$persister,3099
397," ",3099
0,=,0
397," ",3099
317,$this,3099
390,->,3099
313,em,3099
390,->,3099
313,getConfiguration,3099
0,(,0
0,),0
397,"
        ",3099
390,->,3100
313,getSecondLevelCacheConfiguration,3100
0,(,0
0,),0
397,"
        ",3100
390,->,3101
313,getCacheFactory,3101
0,(,0
0,),0
397,"
        ",3101
390,->,3102
313,buildCachedCollectionPersister,3102
0,(,0
317,$this,3102
390,->,3102
313,em,3102
0,",",0
397," ",3102
317,$persister,3102
0,",",0
397," ",3102
317,$association,3102
0,),0
0,;,0
397,"
    ",3102
0,},0
397,"

    ",3103
317,$this,3105
390,->,3105
313,collectionPersisters,3105
0,[,0
317,$role,3105
0,],0
397," ",3105
0,=,0
397," ",3105
317,$persister,3105
0,;,0
397,"

    ",3105
350,return,3107
397," ",3107
317,$this,3107
390,->,3107
313,collectionPersisters,3107
0,[,0
317,$role,3107
0,],0
0,;,0
397,"
  ",3107
0,},0
397,"

  ",3108
393,"/**
   * INTERNAL:
   * Registers an entity as managed.
   *
   * @param object $entity The entity.
   * @param array $id The identifier values.
   * @param array $data The original entity data.
   *
   * @return void
   */",3110
397,"
  ",3119
362,public,3120
397," ",3120
347,function,3120
397," ",3120
313,registerManaged,3120
0,(,0
317,$entity,3120
0,",",0
397," ",3120
377,array,3120
397," ",3120
317,$id,3120
0,",",0
397," ",3120
377,array,3120
397," ",3120
317,$data,3120
0,),0
397,"
  ",3120
0,{,0
397,"
    ",3121
317,$oid,3122
397," ",3122
0,=,0
397," ",3122
313,spl_object_hash,3122
0,(,0
317,$entity,3122
0,),0
0,;,0
397,"

    ",3122
317,$this,3124
390,->,3124
313,entityIdentifiers,3124
0,[,0
317,$oid,3124
0,],0
397," ",3124
0,=,0
397," ",3124
317,$id,3124
0,;,0
397,"
    ",3124
317,$this,3125
390,->,3125
313,entityStates,3125
0,[,0
317,$oid,3125
0,],0
397," ",3125
0,=,0
397," ",3125
313,self,3125
402,::,3125
313,STATE_MANAGED,3125
0,;,0
397,"
    ",3125
317,$this,3126
390,->,3126
313,originalEntityData,3126
0,[,0
317,$oid,3126
0,],0
397," ",3126
0,=,0
397," ",3126
317,$data,3126
0,;,0
397,"

    ",3126
317,$this,3128
390,->,3128
313,addToIdentityMap,3128
0,(,0
317,$entity,3128
0,),0
0,;,0
397,"

    ",3128
326,if,3130
397," ",3130
0,(,0
317,$entity,3130
397," ",3130
298,instanceof,3130
397," ",3130
313,NotifyPropertyChanged,3130
397," ",3130
286,&&,3130
397," ",3130
0,(,0
0,!,0
317,$entity,3130
397," ",3130
298,instanceof,3130
397," ",3130
313,Proxy,3130
397," ",3130
285,||,3130
397," ",3130
317,$entity,3130
390,->,3130
313,__isInitialized,3130
0,(,0
0,),0
0,),0
0,),0
397," ",3130
0,{,0
397,"
      ",3130
317,$entity,3131
390,->,3131
313,addPropertyChangedListener,3131
0,(,0
317,$this,3131
0,),0
0,;,0
397,"
    ",3131
0,},0
397,"
  ",3132
0,},0
397,"

  ",3133
393,"/**
   * INTERNAL:
   * Clears the property changeset of the entity with the given OID.
   *
   * @param string $oid The entity's OID.
   *
   * @return void
   */",3135
397,"
  ",3142
362,public,3143
397," ",3143
347,function,3143
397," ",3143
313,clearEntityChangeSet,3143
0,(,0
317,$oid,3143
0,),0
397,"
  ",3143
0,{,0
397,"
    ",3144
317,$this,3145
390,->,3145
313,entityChangeSets,3145
0,[,0
317,$oid,3145
0,],0
397," ",3145
0,=,0
397," ",3145
377,array,3145
0,(,0
0,),0
0,;,0
397,"
  ",3145
0,},0
397,"

  ",3146
392,"/* PropertyChangedListener implementation */",3148
397,"

  ",3148
393,"/**
   * Notifies this UnitOfWork of a property change in an entity.
   *
   * @param object $entity The entity that owns the property.
   * @param string $propertyName The name of the property that changed.
   * @param mixed $oldValue The old value of the property.
   * @param mixed $newValue The new value of the property.
   *
   * @return void
   */",3150
397,"
  ",3159
362,public,3160
397," ",3160
347,function,3160
397," ",3160
313,propertyChanged,3160
0,(,0
317,$entity,3160
0,",",0
397," ",3160
317,$propertyName,3160
0,",",0
397," ",3160
317,$oldValue,3160
0,",",0
397," ",3160
317,$newValue,3160
0,),0
397,"
  ",3160
0,{,0
397,"
    ",3161
317,$oid,3162
397," ",3162
0,=,0
397," ",3162
313,spl_object_hash,3162
0,(,0
317,$entity,3162
0,),0
0,;,0
397,"
    ",3162
317,$class,3163
397," ",3163
0,=,0
397," ",3163
317,$this,3163
390,->,3163
313,em,3163
390,->,3163
313,getClassMetadata,3163
0,(,0
313,get_class,3163
0,(,0
317,$entity,3163
0,),0
0,),0
0,;,0
397,"

    ",3163
317,$isAssocField,3165
397," ",3165
0,=,0
397," ",3165
366,isset,3165
0,(,0
317,$class,3165
390,->,3165
313,associationMappings,3165
0,[,0
317,$propertyName,3165
0,],0
0,),0
0,;,0
397,"

    ",3165
326,if,3167
397," ",3167
0,(,0
0,!,0
317,$isAssocField,3167
397," ",3167
286,&&,3167
397," ",3167
0,!,0
366,isset,3167
0,(,0
317,$class,3167
390,->,3167
313,fieldMappings,3167
0,[,0
317,$propertyName,3167
0,],0
0,),0
0,),0
397," ",3167
0,{,0
397,"
      ",3167
350,return,3168
0,;,0
397," ",3168
392,"// ignore non-persistent fields",3168
397,"
    ",3168
0,},0
397,"

    ",3169
392,"// Update changeset and mark entity for synchronization",3171
397,"
    ",3171
317,$this,3172
390,->,3172
313,entityChangeSets,3172
0,[,0
317,$oid,3172
0,],0
0,[,0
317,$propertyName,3172
0,],0
397," ",3172
0,=,0
397," ",3172
377,array,3172
0,(,0
317,$oldValue,3172
0,",",0
397," ",3172
317,$newValue,3172
0,),0
0,;,0
397,"

    ",3172
326,if,3174
397," ",3174
0,(,0
0,!,0
366,isset,3174
0,(,0
317,$this,3174
390,->,3174
313,scheduledForSynchronization,3174
0,[,0
317,$class,3174
390,->,3174
313,rootEntityName,3174
0,],0
0,[,0
317,$oid,3174
0,],0
0,),0
0,),0
397," ",3174
0,{,0
397,"
      ",3174
317,$this,3175
390,->,3175
313,scheduleForDirtyCheck,3175
0,(,0
317,$entity,3175
0,),0
0,;,0
397,"
    ",3175
0,},0
397,"
  ",3176
0,},0
397,"

  ",3177
393,"/**
   * Gets the currently scheduled entity insertions in this UnitOfWork.
   *
   * @return array
   */",3179
397,"
  ",3183
362,public,3184
397," ",3184
347,function,3184
397," ",3184
313,getScheduledEntityInsertions,3184
0,(,0
0,),0
397,"
  ",3184
0,{,0
397,"
    ",3185
350,return,3186
397," ",3186
317,$this,3186
390,->,3186
313,entityInsertions,3186
0,;,0
397,"
  ",3186
0,},0
397,"

  ",3187
393,"/**
   * Gets the currently scheduled entity updates in this UnitOfWork.
   *
   * @return array
   */",3189
397,"
  ",3193
362,public,3194
397," ",3194
347,function,3194
397," ",3194
313,getScheduledEntityUpdates,3194
0,(,0
0,),0
397,"
  ",3194
0,{,0
397,"
    ",3195
350,return,3196
397," ",3196
317,$this,3196
390,->,3196
313,entityUpdates,3196
0,;,0
397,"
  ",3196
0,},0
397,"

  ",3197
393,"/**
   * Gets the currently scheduled entity deletions in this UnitOfWork.
   *
   * @return array
   */",3199
397,"
  ",3203
362,public,3204
397," ",3204
347,function,3204
397," ",3204
313,getScheduledEntityDeletions,3204
0,(,0
0,),0
397,"
  ",3204
0,{,0
397,"
    ",3205
350,return,3206
397," ",3206
317,$this,3206
390,->,3206
313,entityDeletions,3206
0,;,0
397,"
  ",3206
0,},0
397,"

  ",3207
393,"/**
   * Gets the currently scheduled complete collection deletions
   *
   * @return array
   */",3209
397,"
  ",3213
362,public,3214
397," ",3214
347,function,3214
397," ",3214
313,getScheduledCollectionDeletions,3214
0,(,0
0,),0
397,"
  ",3214
0,{,0
397,"
    ",3215
350,return,3216
397," ",3216
317,$this,3216
390,->,3216
313,collectionDeletions,3216
0,;,0
397,"
  ",3216
0,},0
397,"

  ",3217
393,"/**
   * Gets the currently scheduled collection inserts, updates and deletes.
   *
   * @return array
   */",3219
397,"
  ",3223
362,public,3224
397," ",3224
347,function,3224
397," ",3224
313,getScheduledCollectionUpdates,3224
0,(,0
0,),0
397,"
  ",3224
0,{,0
397,"
    ",3225
350,return,3226
397," ",3226
317,$this,3226
390,->,3226
313,collectionUpdates,3226
0,;,0
397,"
  ",3226
0,},0
397,"

  ",3227
393,"/**
   * Helper method to initialize a lazy loading proxy or persistent collection.
   *
   * @param object $obj
   *
   * @return void
   */",3229
397,"
  ",3235
362,public,3236
397," ",3236
347,function,3236
397," ",3236
313,initializeObject,3236
0,(,0
317,$obj,3236
0,),0
397,"
  ",3236
0,{,0
397,"
    ",3237
326,if,3238
397," ",3238
0,(,0
317,$obj,3238
397," ",3238
298,instanceof,3238
397," ",3238
313,Proxy,3238
0,),0
397," ",3238
0,{,0
397,"
      ",3238
317,$obj,3239
390,->,3239
313,__load,3239
0,(,0
0,),0
0,;,0
397,"

      ",3239
350,return,3241
0,;,0
397,"
    ",3241
0,},0
397,"

    ",3242
326,if,3244
397," ",3244
0,(,0
317,$obj,3244
397," ",3244
298,instanceof,3244
397," ",3244
313,PersistentCollection,3244
0,),0
397," ",3244
0,{,0
397,"
      ",3244
317,$obj,3245
390,->,3245
313,initialize,3245
0,(,0
0,),0
0,;,0
397,"
    ",3245
0,},0
397,"
  ",3246
0,},0
397,"

  ",3247
393,"/**
   * Helper method to show an object as string.
   *
   * @param object $obj
   *
   * @return string
   */",3249
397,"
  ",3255
360,private,3256
397," ",3256
357,static,3256
397," ",3256
347,function,3256
397," ",3256
313,objToStr,3256
0,(,0
317,$obj,3256
0,),0
397,"
  ",3256
0,{,0
397,"
    ",3257
350,return,3258
397," ",3258
313,method_exists,3258
0,(,0
317,$obj,3258
0,",",0
397," ",3258
320,'__toString',3258
0,),0
397," ",3258
0,?,0
397," ",3258
301,(string),3258
397," ",3258
317,$obj,3258
397," ",3258
0,:,0
397," ",3258
313,get_class,3258
0,(,0
317,$obj,3258
0,),0
397," ",3258
0,.,0
397," ",3258
320,'@',3258
397," ",3258
0,.,0
397," ",3258
313,spl_object_hash,3258
0,(,0
317,$obj,3258
0,),0
0,;,0
397,"
  ",3258
0,},0
397,"

  ",3259
393,"/**
   * Marks an entity as read-only so that it will not be considered for updates during UnitOfWork#commit().
   *
   * This operation cannot be undone as some parts of the UnitOfWork now keep gathering information
   * on this object that might be necessary to perform a correct update.
   *
   * @param object $object
   *
   * @return void
   *
   * @throws ORMInvalidArgumentException
   */",3261
397,"
  ",3272
362,public,3273
397," ",3273
347,function,3273
397," ",3273
313,markReadOnly,3273
0,(,0
317,$object,3273
0,),0
397,"
  ",3273
0,{,0
397,"
    ",3274
326,if,3275
397," ",3275
0,(,0
0,!,0
313,is_object,3275
0,(,0
317,$object,3275
0,),0
397," ",3275
285,||,3275
397," ",3275
0,!,0
317,$this,3275
390,->,3275
313,isInIdentityMap,3275
0,(,0
317,$object,3275
0,),0
0,),0
397," ",3275
0,{,0
397,"
      ",3275
258,throw,3276
397," ",3276
313,ORMInvalidArgumentException,3276
402,::,3276
313,readOnlyRequiresManagedEntity,3276
0,(,0
317,$object,3276
0,),0
0,;,0
397,"
    ",3276
0,},0
397,"

    ",3277
317,$this,3279
390,->,3279
313,readOnlyObjects,3279
0,[,0
313,spl_object_hash,3279
0,(,0
317,$object,3279
0,),0
0,],0
397," ",3279
0,=,0
397," ",3279
313,true,3279
0,;,0
397,"
  ",3279
0,},0
397,"

  ",3280
393,"/**
   * Is this entity read only?
   *
   * @param object $object
   *
   * @return bool
   *
   * @throws ORMInvalidArgumentException
   */",3282
397,"
  ",3290
362,public,3291
397," ",3291
347,function,3291
397," ",3291
313,isReadOnly,3291
0,(,0
317,$object,3291
0,),0
397,"
  ",3291
0,{,0
397,"
    ",3292
326,if,3293
397," ",3293
0,(,0
0,!,0
313,is_object,3293
0,(,0
317,$object,3293
0,),0
0,),0
397," ",3293
0,{,0
397,"
      ",3293
258,throw,3294
397," ",3294
313,ORMInvalidArgumentException,3294
402,::,3294
313,readOnlyRequiresManagedEntity,3294
0,(,0
317,$object,3294
0,),0
0,;,0
397,"
    ",3294
0,},0
397,"

    ",3295
350,return,3297
397," ",3297
366,isset,3297
0,(,0
317,$this,3297
390,->,3297
313,readOnlyObjects,3297
0,[,0
313,spl_object_hash,3297
0,(,0
317,$object,3297
0,),0
0,],0
0,),0
0,;,0
397,"
  ",3297
0,},0
397,"

  ",3298
393,"/**
   * Perform whatever processing is encapsulated here after completion of the transaction.
   */",3300
397,"
  ",3302
360,private,3303
397," ",3303
347,function,3303
397," ",3303
313,afterTransactionComplete,3303
0,(,0
0,),0
397,"
  ",3303
0,{,0
397,"
    ",3304
326,if,3305
397," ",3305
0,(,0
0,!,0
317,$this,3305
390,->,3305
313,hasCache,3305
0,),0
397," ",3305
0,{,0
397,"
      ",3305
350,return,3306
0,;,0
397,"
    ",3306
0,},0
397,"

    ",3307
334,foreach,3309
397," ",3309
0,(,0
317,$this,3309
390,->,3309
313,persisters,3309
397," ",3309
338,as,3309
397," ",3309
317,$persister,3309
0,),0
397," ",3309
0,{,0
397,"
      ",3309
326,if,3310
397," ",3310
0,(,0
317,$persister,3310
397," ",3310
298,instanceof,3310
397," ",3310
313,CachedPersister,3310
0,),0
397," ",3310
0,{,0
397,"
        ",3310
317,$persister,3311
390,->,3311
313,afterTransactionComplete,3311
0,(,0
0,),0
0,;,0
397,"
      ",3311
0,},0
397,"
    ",3312
0,},0
397,"

    ",3313
334,foreach,3315
397," ",3315
0,(,0
317,$this,3315
390,->,3315
313,collectionPersisters,3315
397," ",3315
338,as,3315
397," ",3315
317,$persister,3315
0,),0
397," ",3315
0,{,0
397,"
      ",3315
326,if,3316
397," ",3316
0,(,0
317,$persister,3316
397," ",3316
298,instanceof,3316
397," ",3316
313,CachedPersister,3316
0,),0
397," ",3316
0,{,0
397,"
        ",3316
317,$persister,3317
390,->,3317
313,afterTransactionComplete,3317
0,(,0
0,),0
0,;,0
397,"
      ",3317
0,},0
397,"
    ",3318
0,},0
397,"
  ",3319
0,},0
397,"

  ",3320
393,"/**
   * Perform whatever processing is encapsulated here after completion of the rolled-back.
   */",3322
397,"
  ",3324
360,private,3325
397," ",3325
347,function,3325
397," ",3325
313,afterTransactionRolledBack,3325
0,(,0
0,),0
397,"
  ",3325
0,{,0
397,"
    ",3326
326,if,3327
397," ",3327
0,(,0
0,!,0
317,$this,3327
390,->,3327
313,hasCache,3327
0,),0
397," ",3327
0,{,0
397,"
      ",3327
350,return,3328
0,;,0
397,"
    ",3328
0,},0
397,"

    ",3329
334,foreach,3331
397," ",3331
0,(,0
317,$this,3331
390,->,3331
313,persisters,3331
397," ",3331
338,as,3331
397," ",3331
317,$persister,3331
0,),0
397," ",3331
0,{,0
397,"
      ",3331
326,if,3332
397," ",3332
0,(,0
317,$persister,3332
397," ",3332
298,instanceof,3332
397," ",3332
313,CachedPersister,3332
0,),0
397," ",3332
0,{,0
397,"
        ",3332
317,$persister,3333
390,->,3333
313,afterTransactionRolledBack,3333
0,(,0
0,),0
0,;,0
397,"
      ",3333
0,},0
397,"
    ",3334
0,},0
397,"

    ",3335
334,foreach,3337
397," ",3337
0,(,0
317,$this,3337
390,->,3337
313,collectionPersisters,3337
397," ",3337
338,as,3337
397," ",3337
317,$persister,3337
0,),0
397," ",3337
0,{,0
397,"
      ",3337
326,if,3338
397," ",3338
0,(,0
317,$persister,3338
397," ",3338
298,instanceof,3338
397," ",3338
313,CachedPersister,3338
0,),0
397," ",3338
0,{,0
397,"
        ",3338
317,$persister,3339
390,->,3339
313,afterTransactionRolledBack,3339
0,(,0
0,),0
0,;,0
397,"
      ",3339
0,},0
397,"
    ",3340
0,},0
397,"
  ",3341
0,},0
397,"

  ",3342
360,private,3344
397," ",3344
347,function,3344
397," ",3344
313,dispatchOnFlushEvent,3344
0,(,0
0,),0
397,"
  ",3344
0,{,0
397,"
    ",3345
326,if,3346
397," ",3346
0,(,0
317,$this,3346
390,->,3346
313,evm,3346
390,->,3346
313,hasListeners,3346
0,(,0
313,Events,3346
402,::,3346
313,onFlush,3346
0,),0
0,),0
397," ",3346
0,{,0
397,"
      ",3346
317,$this,3347
390,->,3347
313,evm,3347
390,->,3347
313,dispatchEvent,3347
0,(,0
313,Events,3347
402,::,3347
313,onFlush,3347
0,",",0
397," ",3347
324,new,3347
397," ",3347
313,OnFlushEventArgs,3347
0,(,0
317,$this,3347
390,->,3347
313,em,3347
0,),0
0,),0
0,;,0
397,"
    ",3347
0,},0
397,"
  ",3348
0,},0
397,"

  ",3349
360,private,3351
397," ",3351
347,function,3351
397," ",3351
313,dispatchPostFlushEvent,3351
0,(,0
0,),0
397,"
  ",3351
0,{,0
397,"
    ",3352
326,if,3353
397," ",3353
0,(,0
317,$this,3353
390,->,3353
313,evm,3353
390,->,3353
313,hasListeners,3353
0,(,0
313,Events,3353
402,::,3353
313,postFlush,3353
0,),0
0,),0
397," ",3353
0,{,0
397,"
      ",3353
317,$this,3354
390,->,3354
313,evm,3354
390,->,3354
313,dispatchEvent,3354
0,(,0
313,Events,3354
402,::,3354
313,postFlush,3354
0,",",0
397," ",3354
324,new,3354
397," ",3354
313,PostFlushEventArgs,3354
0,(,0
317,$this,3354
390,->,3354
313,em,3354
0,),0
0,),0
0,;,0
397,"
    ",3354
0,},0
397,"
  ",3355
0,},0
397,"

  ",3356
393,"/**
   * Verifies if two given entities actually are the same based on identifier comparison
   *
   * @param object $entity1
   * @param object $entity2
   *
   * @return bool
   */",3358
397,"
  ",3365
360,private,3366
397," ",3366
347,function,3366
397," ",3366
313,isIdentifierEquals,3366
0,(,0
317,$entity1,3366
0,",",0
397," ",3366
317,$entity2,3366
0,),0
397,"
  ",3366
0,{,0
397,"
    ",3367
326,if,3368
397," ",3368
0,(,0
317,$entity1,3368
397," ",3368
291,===,3368
397," ",3368
317,$entity2,3368
0,),0
397," ",3368
0,{,0
397,"
      ",3368
350,return,3369
397," ",3369
313,true,3369
0,;,0
397,"
    ",3369
0,},0
397,"

    ",3370
317,$class,3372
397," ",3372
0,=,0
397," ",3372
317,$this,3372
390,->,3372
313,em,3372
390,->,3372
313,getClassMetadata,3372
0,(,0
313,get_class,3372
0,(,0
317,$entity1,3372
0,),0
0,),0
0,;,0
397,"

    ",3372
326,if,3374
397," ",3374
0,(,0
317,$class,3374
397," ",3374
292,!==,3374
397," ",3374
317,$this,3374
390,->,3374
313,em,3374
390,->,3374
313,getClassMetadata,3374
0,(,0
313,get_class,3374
0,(,0
317,$entity2,3374
0,),0
0,),0
0,),0
397," ",3374
0,{,0
397,"
      ",3374
350,return,3375
397," ",3375
313,false,3375
0,;,0
397,"
    ",3375
0,},0
397,"

    ",3376
317,$oid1,3378
397," ",3378
0,=,0
397," ",3378
313,spl_object_hash,3378
0,(,0
317,$entity1,3378
0,),0
0,;,0
397,"
    ",3378
317,$oid2,3379
397," ",3379
0,=,0
397," ",3379
313,spl_object_hash,3379
0,(,0
317,$entity2,3379
0,),0
0,;,0
397,"

    ",3379
317,$id1,3381
397," ",3381
0,=,0
397," ",3381
366,isset,3381
0,(,0
317,$this,3381
390,->,3381
313,entityIdentifiers,3381
0,[,0
317,$oid1,3381
0,],0
0,),0
397,"
      ",3381
0,?,0
397," ",3382
317,$this,3382
390,->,3382
313,entityIdentifiers,3382
0,[,0
317,$oid1,3382
0,],0
397,"
      ",3382
0,:,0
397," ",3383
317,$this,3383
390,->,3383
313,identifierFlattener,3383
390,->,3383
313,flattenIdentifier,3383
0,(,0
317,$class,3383
0,",",0
397," ",3383
317,$class,3383
390,->,3383
313,getIdentifierValues,3383
0,(,0
317,$entity1,3383
0,),0
0,),0
0,;,0
397,"
    ",3383
317,$id2,3384
397," ",3384
0,=,0
397," ",3384
366,isset,3384
0,(,0
317,$this,3384
390,->,3384
313,entityIdentifiers,3384
0,[,0
317,$oid2,3384
0,],0
0,),0
397,"
      ",3384
0,?,0
397," ",3385
317,$this,3385
390,->,3385
313,entityIdentifiers,3385
0,[,0
317,$oid2,3385
0,],0
397,"
      ",3385
0,:,0
397," ",3386
317,$this,3386
390,->,3386
313,identifierFlattener,3386
390,->,3386
313,flattenIdentifier,3386
0,(,0
317,$class,3386
0,",",0
397," ",3386
317,$class,3386
390,->,3386
313,getIdentifierValues,3386
0,(,0
317,$entity2,3386
0,),0
0,),0
0,;,0
397,"

    ",3386
350,return,3388
397," ",3388
317,$id1,3388
397," ",3388
291,===,3388
397," ",3388
317,$id2,3388
397," ",3388
285,||,3388
397," ",3388
313,implode,3388
0,(,0
320,"' '",3388
0,",",0
397," ",3388
317,$id1,3388
0,),0
397," ",3388
291,===,3388
397," ",3388
313,implode,3388
0,(,0
320,"' '",3388
0,",",0
397," ",3388
317,$id2,3388
0,),0
0,;,0
397,"
  ",3388
0,},0
397,"

  ",3389
393,"/**
   * @param object $entity
   * @param object $managedCopy
   *
   * @throws ORMException
   * @throws OptimisticLockException
   * @throws TransactionRequiredException
   */",3391
397,"
  ",3398
360,private,3399
397," ",3399
347,function,3399
397," ",3399
313,mergeEntityStateIntoManagedCopy,3399
0,(,0
317,$entity,3399
0,",",0
397," ",3399
317,$managedCopy,3399
0,),0
397,"
  ",3399
0,{,0
397,"
    ",3400
317,$class,3401
397," ",3401
0,=,0
397," ",3401
317,$this,3401
390,->,3401
313,em,3401
390,->,3401
313,getClassMetadata,3401
0,(,0
313,get_class,3401
0,(,0
317,$entity,3401
0,),0
0,),0
0,;,0
397,"

    ",3401
334,foreach,3403
397," ",3403
0,(,0
317,$this,3403
390,->,3403
313,reflectionPropertiesGetter,3403
390,->,3403
313,getProperties,3403
0,(,0
317,$class,3403
390,->,3403
313,name,3403
0,),0
397," ",3403
338,as,3403
397," ",3403
317,$prop,3403
0,),0
397," ",3403
0,{,0
397,"
      ",3403
317,$name,3404
397," ",3404
0,=,0
397," ",3404
317,$prop,3404
390,->,3404
313,name,3404
0,;,0
397,"

      ",3404
317,$prop,3406
390,->,3406
313,setAccessible,3406
0,(,0
313,true,3406
0,),0
0,;,0
397,"

      ",3406
326,if,3408
397," ",3408
0,(,0
0,!,0
366,isset,3408
0,(,0
317,$class,3408
390,->,3408
313,associationMappings,3408
0,[,0
317,$name,3408
0,],0
0,),0
0,),0
397," ",3408
0,{,0
397,"
        ",3408
326,if,3409
397," ",3409
0,(,0
0,!,0
317,$class,3409
390,->,3409
313,isIdentifier,3409
0,(,0
317,$name,3409
0,),0
0,),0
397," ",3409
0,{,0
397,"
          ",3409
317,$prop,3410
390,->,3410
313,setValue,3410
0,(,0
317,$managedCopy,3410
0,",",0
397," ",3410
317,$prop,3410
390,->,3410
313,getValue,3410
0,(,0
317,$entity,3410
0,),0
0,),0
0,;,0
397,"
        ",3410
0,},0
397,"
      ",3411
0,},0
397," ",3412
310,else,3412
397," ",3412
0,{,0
397,"
        ",3412
317,$assoc2,3413
397," ",3413
0,=,0
397," ",3413
317,$class,3413
390,->,3413
313,associationMappings,3413
0,[,0
317,$name,3413
0,],0
0,;,0
397,"

        ",3413
326,if,3415
397," ",3415
0,(,0
317,$assoc2,3415
0,[,0
320,'type',3415
0,],0
397," ",3415
287,&,3415
397," ",3415
313,ClassMetadata,3415
402,::,3415
313,TO_ONE,3415
0,),0
397," ",3415
0,{,0
397,"
          ",3415
317,$other,3416
397," ",3416
0,=,0
397," ",3416
317,$prop,3416
390,->,3416
313,getValue,3416
0,(,0
317,$entity,3416
0,),0
0,;,0
397,"
          ",3416
326,if,3417
397," ",3417
0,(,0
317,$other,3417
397," ",3417
291,===,3417
397," ",3417
313,null,3417
0,),0
397," ",3417
0,{,0
397,"
            ",3417
317,$prop,3418
390,->,3418
313,setValue,3418
0,(,0
317,$managedCopy,3418
0,",",0
397," ",3418
313,null,3418
0,),0
0,;,0
397,"
          ",3418
0,},0
397," ",3419
310,else,3419
397," ",3419
0,{,0
397,"
            ",3419
326,if,3420
397," ",3420
0,(,0
317,$other,3420
397," ",3420
298,instanceof,3420
397," ",3420
313,Proxy,3420
397," ",3420
286,&&,3420
397," ",3420
0,!,0
317,$other,3420
390,->,3420
313,__isInitialized,3420
0,(,0
0,),0
0,),0
397," ",3420
0,{,0
397,"
              ",3420
392,"// do not merge fields marked lazy that have not been fetched.",3421
397,"
              ",3421
345,continue,3422
0,;,0
397,"
            ",3422
0,},0
397,"

            ",3423
326,if,3425
397," ",3425
0,(,0
0,!,0
317,$assoc2,3425
0,[,0
320,'isCascadeMerge',3425
0,],0
0,),0
397," ",3425
0,{,0
397,"
              ",3425
326,if,3426
397," ",3426
0,(,0
317,$this,3426
390,->,3426
313,getEntityState,3426
0,(,0
317,$other,3426
0,),0
397," ",3426
291,===,3426
397," ",3426
313,self,3426
402,::,3426
313,STATE_DETACHED,3426
0,),0
397," ",3426
0,{,0
397,"
                ",3426
317,$targetClass,3427
397," ",3427
0,=,0
397," ",3427
317,$this,3427
390,->,3427
313,em,3427
390,->,3427
313,getClassMetadata,3427
0,(,0
317,$assoc2,3427
0,[,0
320,'targetEntity',3427
0,],0
0,),0
0,;,0
397,"
                ",3427
317,$relatedId,3428
397," ",3428
0,=,0
397," ",3428
317,$targetClass,3428
390,->,3428
313,getIdentifierValues,3428
0,(,0
317,$other,3428
0,),0
0,;,0
397,"

                ",3428
326,if,3430
397," ",3430
0,(,0
317,$targetClass,3430
390,->,3430
313,subClasses,3430
0,),0
397," ",3430
0,{,0
397,"
                  ",3430
317,$other,3431
397," ",3431
0,=,0
397," ",3431
317,$this,3431
390,->,3431
313,em,3431
390,->,3431
313,find,3431
0,(,0
317,$targetClass,3431
390,->,3431
313,name,3431
0,",",0
397," ",3431
317,$relatedId,3431
0,),0
0,;,0
397,"
                ",3431
0,},0
397," ",3432
310,else,3432
397," ",3432
0,{,0
397,"
                  ",3432
317,$other,3433
397," ",3433
0,=,0
397," ",3433
317,$this,3433
390,->,3433
313,em,3433
390,->,3433
313,getProxyFactory,3433
0,(,0
0,),0
390,->,3433
313,getProxy,3433
0,(,0
397,"
                    ",3433
317,$assoc2,3434
0,[,0
320,'targetEntity',3434
0,],0
0,",",0
397,"
                    ",3434
317,$relatedId,3435
397,"
                  ",3435
0,),0
0,;,0
397,"
                  ",3436
317,$this,3437
390,->,3437
313,registerManaged,3437
0,(,0
317,$other,3437
0,",",0
397," ",3437
317,$relatedId,3437
0,",",0
397," ",3437
377,array,3437
0,(,0
0,),0
0,),0
0,;,0
397,"
                ",3437
0,},0
397,"
              ",3438
0,},0
397,"

              ",3439
317,$prop,3441
390,->,3441
313,setValue,3441
0,(,0
317,$managedCopy,3441
0,",",0
397," ",3441
317,$other,3441
0,),0
0,;,0
397,"
            ",3441
0,},0
397,"
          ",3442
0,},0
397,"
        ",3443
0,},0
397," ",3444
310,else,3444
397," ",3444
0,{,0
397,"
          ",3444
317,$mergeCol,3445
397," ",3445
0,=,0
397," ",3445
317,$prop,3445
390,->,3445
313,getValue,3445
0,(,0
317,$entity,3445
0,),0
0,;,0
397,"

          ",3445
326,if,3447
397," ",3447
0,(,0
317,$mergeCol,3447
397," ",3447
298,instanceof,3447
397," ",3447
313,PersistentCollection,3447
397," ",3447
286,&&,3447
397," ",3447
0,!,0
317,$mergeCol,3447
390,->,3447
313,isInitialized,3447
0,(,0
0,),0
0,),0
397," ",3447
0,{,0
397,"
            ",3447
392,"// do not merge fields marked lazy that have not been fetched.",3448
397,"
            ",3448
392,"// keep the lazy persistent collection of the managed copy.",3449
397,"
            ",3449
345,continue,3450
0,;,0
397,"
          ",3450
0,},0
397,"

          ",3451
317,$managedCol,3453
397," ",3453
0,=,0
397," ",3453
317,$prop,3453
390,->,3453
313,getValue,3453
0,(,0
317,$managedCopy,3453
0,),0
0,;,0
397,"

          ",3453
326,if,3455
397," ",3455
0,(,0
0,!,0
317,$managedCol,3455
0,),0
397," ",3455
0,{,0
397,"
            ",3455
317,$managedCol,3456
397," ",3456
0,=,0
397," ",3456
324,new,3456
397," ",3456
313,PersistentCollection,3456
0,(,0
397,"
              ",3456
317,$this,3457
390,->,3457
313,em,3457
0,",",0
397,"
              ",3457
317,$this,3458
390,->,3458
313,em,3458
390,->,3458
313,getClassMetadata,3458
0,(,0
317,$assoc2,3458
0,[,0
320,'targetEntity',3458
0,],0
0,),0
0,",",0
397,"
              ",3458
324,new,3459
397," ",3459
313,ArrayCollection,3459
397,"
            ",3459
0,),0
0,;,0
397,"
            ",3460
317,$managedCol,3461
390,->,3461
313,setOwner,3461
0,(,0
317,$managedCopy,3461
0,",",0
397," ",3461
317,$assoc2,3461
0,),0
0,;,0
397,"
            ",3461
317,$prop,3462
390,->,3462
313,setValue,3462
0,(,0
317,$managedCopy,3462
0,",",0
397," ",3462
317,$managedCol,3462
0,),0
0,;,0
397,"

            ",3462
317,$this,3464
390,->,3464
313,originalEntityData,3464
0,[,0
313,spl_object_hash,3464
0,(,0
317,$entity,3464
0,),0
0,],0
0,[,0
317,$name,3464
0,],0
397," ",3464
0,=,0
397," ",3464
317,$managedCol,3464
0,;,0
397,"
          ",3464
0,},0
397,"

          ",3465
326,if,3467
397," ",3467
0,(,0
317,$assoc2,3467
0,[,0
320,'isCascadeMerge',3467
0,],0
0,),0
397," ",3467
0,{,0
397,"
            ",3467
317,$managedCol,3468
390,->,3468
313,initialize,3468
0,(,0
0,),0
0,;,0
397,"

            ",3468
392,"// clear and set dirty a managed collection if its not also the same collection to merge from.",3470
397,"
            ",3470
326,if,3471
397," ",3471
0,(,0
0,!,0
317,$managedCol,3471
390,->,3471
313,isEmpty,3471
0,(,0
0,),0
397," ",3471
286,&&,3471
397," ",3471
317,$managedCol,3471
397," ",3471
292,!==,3471
397," ",3471
317,$mergeCol,3471
0,),0
397," ",3471
0,{,0
397,"
              ",3471
317,$managedCol,3472
390,->,3472
313,unwrap,3472
0,(,0
0,),0
390,->,3472
313,clear,3472
0,(,0
0,),0
0,;,0
397,"
              ",3472
317,$managedCol,3473
390,->,3473
313,setDirty,3473
0,(,0
313,true,3473
0,),0
0,;,0
397,"

              ",3473
326,if,3475
397," ",3475
0,(,0
317,$assoc2,3475
0,[,0
320,'isOwningSide',3475
0,],0
397,"
                ",3475
286,&&,3476
397," ",3476
317,$assoc2,3476
0,[,0
320,'type',3476
0,],0
397," ",3476
289,==,3476
397," ",3476
313,ClassMetadata,3476
402,::,3476
313,MANY_TO_MANY,3476
397,"
                ",3476
286,&&,3477
397," ",3477
317,$class,3477
390,->,3477
313,isChangeTrackingNotify,3477
0,(,0
0,),0
397,"
              ",3477
0,),0
397," ",3478
0,{,0
397,"
                ",3478
317,$this,3479
390,->,3479
313,scheduleForDirtyCheck,3479
0,(,0
317,$managedCopy,3479
0,),0
0,;,0
397,"
              ",3479
0,},0
397,"
            ",3480
0,},0
397,"
          ",3481
0,},0
397,"
        ",3482
0,},0
397,"
      ",3483
0,},0
397,"

      ",3484
326,if,3486
397," ",3486
0,(,0
317,$class,3486
390,->,3486
313,isChangeTrackingNotify,3486
0,(,0
0,),0
0,),0
397," ",3486
0,{,0
397,"
        ",3486
392,"// Just treat all properties as changed, there is no other choice.",3487
397,"
        ",3487
317,$this,3488
390,->,3488
313,propertyChanged,3488
0,(,0
317,$managedCopy,3488
0,",",0
397," ",3488
317,$name,3488
0,",",0
397," ",3488
313,null,3488
0,",",0
397," ",3488
317,$prop,3488
390,->,3488
313,getValue,3488
0,(,0
317,$managedCopy,3488
0,),0
0,),0
0,;,0
397,"
      ",3488
0,},0
397,"
    ",3489
0,},0
397,"
  ",3490
0,},0
397,"

  ",3491
393,"/**
   * This method called by hydrators, and indicates that hydrator totally completed current hydration cycle.
   * Unit of work able to fire deferred events, related to loading events here.
   *
   * @internal should be called internally from object hydrators
   */",3493
397,"
  ",3498
362,public,3499
397," ",3499
347,function,3499
397," ",3499
313,hydrationComplete,3499
0,(,0
0,),0
397,"
  ",3499
0,{,0
397,"
    ",3500
317,$this,3501
390,->,3501
313,hydrationCompleteHandler,3501
390,->,3501
313,hydrationComplete,3501
0,(,0
0,),0
0,;,0
397,"
  ",3501
0,},0
397,"
",3502
0,},0
